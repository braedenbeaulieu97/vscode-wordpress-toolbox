{"Class: Automatic_Upgrader_Skin":{"prefix":"Automatic_Upgrader_Skin","body":"Automatic_Upgrader_Skin","description":"Upgrader Skin for Automatic WordPress Upgrades."},"Class: Bulk_Plugin_Upgrader_Skin":{"prefix":"Bulk_Plugin_Upgrader_Skin","body":"Bulk_Plugin_Upgrader_Skin","description":"Bulk Plugin Upgrader Skin for WordPress Plugin Upgrades."},"Class: Bulk_Theme_Upgrader_Skin":{"prefix":"Bulk_Theme_Upgrader_Skin","body":"Bulk_Theme_Upgrader_Skin","description":"Bulk Theme Upgrader Skin for WordPress Theme Upgrades."},"Class: Bulk_Upgrader_Skin":{"prefix":"Bulk_Upgrader_Skin","body":"Bulk_Upgrader_Skin","description":"Generic Bulk Upgrader Skin for WordPress Upgrades."},"Class: Core_Upgrader":{"prefix":"Core_Upgrader","body":"Core_Upgrader","description":"Core class used for updating core."},"Class: Custom_Background":{"prefix":"Custom_Background","body":"Custom_Background","description":"The custom background class."},"Class: Custom_Image_Header":{"prefix":"Custom_Image_Header","body":"Custom_Image_Header","description":"The custom header image class."},"Class: File_Upload_Upgrader":{"prefix":"File_Upload_Upgrader","body":"File_Upload_Upgrader","description":"Core class used for handling file uploads."},"Class: ftp_pure":{"prefix":"ftp_pure","body":"ftp_pure","description":"FTP implementation using fsockopen to connect."},"Class: ftp_sockets":{"prefix":"ftp_sockets","body":"ftp_sockets","description":"Socket Based FTP implementation"},"Class: ftp_base":{"prefix":"ftp_base","body":"ftp_base","description":"PemFTP base class"},"Class: ftp":{"prefix":"ftp","body":"ftp","description":"FTP implementation using fsockopen to connect."},"Class: Language_Pack_Upgrader_Skin":{"prefix":"Language_Pack_Upgrader_Skin","body":"Language_Pack_Upgrader_Skin","description":"Translation Upgrader Skin for WordPress Translation Upgrades."},"Class: Language_Pack_Upgrader":{"prefix":"Language_Pack_Upgrader","body":"Language_Pack_Upgrader","description":"Core class used for updating/installing language packs (translations) for plugins, themes, and core."},"Class: PclZip":{"prefix":"PclZip","body":"PclZip","description":""},"Class: Plugin_Installer_Skin":{"prefix":"Plugin_Installer_Skin","body":"Plugin_Installer_Skin","description":"Plugin Installer Skin for WordPress Plugin Installer."},"Class: Plugin_Upgrader_Skin":{"prefix":"Plugin_Upgrader_Skin","body":"Plugin_Upgrader_Skin","description":"Plugin Upgrader Skin for WordPress Plugin Upgrades."},"Class: Plugin_Upgrader":{"prefix":"Plugin_Upgrader","body":"Plugin_Upgrader","description":"Core class used for upgrading/installing plugins."},"Class: Theme_Installer_Skin":{"prefix":"Theme_Installer_Skin","body":"Theme_Installer_Skin","description":"Theme Installer Skin for the WordPress Theme Installer."},"Class: Theme_Upgrader_Skin":{"prefix":"Theme_Upgrader_Skin","body":"Theme_Upgrader_Skin","description":"Theme Upgrader Skin for WordPress Theme Upgrades."},"Class: Theme_Upgrader":{"prefix":"Theme_Upgrader","body":"Theme_Upgrader","description":"Core class used for upgrading/installing themes."},"Class: Walker_Category_Checklist":{"prefix":"Walker_Category_Checklist","body":"Walker_Category_Checklist","description":"Core walker class to output an unordered list of category checkbox input elements."},"Class: Walker_Nav_Menu_Checklist":{"prefix":"Walker_Nav_Menu_Checklist","body":"Walker_Nav_Menu_Checklist","description":"Create HTML list of nav menu input items."},"Class: Walker_Nav_Menu_Edit":{"prefix":"Walker_Nav_Menu_Edit","body":"Walker_Nav_Menu_Edit","description":"Create HTML list of nav menu input items."},"Class: WP_Ajax_Upgrader_Skin":{"prefix":"WP_Ajax_Upgrader_Skin","body":"WP_Ajax_Upgrader_Skin","description":"Upgrader Skin for Ajax WordPress upgrades."},"Class: WP_Application_Passwords_List_Table":{"prefix":"WP_Application_Passwords_List_Table","body":"WP_Application_Passwords_List_Table","description":"Class for displaying the list of application password items."},"Class: WP_Automatic_Updater":{"prefix":"WP_Automatic_Updater","body":"WP_Automatic_Updater","description":"Core class used for handling automatic background updates."},"Class: WP_Comments_List_Table":{"prefix":"WP_Comments_List_Table","body":"WP_Comments_List_Table","description":"Core class used to implement displaying comments in a list table."},"Class: WP_Community_Events":{"prefix":"WP_Community_Events","body":"WP_Community_Events","description":"Class WP_Community_Events."},"Class: WP_Debug_Data":{"prefix":"WP_Debug_Data","body":"WP_Debug_Data","description":"Class for providing debug data based on a users WordPress environment."},"Class: WP_Filesystem_Base":{"prefix":"WP_Filesystem_Base","body":"WP_Filesystem_Base","description":"Base WordPress Filesystem class which Filesystem implementations extend."},"Class: WP_Filesystem_Direct":{"prefix":"WP_Filesystem_Direct","body":"WP_Filesystem_Direct","description":"WordPress Filesystem Class for direct PHP file and folder manipulation."},"Class: WP_Filesystem_FTPext":{"prefix":"WP_Filesystem_FTPext","body":"WP_Filesystem_FTPext","description":"WordPress Filesystem Class for implementing FTP."},"Class: WP_Filesystem_ftpsockets":{"prefix":"WP_Filesystem_ftpsockets","body":"WP_Filesystem_ftpsockets","description":"WordPress Filesystem Class for implementing FTP Sockets."},"Class: WP_Filesystem_SSH2":{"prefix":"WP_Filesystem_SSH2","body":"WP_Filesystem_SSH2","description":"WordPress Filesystem Class for implementing SSH2"},"Class: WP_Importer":{"prefix":"WP_Importer","body":"WP_Importer","description":"WP_Importer base class"},"Class: WP_Internal_Pointers":{"prefix":"WP_Internal_Pointers","body":"WP_Internal_Pointers","description":"Core class used to implement an internal admin pointers API."},"Class: WP_Links_List_Table":{"prefix":"WP_Links_List_Table","body":"WP_Links_List_Table","description":"Core class used to implement displaying links in a list table."},"Class: _WP_List_Table_Compat":{"prefix":"_WP_List_Table_Compat","body":"_WP_List_Table_Compat","description":"Helper class to be used only by back compat functions."},"Class: WP_List_Table":{"prefix":"WP_List_Table","body":"WP_List_Table","description":"Base class for displaying a list of items in an ajaxified HTML table."},"Class: WP_Media_List_Table":{"prefix":"WP_Media_List_Table","body":"WP_Media_List_Table","description":"Core class used to implement displaying media items in a list table."},"Class: WP_MS_Sites_List_Table":{"prefix":"WP_MS_Sites_List_Table","body":"WP_MS_Sites_List_Table","description":"Core class used to implement displaying sites in a list table for the network admin."},"Class: WP_MS_Themes_List_Table":{"prefix":"WP_MS_Themes_List_Table","body":"WP_MS_Themes_List_Table","description":"Core class used to implement displaying themes in a list table for the network admin."},"Class: WP_MS_Users_List_Table":{"prefix":"WP_MS_Users_List_Table","body":"WP_MS_Users_List_Table","description":"Core class used to implement displaying users in a list table for the network admin."},"Class: WP_Plugin_Install_List_Table":{"prefix":"WP_Plugin_Install_List_Table","body":"WP_Plugin_Install_List_Table","description":"Core class used to implement displaying plugins to install in a list table."},"Class: WP_Plugins_List_Table":{"prefix":"WP_Plugins_List_Table","body":"WP_Plugins_List_Table","description":"Core class used to implement displaying installed plugins in a list table."},"Class: WP_Post_Comments_List_Table":{"prefix":"WP_Post_Comments_List_Table","body":"WP_Post_Comments_List_Table","description":"Core class used to implement displaying post comments in a list table."},"Class: WP_Posts_List_Table":{"prefix":"WP_Posts_List_Table","body":"WP_Posts_List_Table","description":"Core class used to implement displaying posts in a list table."},"Class: WP_Privacy_Data_Export_Requests_List_Table":{"prefix":"WP_Privacy_Data_Export_Requests_List_Table","body":"WP_Privacy_Data_Export_Requests_List_Table","description":"WP_Privacy_Data_Export_Requests_Table class."},"Class: WP_Privacy_Data_Removal_Requests_List_Table":{"prefix":"WP_Privacy_Data_Removal_Requests_List_Table","body":"WP_Privacy_Data_Removal_Requests_List_Table","description":"WP_Privacy_Data_Removal_Requests_List_Table class."},"Class: WP_Privacy_Policy_Content":{"prefix":"WP_Privacy_Policy_Content","body":"WP_Privacy_Policy_Content","description":"WP_Privacy_Policy_Content class."},"Class: WP_Privacy_Requests_Table":{"prefix":"WP_Privacy_Requests_Table","body":"WP_Privacy_Requests_Table","description":"List Table API: WP_Privacy_Requests_Table class"},"Class: WP_Screen":{"prefix":"WP_Screen","body":"WP_Screen","description":"Core class used to implement an admin screen API."},"Class: WP_Site_Health_Auto_Updates":{"prefix":"WP_Site_Health_Auto_Updates","body":"WP_Site_Health_Auto_Updates","description":"Class for testing automatic updates in the WordPress code."},"Class: WP_Site_Health":{"prefix":"WP_Site_Health","body":"WP_Site_Health","description":"Class for looking up a site's health based on a user's WordPress environment."},"Class: WP_Site_Icon":{"prefix":"WP_Site_Icon","body":"WP_Site_Icon","description":"Core class used to implement site icon functionality."},"Class: WP_Terms_List_Table":{"prefix":"WP_Terms_List_Table","body":"WP_Terms_List_Table","description":"Core class used to implement displaying terms in a list table."},"Class: WP_Theme_Install_List_Table":{"prefix":"WP_Theme_Install_List_Table","body":"WP_Theme_Install_List_Table","description":"Core class used to implement displaying themes to install in a list table."},"Class: WP_Themes_List_Table":{"prefix":"WP_Themes_List_Table","body":"WP_Themes_List_Table","description":"Core class used to implement displaying installed themes in a list table."},"Class: WP_Upgrader_Skin":{"prefix":"WP_Upgrader_Skin","body":"WP_Upgrader_Skin","description":"Generic Skin for the WordPress Upgrader classes. This skin is designed to be extended for specific purposes."},"Class: WP_Upgrader":{"prefix":"WP_Upgrader","body":"WP_Upgrader","description":"Core class used for upgrading/installing a local set of files via the Filesystem Abstraction classes from a Zip file."},"Class: WP_Users_List_Table":{"prefix":"WP_Users_List_Table","body":"WP_Users_List_Table","description":"Core class used to implement displaying users in a list table."},"Class: WP_User_Search":{"prefix":"WP_User_Search","body":"WP_User_Search","description":"WordPress User Search class."},"Class: WP_Privacy_Data_Export_Requests_Table":{"prefix":"WP_Privacy_Data_Export_Requests_Table","body":"WP_Privacy_Data_Export_Requests_Table","description":"Previous class for list table for privacy data export requests."},"Class: WP_Privacy_Data_Removal_Requests_Table":{"prefix":"WP_Privacy_Data_Removal_Requests_Table","body":"WP_Privacy_Data_Removal_Requests_Table","description":"Previous class for list table for privacy data erasure requests."},"Class: AtomFeed":{"prefix":"AtomFeed","body":"AtomFeed","description":"Structure that store common Atom Feed Properties"},"Class: AtomEntry":{"prefix":"AtomEntry","body":"AtomEntry","description":"Structure that store Atom Entry Properties"},"Class: AtomParser":{"prefix":"AtomParser","body":"AtomParser","description":"AtomLib Atom Parser API"},"Class: WP_Navigation_Block_Renderer":{"prefix":"WP_Navigation_Block_Renderer","body":"WP_Navigation_Block_Renderer","description":"Helper functions used to render the navigation block."},"Class: Tile":{"prefix":"Tile","body":"Tile","description":""},"Class: Prop":{"prefix":"Prop","body":"Prop","description":""},"Class: Dim_Prop":{"prefix":"Dim_Prop","body":"Dim_Prop","description":""},"Class: Chan_Prop":{"prefix":"Chan_Prop","body":"Chan_Prop","description":""},"Class: Features":{"prefix":"Features","body":"Features","description":""},"Class: Box":{"prefix":"Box","body":"Box","description":""},"Class: Parser":{"prefix":"Parser","body":"Parser","description":""},"Class: Services_JSON":{"prefix":"Services_JSON","body":"Services_JSON","description":"Converts to and from JSON format."},"Class: Services_JSON_Error":{"prefix":"Services_JSON_Error","body":"Services_JSON_Error","description":""},"Class: PasswordHash":{"prefix":"PasswordHash","body":"PasswordHash","description":"Portable PHP password hashing framework."},"Class: POP3":{"prefix":"POP3","body":"POP3","description":"mail_fetch/setup.php"},"Class: Requests":{"prefix":"Requests","body":"Requests","description":"Requests for PHP"},"Class: Snoopy":{"prefix":"Snoopy","body":"Snoopy","description":""},"Class: Walker_CategoryDropdown":{"prefix":"Walker_CategoryDropdown","body":"Walker_CategoryDropdown","description":"Core class used to create an HTML dropdown list of Categories."},"Class: Walker_Category":{"prefix":"Walker_Category","body":"Walker_Category","description":"Core class used to create an HTML list of categories."},"Class: Walker_Comment":{"prefix":"Walker_Comment","body":"Walker_Comment","description":"Core walker class used to create an HTML list of comments."},"Class: Walker_Nav_Menu":{"prefix":"Walker_Nav_Menu","body":"Walker_Nav_Menu","description":"Core class used to implement an HTML list of nav menu items."},"Class: Walker_PageDropdown":{"prefix":"Walker_PageDropdown","body":"Walker_PageDropdown","description":"Core class used to create an HTML drop-down list of pages."},"Class: Walker_Page":{"prefix":"Walker_Page","body":"Walker_Page","description":"Core walker class used to create an HTML list of pages."},"Class: WP_Admin_Bar":{"prefix":"WP_Admin_Bar","body":"WP_Admin_Bar","description":"Core class used to implement the Toolbar API."},"Class: WP_Ajax_Response":{"prefix":"WP_Ajax_Response","body":"WP_Ajax_Response","description":"Send XML response back to Ajax request."},"Class: WP_Application_Passwords":{"prefix":"WP_Application_Passwords","body":"WP_Application_Passwords","description":"Class for displaying, modifying, and sanitizing application passwords."},"Class: WP_Block_Bindings_Registry":{"prefix":"WP_Block_Bindings_Registry","body":"WP_Block_Bindings_Registry","description":"Core class used for interacting with block bindings sources."},"Class: WP_Block_Bindings_Source":{"prefix":"WP_Block_Bindings_Source","body":"WP_Block_Bindings_Source","description":"Class representing block bindings source."},"Class: WP_Block_Editor_Context":{"prefix":"WP_Block_Editor_Context","body":"WP_Block_Editor_Context","description":"Contains information about a block editor being rendered."},"Class: WP_Block_List":{"prefix":"WP_Block_List","body":"WP_Block_List","description":"Class representing a list of block instances."},"Class: WP_Block_Metadata_Registry":{"prefix":"WP_Block_Metadata_Registry","body":"WP_Block_Metadata_Registry","description":"Class used for managing block metadata collections."},"Class: WP_Block_Parser_Block":{"prefix":"WP_Block_Parser_Block","body":"WP_Block_Parser_Block","description":"Class WP_Block_Parser_Block"},"Class: WP_Block_Parser":{"prefix":"WP_Block_Parser","body":"WP_Block_Parser","description":"Class WP_Block_Parser"},"Class: WP_Block_Pattern_Categories_Registry":{"prefix":"WP_Block_Pattern_Categories_Registry","body":"WP_Block_Pattern_Categories_Registry","description":"Class used for interacting with block pattern categories."},"Class: WP_Block_Patterns_Registry":{"prefix":"WP_Block_Patterns_Registry","body":"WP_Block_Patterns_Registry","description":"Class used for interacting with block patterns."},"Class: WP_Block_Styles_Registry":{"prefix":"WP_Block_Styles_Registry","body":"WP_Block_Styles_Registry","description":"Class used for interacting with block styles."},"Class: WP_Block_Supports":{"prefix":"WP_Block_Supports","body":"WP_Block_Supports","description":"Class encapsulating and implementing Block Supports."},"Class: WP_Block_Template":{"prefix":"WP_Block_Template","body":"WP_Block_Template","description":"Class representing a block template."},"Class: WP_Block_Templates_Registry":{"prefix":"WP_Block_Templates_Registry","body":"WP_Block_Templates_Registry","description":"Core class used for interacting with templates."},"Class: WP_Block_Type_Registry":{"prefix":"WP_Block_Type_Registry","body":"WP_Block_Type_Registry","description":"Core class used for interacting with block types."},"Class: WP_Block_Type":{"prefix":"WP_Block_Type","body":"WP_Block_Type","description":"Core class representing a block type."},"Class: WP_Block":{"prefix":"WP_Block","body":"WP_Block","description":"Class representing a parsed instance of a block."},"Class: WP_Classic_To_Block_Menu_Converter":{"prefix":"WP_Classic_To_Block_Menu_Converter","body":"WP_Classic_To_Block_Menu_Converter","description":"Converts a Classic Menu to Block Menu blocks."},"Class: WP_Comment_Query":{"prefix":"WP_Comment_Query","body":"WP_Comment_Query","description":"Core class used for querying comments."},"Class: WP_Comment":{"prefix":"WP_Comment","body":"WP_Comment","description":"Core class used to organize comments as instantiated objects with defined members."},"Class: WP_Customize_Control":{"prefix":"WP_Customize_Control","body":"WP_Customize_Control","description":"Customize Control class."},"Class: WP_Customize_Manager":{"prefix":"WP_Customize_Manager","body":"WP_Customize_Manager","description":"Customize Manager class."},"Class: WP_Customize_Nav_Menus":{"prefix":"WP_Customize_Nav_Menus","body":"WP_Customize_Nav_Menus","description":"Customize Nav Menus class."},"Class: WP_Customize_Panel":{"prefix":"WP_Customize_Panel","body":"WP_Customize_Panel","description":"Customize Panel class."},"Class: WP_Customize_Section":{"prefix":"WP_Customize_Section","body":"WP_Customize_Section","description":"Customize Section class."},"Class: WP_Customize_Setting":{"prefix":"WP_Customize_Setting","body":"WP_Customize_Setting","description":"Customize Setting class."},"Class: WP_Customize_Widgets":{"prefix":"WP_Customize_Widgets","body":"WP_Customize_Widgets","description":"Customize Widgets class."},"Class: WP_Date_Query":{"prefix":"WP_Date_Query","body":"WP_Date_Query","description":"Class for generating SQL clauses that filter a primary query according to date."},"Class: WP_Dependencies":{"prefix":"WP_Dependencies","body":"WP_Dependencies","description":"Core base class extended to register items."},"Class: _WP_Dependency":{"prefix":"_WP_Dependency","body":"_WP_Dependency","description":"Class _WP_Dependency"},"Class: WP_Duotone":{"prefix":"WP_Duotone","body":"WP_Duotone","description":"Manages duotone block supports and global styles."},"Class: _WP_Editors":{"prefix":"_WP_Editors","body":"_WP_Editors","description":"Facilitates adding of the WordPress editor as used on the Write and Edit screens."},"Class: WP_Embed":{"prefix":"WP_Embed","body":"WP_Embed","description":"API for easily embedding rich media such as videos and images into content."},"Class: WP_Error":{"prefix":"WP_Error","body":"WP_Error","description":"WordPress Error class."},"Class: WP_Exception":{"prefix":"WP_Exception","body":"WP_Exception","description":"Core base Exception class."},"Class: WP_Fatal_Error_Handler":{"prefix":"WP_Fatal_Error_Handler","body":"WP_Fatal_Error_Handler","description":"Core class used as the default shutdown handler for fatal errors."},"Class: WP_Feed_Cache_Transient":{"prefix":"WP_Feed_Cache_Transient","body":"WP_Feed_Cache_Transient","description":"Core class used to implement feed cache transients."},"Class: WP_Feed_Cache":{"prefix":"WP_Feed_Cache","body":"WP_Feed_Cache","description":"Core class used to implement a feed cache."},"Class: WP_Hook":{"prefix":"WP_Hook","body":"WP_Hook","description":"Core class used to implement action and filter hook functionality."},"Class: WP_Http_Cookie":{"prefix":"WP_Http_Cookie","body":"WP_Http_Cookie","description":"Core class used to encapsulate a single cookie object for internal use."},"Class: WP_Http_Curl":{"prefix":"WP_Http_Curl","body":"WP_Http_Curl","description":"Core class used to integrate Curl as an HTTP transport."},"Class: WP_Http_Encoding":{"prefix":"WP_Http_Encoding","body":"WP_Http_Encoding","description":"Core class used to implement deflate and gzip transfer encoding support for HTTP requests."},"Class: WP_HTTP_IXR_Client":{"prefix":"WP_HTTP_IXR_Client","body":"WP_HTTP_IXR_Client","description":"WP_HTTP_IXR_Client"},"Class: WP_HTTP_Proxy":{"prefix":"WP_HTTP_Proxy","body":"WP_HTTP_Proxy","description":"Core class used to implement HTTP API proxy support."},"Class: WP_HTTP_Requests_Hooks":{"prefix":"WP_HTTP_Requests_Hooks","body":"WP_HTTP_Requests_Hooks","description":"Bridge to connect Requests internal hooks to WordPress actions."},"Class: WP_HTTP_Requests_Response":{"prefix":"WP_HTTP_Requests_Response","body":"WP_HTTP_Requests_Response","description":"Core wrapper object for a WpOrg\\Requests\\Response for standardization."},"Class: WP_HTTP_Response":{"prefix":"WP_HTTP_Response","body":"WP_HTTP_Response","description":"Core class used to prepare HTTP responses."},"Class: WP_Http_Streams":{"prefix":"WP_Http_Streams","body":"WP_Http_Streams","description":"Core class used to integrate PHP Streams as an HTTP transport."},"Class: WP_HTTP_Fsockopen":{"prefix":"WP_HTTP_Fsockopen","body":"WP_HTTP_Fsockopen","description":"Deprecated HTTP Transport method which used fsockopen."},"Class: WP_Http":{"prefix":"WP_Http","body":"WP_Http","description":"Core class used for managing HTTP transports and making HTTP requests."},"Class: WP_Image_Editor_GD":{"prefix":"WP_Image_Editor_GD","body":"WP_Image_Editor_GD","description":"WordPress Image Editor Class for Image Manipulation through GD"},"Class: WP_Image_Editor_Imagick":{"prefix":"WP_Image_Editor_Imagick","body":"WP_Image_Editor_Imagick","description":"WordPress Image Editor Class for Image Manipulation through Imagick PHP Module"},"Class: WP_Image_Editor":{"prefix":"WP_Image_Editor","body":"WP_Image_Editor","description":"Base image editor class from which implementations extend"},"Class: WP_List_Util":{"prefix":"WP_List_Util","body":"WP_List_Util","description":"List utility."},"Class: WP_Locale_Switcher":{"prefix":"WP_Locale_Switcher","body":"WP_Locale_Switcher","description":"Core class used for switching locales."},"Class: WP_Locale":{"prefix":"WP_Locale","body":"WP_Locale","description":"Core class used to store translated data for a locale."},"Class: WP_MatchesMapRegex":{"prefix":"WP_MatchesMapRegex","body":"WP_MatchesMapRegex","description":"Helper class to remove the need to use eval to replace $matches[] in query strings."},"Class: WP_Meta_Query":{"prefix":"WP_Meta_Query","body":"WP_Meta_Query","description":"Core class used to implement meta queries for the Meta API."},"Class: WP_Metadata_Lazyloader":{"prefix":"WP_Metadata_Lazyloader","body":"WP_Metadata_Lazyloader","description":"Core class used for lazy-loading object metadata."},"Class: WP_Navigation_Fallback":{"prefix":"WP_Navigation_Fallback","body":"WP_Navigation_Fallback","description":"Manages fallback behavior for Navigation menus."},"Class: WP_Network_Query":{"prefix":"WP_Network_Query","body":"WP_Network_Query","description":"Core class used for querying networks."},"Class: WP_Network":{"prefix":"WP_Network","body":"WP_Network","description":"Core class used for interacting with a multisite network."},"Class: WP_Object_Cache":{"prefix":"WP_Object_Cache","body":"WP_Object_Cache","description":"Core class that implements an object cache."},"Class: WP_oEmbed_Controller":{"prefix":"WP_oEmbed_Controller","body":"WP_oEmbed_Controller","description":"oEmbed API endpoint controller."},"Class: WP_oEmbed":{"prefix":"WP_oEmbed","body":"WP_oEmbed","description":"Core class used to implement oEmbed functionality."},"Class: WP_Paused_Extensions_Storage":{"prefix":"WP_Paused_Extensions_Storage","body":"WP_Paused_Extensions_Storage","description":"Core class used for storing paused extensions."},"Class: WP_PHPMailer":{"prefix":"WP_PHPMailer","body":"WP_PHPMailer","description":"WordPress PHPMailer class."},"Class: WP_Plugin_Dependencies":{"prefix":"WP_Plugin_Dependencies","body":"WP_Plugin_Dependencies","description":"Core class for installing plugin dependencies."},"Class: WP_Post_Type":{"prefix":"WP_Post_Type","body":"WP_Post_Type","description":"Core class used for interacting with post types."},"Class: WP_Post":{"prefix":"WP_Post","body":"WP_Post","description":"Core class used to implement the WP_Post object."},"Class: WP_Query":{"prefix":"WP_Query","body":"WP_Query","description":"The WordPress Query class."},"Class: WP_Recovery_Mode_Cookie_Service":{"prefix":"WP_Recovery_Mode_Cookie_Service","body":"WP_Recovery_Mode_Cookie_Service","description":"Core class used to set, validate, and clear cookies that identify a Recovery Mode session."},"Class: WP_Recovery_Mode_Email_Service":{"prefix":"WP_Recovery_Mode_Email_Service","body":"WP_Recovery_Mode_Email_Service","description":"Core class used to send an email with a link to begin Recovery Mode."},"Class: WP_Recovery_Mode_Key_Service":{"prefix":"WP_Recovery_Mode_Key_Service","body":"WP_Recovery_Mode_Key_Service","description":"Core class used to generate and validate keys used to enter Recovery Mode."},"Class: WP_Recovery_Mode_Link_Service":{"prefix":"WP_Recovery_Mode_Link_Service","body":"WP_Recovery_Mode_Link_Service","description":"Core class used to generate and handle recovery mode links."},"Class: WP_Recovery_Mode":{"prefix":"WP_Recovery_Mode","body":"WP_Recovery_Mode","description":"Core class used to implement Recovery Mode."},"Class: WP_Rewrite":{"prefix":"WP_Rewrite","body":"WP_Rewrite","description":"Core class used to implement a rewrite component API."},"Class: WP_Role":{"prefix":"WP_Role","body":"WP_Role","description":"Core class used to extend the user roles API."},"Class: WP_Roles":{"prefix":"WP_Roles","body":"WP_Roles","description":"Core class used to implement a user roles API."},"Class: WP_Script_Modules":{"prefix":"WP_Script_Modules","body":"WP_Script_Modules","description":"Core class used to register script modules."},"Class: WP_Scripts":{"prefix":"WP_Scripts","body":"WP_Scripts","description":"Core class used to register scripts."},"Class: WP_Session_Tokens":{"prefix":"WP_Session_Tokens","body":"WP_Session_Tokens","description":"Abstract class for managing user session tokens."},"Class: WP_SimplePie_File":{"prefix":"WP_SimplePie_File","body":"WP_SimplePie_File","description":"Core class for fetching remote files and reading local files with SimplePie."},"Class: WP_SimplePie_Sanitize_KSES":{"prefix":"WP_SimplePie_Sanitize_KSES","body":"WP_SimplePie_Sanitize_KSES","description":"Core class used to implement SimplePie feed sanitization."},"Class: WP_Site_Query":{"prefix":"WP_Site_Query","body":"WP_Site_Query","description":"Core class used for querying sites."},"Class: WP_Site":{"prefix":"WP_Site","body":"WP_Site","description":"Core class used for interacting with a multisite site."},"Class: WP_Speculation_Rules":{"prefix":"WP_Speculation_Rules","body":"WP_Speculation_Rules","description":"Class representing a set of speculation rules."},"Class: WP_Styles":{"prefix":"WP_Styles","body":"WP_Styles","description":"Core class used to register styles."},"Class: WP_Tax_Query":{"prefix":"WP_Tax_Query","body":"WP_Tax_Query","description":"Core class used to implement taxonomy queries for the Taxonomy API."},"Class: WP_Taxonomy":{"prefix":"WP_Taxonomy","body":"WP_Taxonomy","description":"Core class used for interacting with taxonomies."},"Class: WP_Term_Query":{"prefix":"WP_Term_Query","body":"WP_Term_Query","description":"Class used for querying terms."},"Class: WP_Term":{"prefix":"WP_Term","body":"WP_Term","description":"Core class used to implement the WP_Term object."},"Class: WP_Text_Diff_Renderer_inline":{"prefix":"WP_Text_Diff_Renderer_inline","body":"WP_Text_Diff_Renderer_inline","description":"Better word splitting than the PEAR package provides."},"Class: WP_Text_Diff_Renderer_Table":{"prefix":"WP_Text_Diff_Renderer_Table","body":"WP_Text_Diff_Renderer_Table","description":"Table renderer to display the diff lines."},"Class: WP_Textdomain_Registry":{"prefix":"WP_Textdomain_Registry","body":"WP_Textdomain_Registry","description":"Core class used for registering text domains."},"Class: WP_Theme_JSON_Data":{"prefix":"WP_Theme_JSON_Data","body":"WP_Theme_JSON_Data","description":"Class to provide access to update a theme.json structure."},"Class: WP_Theme_JSON_Resolver":{"prefix":"WP_Theme_JSON_Resolver","body":"WP_Theme_JSON_Resolver","description":"Class that abstracts the processing of the different data sources for site-level config and offers an API to work with them."},"Class: WP_Theme_JSON_Schema":{"prefix":"WP_Theme_JSON_Schema","body":"WP_Theme_JSON_Schema","description":"Class that migrates a given theme.json structure to the latest schema."},"Class: WP_Theme_JSON":{"prefix":"WP_Theme_JSON","body":"WP_Theme_JSON","description":"Class that encapsulates the processing of structures that adhere to the theme.json spec."},"Class: WP_Theme":{"prefix":"WP_Theme","body":"WP_Theme","description":"WP_Theme Class"},"Class: WP_Token_Map":{"prefix":"WP_Token_Map","body":"WP_Token_Map","description":"WP_Token_Map class."},"Class: WP_URL_Pattern_Prefixer":{"prefix":"WP_URL_Pattern_Prefixer","body":"WP_URL_Pattern_Prefixer","description":"Class for prefixing URL patterns."},"Class: WP_User_Meta_Session_Tokens":{"prefix":"WP_User_Meta_Session_Tokens","body":"WP_User_Meta_Session_Tokens","description":"Meta-based user sessions token manager."},"Class: WP_User_Query":{"prefix":"WP_User_Query","body":"WP_User_Query","description":"Core class used for querying users."},"Class: WP_User_Request":{"prefix":"WP_User_Request","body":"WP_User_Request","description":"WP_User_Request class."},"Class: WP_User":{"prefix":"WP_User","body":"WP_User","description":"Core class used to implement the WP_User object."},"Class: Walker":{"prefix":"Walker","body":"Walker","description":"A class for displaying various tree-like structures."},"Class: WP_Widget_Factory":{"prefix":"WP_Widget_Factory","body":"WP_Widget_Factory","description":"Singleton that registers and instantiates WP_Widget classes."},"Class: WP_Widget":{"prefix":"WP_Widget","body":"WP_Widget","description":"Core base class extended to register widgets."},"Class: wp_xmlrpc_server":{"prefix":"wp_xmlrpc_server","body":"wp_xmlrpc_server","description":"WordPress XMLRPC server implementation."},"Class: WP":{"prefix":"WP","body":"WP","description":"WordPress environment setup class."},"Class: wpdb":{"prefix":"wpdb","body":"wpdb","description":"WordPress database access abstraction class."},"Class: WP_Customize_Background_Image_Control":{"prefix":"WP_Customize_Background_Image_Control","body":"WP_Customize_Background_Image_Control","description":"Customize Background Image Control class."},"Class: WP_Customize_Background_Image_Setting":{"prefix":"WP_Customize_Background_Image_Setting","body":"WP_Customize_Background_Image_Setting","description":"Customizer Background Image Setting class."},"Class: WP_Customize_Background_Position_Control":{"prefix":"WP_Customize_Background_Position_Control","body":"WP_Customize_Background_Position_Control","description":"Customize Background Position Control class."},"Class: WP_Customize_Code_Editor_Control":{"prefix":"WP_Customize_Code_Editor_Control","body":"WP_Customize_Code_Editor_Control","description":"Customize Code Editor Control class."},"Class: WP_Customize_Color_Control":{"prefix":"WP_Customize_Color_Control","body":"WP_Customize_Color_Control","description":"Customize Color Control class."},"Class: WP_Customize_Cropped_Image_Control":{"prefix":"WP_Customize_Cropped_Image_Control","body":"WP_Customize_Cropped_Image_Control","description":"Customize Cropped Image Control class."},"Class: WP_Customize_Custom_CSS_Setting":{"prefix":"WP_Customize_Custom_CSS_Setting","body":"WP_Customize_Custom_CSS_Setting","description":"Custom Setting to handle WP Custom CSS."},"Class: WP_Customize_Date_Time_Control":{"prefix":"WP_Customize_Date_Time_Control","body":"WP_Customize_Date_Time_Control","description":"Customize Date Time Control class."},"Class: WP_Customize_Filter_Setting":{"prefix":"WP_Customize_Filter_Setting","body":"WP_Customize_Filter_Setting","description":"A setting that is used to filter a value, but will not save the results."},"Class: WP_Customize_Header_Image_Control":{"prefix":"WP_Customize_Header_Image_Control","body":"WP_Customize_Header_Image_Control","description":"Customize Header Image Control class."},"Class: WP_Customize_Header_Image_Setting":{"prefix":"WP_Customize_Header_Image_Setting","body":"WP_Customize_Header_Image_Setting","description":"A setting that is used to filter a value, but will not save the results."},"Class: WP_Customize_Image_Control":{"prefix":"WP_Customize_Image_Control","body":"WP_Customize_Image_Control","description":"Customize Image Control class."},"Class: WP_Customize_Media_Control":{"prefix":"WP_Customize_Media_Control","body":"WP_Customize_Media_Control","description":"Customize Media Control class."},"Class: WP_Customize_Nav_Menu_Auto_Add_Control":{"prefix":"WP_Customize_Nav_Menu_Auto_Add_Control","body":"WP_Customize_Nav_Menu_Auto_Add_Control","description":"Customize control to represent the auto_add field for a given menu."},"Class: WP_Customize_Nav_Menu_Control":{"prefix":"WP_Customize_Nav_Menu_Control","body":"WP_Customize_Nav_Menu_Control","description":"Customize Nav Menu Control Class."},"Class: WP_Customize_Nav_Menu_Item_Control":{"prefix":"WP_Customize_Nav_Menu_Item_Control","body":"WP_Customize_Nav_Menu_Item_Control","description":"Customize control to represent the name field for a given menu."},"Class: WP_Customize_Nav_Menu_Item_Setting":{"prefix":"WP_Customize_Nav_Menu_Item_Setting","body":"WP_Customize_Nav_Menu_Item_Setting","description":"Customize Setting to represent a nav_menu."},"Class: WP_Customize_Nav_Menu_Location_Control":{"prefix":"WP_Customize_Nav_Menu_Location_Control","body":"WP_Customize_Nav_Menu_Location_Control","description":"Customize Menu Location Control Class."},"Class: WP_Customize_Nav_Menu_Locations_Control":{"prefix":"WP_Customize_Nav_Menu_Locations_Control","body":"WP_Customize_Nav_Menu_Locations_Control","description":"Customize Nav Menu Locations Control Class."},"Class: WP_Customize_Nav_Menu_Name_Control":{"prefix":"WP_Customize_Nav_Menu_Name_Control","body":"WP_Customize_Nav_Menu_Name_Control","description":"Customize control to represent the name field for a given menu."},"Class: WP_Customize_Nav_Menu_Section":{"prefix":"WP_Customize_Nav_Menu_Section","body":"WP_Customize_Nav_Menu_Section","description":"Customize Menu Section Class"},"Class: WP_Customize_Nav_Menu_Setting":{"prefix":"WP_Customize_Nav_Menu_Setting","body":"WP_Customize_Nav_Menu_Setting","description":"Customize Setting to represent a nav_menu."},"Class: WP_Customize_Nav_Menus_Panel":{"prefix":"WP_Customize_Nav_Menus_Panel","body":"WP_Customize_Nav_Menus_Panel","description":"Customize Nav Menus Panel Class"},"Class: WP_Customize_New_Menu_Control":{"prefix":"WP_Customize_New_Menu_Control","body":"WP_Customize_New_Menu_Control","description":"Customize control class for new menus."},"Class: WP_Customize_New_Menu_Section":{"prefix":"WP_Customize_New_Menu_Section","body":"WP_Customize_New_Menu_Section","description":"Customize Menu Section Class"},"Class: WP_Customize_Partial":{"prefix":"WP_Customize_Partial","body":"WP_Customize_Partial","description":"Core Customizer class for implementing selective refresh partials."},"Class: WP_Customize_Selective_Refresh":{"prefix":"WP_Customize_Selective_Refresh","body":"WP_Customize_Selective_Refresh","description":"Core Customizer class for implementing selective refresh."},"Class: WP_Customize_Sidebar_Section":{"prefix":"WP_Customize_Sidebar_Section","body":"WP_Customize_Sidebar_Section","description":"Customizer section representing widget area (sidebar)."},"Class: WP_Customize_Site_Icon_Control":{"prefix":"WP_Customize_Site_Icon_Control","body":"WP_Customize_Site_Icon_Control","description":"Customize Site Icon control class."},"Class: WP_Customize_Theme_Control":{"prefix":"WP_Customize_Theme_Control","body":"WP_Customize_Theme_Control","description":"Customize Theme Control class."},"Class: WP_Customize_Themes_Panel":{"prefix":"WP_Customize_Themes_Panel","body":"WP_Customize_Themes_Panel","description":"Customize Themes Panel Class"},"Class: WP_Customize_Themes_Section":{"prefix":"WP_Customize_Themes_Section","body":"WP_Customize_Themes_Section","description":"Customize Themes Section class."},"Class: WP_Customize_Upload_Control":{"prefix":"WP_Customize_Upload_Control","body":"WP_Customize_Upload_Control","description":"Customize Upload Control Class."},"Class: WP_Sidebar_Block_Editor_Control":{"prefix":"WP_Sidebar_Block_Editor_Control","body":"WP_Sidebar_Block_Editor_Control","description":"Core class used to implement the widgets block editor control in the customizer."},"Class: WP_Widget_Area_Customize_Control":{"prefix":"WP_Widget_Area_Customize_Control","body":"WP_Widget_Area_Customize_Control","description":"Widget Area Customize Control class."},"Class: WP_Widget_Form_Customize_Control":{"prefix":"WP_Widget_Form_Customize_Control","body":"WP_Widget_Form_Customize_Control","description":"Widget Form Customize Control class."},"Class: WP_Font_Collection":{"prefix":"WP_Font_Collection","body":"WP_Font_Collection","description":"Font Collection class."},"Class: WP_Font_Face_Resolver":{"prefix":"WP_Font_Face_Resolver","body":"WP_Font_Face_Resolver","description":"The Font Face Resolver abstracts the processing of different data sources (such as theme.json) for processing within the Font Face."},"Class: WP_Font_Face":{"prefix":"WP_Font_Face","body":"WP_Font_Face","description":"Font Face generates and prints `@font-face` styles for given fonts."},"Class: WP_Font_Library":{"prefix":"WP_Font_Library","body":"WP_Font_Library","description":"Font Library class."},"Class: WP_Font_Utils":{"prefix":"WP_Font_Utils","body":"WP_Font_Utils","description":"A class of utilities for working with the Font Library."},"Class: WP_HTML_Active_Formatting_Elements":{"prefix":"WP_HTML_Active_Formatting_Elements","body":"WP_HTML_Active_Formatting_Elements","description":"Core class used by the HTML processor during HTML parsing for managing the stack of active formatting elements."},"Class: WP_HTML_Attribute_Token":{"prefix":"WP_HTML_Attribute_Token","body":"WP_HTML_Attribute_Token","description":"Core class used by the HTML tag processor as a data structure for the attribute token, allowing to drastically improve performance."},"Class: WP_HTML_Decoder":{"prefix":"WP_HTML_Decoder","body":"WP_HTML_Decoder","description":"HTML API: WP_HTML_Decoder class"},"Class: WP_HTML_Doctype_Info":{"prefix":"WP_HTML_Doctype_Info","body":"WP_HTML_Doctype_Info","description":"Core class used by the HTML API to represent a DOCTYPE declaration."},"Class: WP_HTML_Open_Elements":{"prefix":"WP_HTML_Open_Elements","body":"WP_HTML_Open_Elements","description":"Core class used by the HTML processor during HTML parsing for managing the stack of open elements."},"Class: WP_HTML_Processor_State":{"prefix":"WP_HTML_Processor_State","body":"WP_HTML_Processor_State","description":"Core class used by the HTML processor during HTML parsing for managing the internal parsing state."},"Class: WP_HTML_Processor":{"prefix":"WP_HTML_Processor","body":"WP_HTML_Processor","description":"Core class used to safely parse and modify an HTML document."},"Class: WP_HTML_Span":{"prefix":"WP_HTML_Span","body":"WP_HTML_Span","description":"Core class used by the HTML tag processor to represent a textual span inside an HTML document."},"Class: WP_HTML_Stack_Event":{"prefix":"WP_HTML_Stack_Event","body":"WP_HTML_Stack_Event","description":"Core class used by the HTML Processor as a record for stack operations."},"Class: WP_HTML_Tag_Processor":{"prefix":"WP_HTML_Tag_Processor","body":"WP_HTML_Tag_Processor","description":"Core class used to modify attributes in an HTML document for tags matching a query."},"Class: WP_HTML_Text_Replacement":{"prefix":"WP_HTML_Text_Replacement","body":"WP_HTML_Text_Replacement","description":"Core class used by the HTML tag processor as a data structure for replacing existing content from start to end, allowing to drastically improve performance."},"Class: WP_HTML_Token":{"prefix":"WP_HTML_Token","body":"WP_HTML_Token","description":"Core class used by the HTML processor during HTML parsing for referring to tokens in the input HTML string."},"Class: WP_HTML_Unsupported_Exception":{"prefix":"WP_HTML_Unsupported_Exception","body":"WP_HTML_Unsupported_Exception","description":"Core class used by the HTML processor during HTML parsing for indicating that a given operation is unsupported."},"Class: WP_Interactivity_API_Directives_Processor":{"prefix":"WP_Interactivity_API_Directives_Processor","body":"WP_Interactivity_API_Directives_Processor","description":"Class used to iterate over the tags of an HTML string and help process the directive attributes."},"Class: WP_Interactivity_API":{"prefix":"WP_Interactivity_API","body":"WP_Interactivity_API","description":"Class used to process the Interactivity API on the server."},"Class: IXR_Base64":{"prefix":"IXR_Base64","body":"IXR_Base64","description":"IXR_Base64"},"Class: IXR_Client":{"prefix":"IXR_Client","body":"IXR_Client","description":"IXR_Client"},"Class: IXR_ClientMulticall":{"prefix":"IXR_ClientMulticall","body":"IXR_ClientMulticall","description":"IXR_ClientMulticall"},"Class: IXR_Date":{"prefix":"IXR_Date","body":"IXR_Date","description":"IXR_Date"},"Class: IXR_Error":{"prefix":"IXR_Error","body":"IXR_Error","description":"IXR_Error"},"Class: IXR_IntrospectionServer":{"prefix":"IXR_IntrospectionServer","body":"IXR_IntrospectionServer","description":"IXR_IntrospectionServer"},"Class: IXR_Message":{"prefix":"IXR_Message","body":"IXR_Message","description":"IXR_MESSAGE"},"Class: IXR_Request":{"prefix":"IXR_Request","body":"IXR_Request","description":"IXR_Request"},"Class: IXR_Server":{"prefix":"IXR_Server","body":"IXR_Server","description":"IXR_Server"},"Class: IXR_Value":{"prefix":"IXR_Value","body":"IXR_Value","description":"IXR_Value"},"Class: WP_Translation_Controller":{"prefix":"WP_Translation_Controller","body":"WP_Translation_Controller","description":"Class WP_Translation_Controller."},"Class: WP_Translation_File_MO":{"prefix":"WP_Translation_File_MO","body":"WP_Translation_File_MO","description":"Class WP_Translation_File_MO."},"Class: WP_Translation_File_PHP":{"prefix":"WP_Translation_File_PHP","body":"WP_Translation_File_PHP","description":"Class WP_Translation_File_PHP."},"Class: WP_Translation_File":{"prefix":"WP_Translation_File","body":"WP_Translation_File","description":"Class WP_Translation_File."},"Class: WP_Translations":{"prefix":"WP_Translations","body":"WP_Translations","description":"Class WP_Translations."},"Class: Exception":{"prefix":"Exception","body":"Exception","description":"PHPMailer exception handler."},"Class: PHPMailer":{"prefix":"PHPMailer","body":"PHPMailer","description":"PHPMailer - PHP email creation and transport class."},"Class: SMTP":{"prefix":"SMTP","body":"SMTP","description":"PHPMailer RFC821 SMTP email transport class."},"Class: wp_atom_server":{"prefix":"wp_atom_server","body":"wp_atom_server","description":""},"Class: Translation_Entry":{"prefix":"Translation_Entry","body":"Translation_Entry","description":"Translation_Entry class encapsulates a translatable string."},"Class: MO":{"prefix":"MO","body":"MO","description":"Gettext_Translations class."},"Class: Plural_Forms":{"prefix":"Plural_Forms","body":"Plural_Forms","description":""},"Class: PO":{"prefix":"PO","body":"PO","description":"Gettext_Translations class."},"Class: POMO_Reader":{"prefix":"POMO_Reader","body":"POMO_Reader","description":""},"Class: POMO_FileReader":{"prefix":"POMO_FileReader","body":"POMO_FileReader","description":""},"Class: POMO_StringReader":{"prefix":"POMO_StringReader","body":"POMO_StringReader","description":"Provides file-like methods for manipulating a string instead of a physical file."},"Class: POMO_CachedFileReader":{"prefix":"POMO_CachedFileReader","body":"POMO_CachedFileReader","description":"Reads the contents of the file in the beginning."},"Class: POMO_CachedIntFileReader":{"prefix":"POMO_CachedIntFileReader","body":"POMO_CachedIntFileReader","description":"Reads the contents of the file in the beginning."},"Class: Translations":{"prefix":"Translations","body":"Translations","description":"Translations class."},"Class: Gettext_Translations":{"prefix":"Gettext_Translations","body":"Gettext_Translations","description":"Gettext_Translations class."},"Class: NOOP_Translations":{"prefix":"NOOP_Translations","body":"NOOP_Translations","description":"Provides the same interface as Translations, but doesn't do anything."},"Class: WP_REST_Request":{"prefix":"WP_REST_Request","body":"WP_REST_Request","description":"Core class used to implement a REST request object."},"Class: WP_REST_Response":{"prefix":"WP_REST_Response","body":"WP_REST_Response","description":"Core class used to implement a REST response object."},"Class: WP_REST_Server":{"prefix":"WP_REST_Server","body":"WP_REST_Server","description":"Core class used to implement the WordPress REST API server."},"Class: WP_REST_Application_Passwords_Controller":{"prefix":"WP_REST_Application_Passwords_Controller","body":"WP_REST_Application_Passwords_Controller","description":"Core class to access a user's application passwords via the REST API."},"Class: WP_REST_Attachments_Controller":{"prefix":"WP_REST_Attachments_Controller","body":"WP_REST_Attachments_Controller","description":"Core controller used to access attachments via the REST API."},"Class: WP_REST_Autosaves_Controller":{"prefix":"WP_REST_Autosaves_Controller","body":"WP_REST_Autosaves_Controller","description":"Core class used to access autosaves via the REST API."},"Class: WP_REST_Block_Directory_Controller":{"prefix":"WP_REST_Block_Directory_Controller","body":"WP_REST_Block_Directory_Controller","description":"Controller which provides REST endpoint for the blocks."},"Class: WP_REST_Block_Pattern_Categories_Controller":{"prefix":"WP_REST_Block_Pattern_Categories_Controller","body":"WP_REST_Block_Pattern_Categories_Controller","description":"Core class used to access block pattern categories via the REST API."},"Class: WP_REST_Block_Patterns_Controller":{"prefix":"WP_REST_Block_Patterns_Controller","body":"WP_REST_Block_Patterns_Controller","description":"Core class used to access block patterns via the REST API."},"Class: WP_REST_Block_Renderer_Controller":{"prefix":"WP_REST_Block_Renderer_Controller","body":"WP_REST_Block_Renderer_Controller","description":"Controller which provides REST endpoint for rendering a block."},"Class: WP_REST_Block_Types_Controller":{"prefix":"WP_REST_Block_Types_Controller","body":"WP_REST_Block_Types_Controller","description":"Core class used to access block types via the REST API."},"Class: WP_REST_Blocks_Controller":{"prefix":"WP_REST_Blocks_Controller","body":"WP_REST_Blocks_Controller","description":"Controller which provides a REST endpoint for the editor to read, create, edit, and delete synced patterns (formerly called reusable blocks)."},"Class: WP_REST_Comments_Controller":{"prefix":"WP_REST_Comments_Controller","body":"WP_REST_Comments_Controller","description":"Core controller used to access comments via the REST API."},"Class: WP_REST_Controller":{"prefix":"WP_REST_Controller","body":"WP_REST_Controller","description":"Core base controller for managing and interacting with REST API items."},"Class: WP_REST_Edit_Site_Export_Controller":{"prefix":"WP_REST_Edit_Site_Export_Controller","body":"WP_REST_Edit_Site_Export_Controller","description":"Controller which provides REST endpoint for exporting current templates and template parts."},"Class: WP_REST_Font_Collections_Controller":{"prefix":"WP_REST_Font_Collections_Controller","body":"WP_REST_Font_Collections_Controller","description":"Font Library Controller class."},"Class: WP_REST_Font_Faces_Controller":{"prefix":"WP_REST_Font_Faces_Controller","body":"WP_REST_Font_Faces_Controller","description":"Class to access font faces through the REST API."},"Class: WP_REST_Font_Families_Controller":{"prefix":"WP_REST_Font_Families_Controller","body":"WP_REST_Font_Families_Controller","description":"Font Families Controller class."},"Class: WP_REST_Global_Styles_Controller":{"prefix":"WP_REST_Global_Styles_Controller","body":"WP_REST_Global_Styles_Controller","description":"Base Global Styles REST API Controller."},"Class: WP_REST_Global_Styles_Revisions_Controller":{"prefix":"WP_REST_Global_Styles_Revisions_Controller","body":"WP_REST_Global_Styles_Revisions_Controller","description":"Core class used to access global styles revisions via the REST API."},"Class: WP_REST_Menu_Items_Controller":{"prefix":"WP_REST_Menu_Items_Controller","body":"WP_REST_Menu_Items_Controller","description":"Core class to access nav items via the REST API."},"Class: WP_REST_Menu_Locations_Controller":{"prefix":"WP_REST_Menu_Locations_Controller","body":"WP_REST_Menu_Locations_Controller","description":"Core class used to access menu locations via the REST API."},"Class: WP_REST_Menus_Controller":{"prefix":"WP_REST_Menus_Controller","body":"WP_REST_Menus_Controller","description":"Core class used to managed menu terms associated via the REST API."},"Class: WP_REST_Navigation_Fallback_Controller":{"prefix":"WP_REST_Navigation_Fallback_Controller","body":"WP_REST_Navigation_Fallback_Controller","description":"REST Controller to fetch a fallback Navigation Block Menu. If needed it creates one."},"Class: WP_REST_Pattern_Directory_Controller":{"prefix":"WP_REST_Pattern_Directory_Controller","body":"WP_REST_Pattern_Directory_Controller","description":"Controller which provides REST endpoint for block patterns."},"Class: WP_REST_Plugins_Controller":{"prefix":"WP_REST_Plugins_Controller","body":"WP_REST_Plugins_Controller","description":"Core class to access plugins via the REST API."},"Class: WP_REST_Post_Statuses_Controller":{"prefix":"WP_REST_Post_Statuses_Controller","body":"WP_REST_Post_Statuses_Controller","description":"Core class used to access post statuses via the REST API."},"Class: WP_REST_Post_Types_Controller":{"prefix":"WP_REST_Post_Types_Controller","body":"WP_REST_Post_Types_Controller","description":"Core class to access post types via the REST API."},"Class: WP_REST_Posts_Controller":{"prefix":"WP_REST_Posts_Controller","body":"WP_REST_Posts_Controller","description":"Core class to access posts via the REST API."},"Class: WP_REST_Revisions_Controller":{"prefix":"WP_REST_Revisions_Controller","body":"WP_REST_Revisions_Controller","description":"Core class used to access revisions via the REST API."},"Class: WP_REST_Search_Controller":{"prefix":"WP_REST_Search_Controller","body":"WP_REST_Search_Controller","description":"Core class to search through all WordPress content via the REST API."},"Class: WP_REST_Settings_Controller":{"prefix":"WP_REST_Settings_Controller","body":"WP_REST_Settings_Controller","description":"Core class used to manage a site's settings via the REST API."},"Class: WP_REST_Sidebars_Controller":{"prefix":"WP_REST_Sidebars_Controller","body":"WP_REST_Sidebars_Controller","description":"Core class used to manage a site's sidebars."},"Class: WP_REST_Site_Health_Controller":{"prefix":"WP_REST_Site_Health_Controller","body":"WP_REST_Site_Health_Controller","description":"Core class for interacting with Site Health tests."},"Class: WP_REST_Taxonomies_Controller":{"prefix":"WP_REST_Taxonomies_Controller","body":"WP_REST_Taxonomies_Controller","description":"Core class used to manage taxonomies via the REST API."},"Class: WP_REST_Template_Autosaves_Controller":{"prefix":"WP_REST_Template_Autosaves_Controller","body":"WP_REST_Template_Autosaves_Controller","description":"Core class used to access template autosaves via the REST API."},"Class: WP_REST_Template_Revisions_Controller":{"prefix":"WP_REST_Template_Revisions_Controller","body":"WP_REST_Template_Revisions_Controller","description":"Core class used to access template revisions via the REST API."},"Class: WP_REST_Templates_Controller":{"prefix":"WP_REST_Templates_Controller","body":"WP_REST_Templates_Controller","description":"Base Templates REST API Controller."},"Class: WP_REST_Terms_Controller":{"prefix":"WP_REST_Terms_Controller","body":"WP_REST_Terms_Controller","description":"Core class used to managed terms associated with a taxonomy via the REST API."},"Class: WP_REST_Themes_Controller":{"prefix":"WP_REST_Themes_Controller","body":"WP_REST_Themes_Controller","description":"Core class used to manage themes via the REST API."},"Class: WP_REST_URL_Details_Controller":{"prefix":"WP_REST_URL_Details_Controller","body":"WP_REST_URL_Details_Controller","description":"Controller which provides REST endpoint for retrieving information from a remote site's HTML response."},"Class: WP_REST_Users_Controller":{"prefix":"WP_REST_Users_Controller","body":"WP_REST_Users_Controller","description":"Core class used to manage users via the REST API."},"Class: WP_REST_Widget_Types_Controller":{"prefix":"WP_REST_Widget_Types_Controller","body":"WP_REST_Widget_Types_Controller","description":"Core class to access widget types via the REST API."},"Class: WP_REST_Widgets_Controller":{"prefix":"WP_REST_Widgets_Controller","body":"WP_REST_Widgets_Controller","description":"Core class to access widgets via the REST API."},"Class: WP_REST_Comment_Meta_Fields":{"prefix":"WP_REST_Comment_Meta_Fields","body":"WP_REST_Comment_Meta_Fields","description":"Core class to manage comment meta via the REST API."},"Class: WP_REST_Meta_Fields":{"prefix":"WP_REST_Meta_Fields","body":"WP_REST_Meta_Fields","description":"Core class to manage meta values for an object via the REST API."},"Class: WP_REST_Post_Meta_Fields":{"prefix":"WP_REST_Post_Meta_Fields","body":"WP_REST_Post_Meta_Fields","description":"Core class used to manage meta values for posts via the REST API."},"Class: WP_REST_Term_Meta_Fields":{"prefix":"WP_REST_Term_Meta_Fields","body":"WP_REST_Term_Meta_Fields","description":"Core class used to manage meta values for terms via the REST API."},"Class: WP_REST_User_Meta_Fields":{"prefix":"WP_REST_User_Meta_Fields","body":"WP_REST_User_Meta_Fields","description":"Core class used to manage meta values for users via the REST API."},"Class: WP_REST_Post_Format_Search_Handler":{"prefix":"WP_REST_Post_Format_Search_Handler","body":"WP_REST_Post_Format_Search_Handler","description":"Core class representing a search handler for post formats in the REST API."},"Class: WP_REST_Post_Search_Handler":{"prefix":"WP_REST_Post_Search_Handler","body":"WP_REST_Post_Search_Handler","description":"Core class representing a search handler for posts in the REST API."},"Class: WP_REST_Search_Handler":{"prefix":"WP_REST_Search_Handler","body":"WP_REST_Search_Handler","description":"Core base class representing a search handler for an object type in the REST API."},"Class: WP_REST_Term_Search_Handler":{"prefix":"WP_REST_Term_Search_Handler","body":"WP_REST_Term_Search_Handler","description":"Core class representing a search handler for terms in the REST API."},"Class: MagpieRSS":{"prefix":"MagpieRSS","body":"MagpieRSS","description":""},"Class: RSSCache":{"prefix":"RSSCache","body":"RSSCache","description":""},"Class: WP_Sitemaps_Index":{"prefix":"WP_Sitemaps_Index","body":"WP_Sitemaps_Index","description":"Class WP_Sitemaps_Index."},"Class: WP_Sitemaps_Provider":{"prefix":"WP_Sitemaps_Provider","body":"WP_Sitemaps_Provider","description":"Class WP_Sitemaps_Provider."},"Class: WP_Sitemaps_Registry":{"prefix":"WP_Sitemaps_Registry","body":"WP_Sitemaps_Registry","description":"Class WP_Sitemaps_Registry."},"Class: WP_Sitemaps_Renderer":{"prefix":"WP_Sitemaps_Renderer","body":"WP_Sitemaps_Renderer","description":"Class WP_Sitemaps_Renderer"},"Class: WP_Sitemaps_Stylesheet":{"prefix":"WP_Sitemaps_Stylesheet","body":"WP_Sitemaps_Stylesheet","description":"Stylesheet provider class."},"Class: WP_Sitemaps":{"prefix":"WP_Sitemaps","body":"WP_Sitemaps","description":"Class WP_Sitemaps."},"Class: WP_Sitemaps_Posts":{"prefix":"WP_Sitemaps_Posts","body":"WP_Sitemaps_Posts","description":"Posts XML sitemap provider."},"Class: WP_Sitemaps_Taxonomies":{"prefix":"WP_Sitemaps_Taxonomies","body":"WP_Sitemaps_Taxonomies","description":"Taxonomies XML sitemap provider."},"Class: WP_Sitemaps_Users":{"prefix":"WP_Sitemaps_Users","body":"WP_Sitemaps_Users","description":"Users XML sitemap provider."},"Class: WP_Style_Engine_CSS_Declarations":{"prefix":"WP_Style_Engine_CSS_Declarations","body":"WP_Style_Engine_CSS_Declarations","description":"Core class used for style engine CSS declarations."},"Class: WP_Style_Engine_CSS_Rule":{"prefix":"WP_Style_Engine_CSS_Rule","body":"WP_Style_Engine_CSS_Rule","description":"Core class used for style engine CSS rules."},"Class: WP_Style_Engine_CSS_Rules_Store":{"prefix":"WP_Style_Engine_CSS_Rules_Store","body":"WP_Style_Engine_CSS_Rules_Store","description":"Core class used as a store for WP_Style_Engine_CSS_Rule objects."},"Class: WP_Style_Engine_Processor":{"prefix":"WP_Style_Engine_Processor","body":"WP_Style_Engine_Processor","description":"Core class used to compile styles from stores or collection of CSS rules."},"Class: WP_Style_Engine":{"prefix":"WP_Style_Engine","body":"WP_Style_Engine","description":"The main class integrating all other WP_Style_Engine_* classes."},"Class: Text_Diff_Engine_native":{"prefix":"Text_Diff_Engine_native","body":"Text_Diff_Engine_native","description":"Class used internally by Text_Diff to actually compute the diffs."},"Class: Text_Diff_Engine_shell":{"prefix":"Text_Diff_Engine_shell","body":"Text_Diff_Engine_shell","description":"Class used internally by Diff to actually compute the diffs."},"Class: Text_Diff_Engine_string":{"prefix":"Text_Diff_Engine_string","body":"Text_Diff_Engine_string","description":"Parses unified or context diffs output from eg. the diff utility."},"Class: Text_Diff_Engine_xdiff":{"prefix":"Text_Diff_Engine_xdiff","body":"Text_Diff_Engine_xdiff","description":"Class used internally by Diff to actually compute the diffs."},"Class: Text_Diff_Renderer_inline":{"prefix":"Text_Diff_Renderer_inline","body":"Text_Diff_Renderer_inline","description":"\"Inline\" diff renderer."},"Class: Text_Diff_Renderer":{"prefix":"Text_Diff_Renderer","body":"Text_Diff_Renderer","description":"A class to render Diffs in different formats."},"Class: Text_Diff":{"prefix":"Text_Diff","body":"Text_Diff","description":"General API for generating and formatting diffs - the differences between two sequences of strings."},"Class: Text_MappedDiff":{"prefix":"Text_MappedDiff","body":"Text_MappedDiff","description":"General API for generating and formatting diffs - the differences between two sequences of strings."},"Class: Text_Diff_Op":{"prefix":"Text_Diff_Op","body":"Text_Diff_Op","description":""},"Class: Text_Diff_Op_copy":{"prefix":"Text_Diff_Op_copy","body":"Text_Diff_Op_copy","description":""},"Class: Text_Diff_Op_delete":{"prefix":"Text_Diff_Op_delete","body":"Text_Diff_Op_delete","description":""},"Class: Text_Diff_Op_add":{"prefix":"Text_Diff_Op_add","body":"Text_Diff_Op_add","description":""},"Class: Text_Diff_Op_change":{"prefix":"Text_Diff_Op_change","body":"Text_Diff_Op_change","description":""},"Class: Text_Exception":{"prefix":"Text_Exception","body":"Text_Exception","description":"Exception for errors from the Text_Diff package."},"Class: WP_Nav_Menu_Widget":{"prefix":"WP_Nav_Menu_Widget","body":"WP_Nav_Menu_Widget","description":"Core class used to implement the Navigation Menu widget."},"Class: WP_Widget_Archives":{"prefix":"WP_Widget_Archives","body":"WP_Widget_Archives","description":"Core class used to implement the Archives widget."},"Class: WP_Widget_Block":{"prefix":"WP_Widget_Block","body":"WP_Widget_Block","description":"Core class used to implement a Block widget."},"Class: WP_Widget_Calendar":{"prefix":"WP_Widget_Calendar","body":"WP_Widget_Calendar","description":"Core class used to implement the Calendar widget."},"Class: WP_Widget_Categories":{"prefix":"WP_Widget_Categories","body":"WP_Widget_Categories","description":"Core class used to implement a Categories widget."},"Class: WP_Widget_Custom_HTML":{"prefix":"WP_Widget_Custom_HTML","body":"WP_Widget_Custom_HTML","description":"Core class used to implement a Custom HTML widget."},"Class: WP_Widget_Links":{"prefix":"WP_Widget_Links","body":"WP_Widget_Links","description":"Core class used to implement a Links widget."},"Class: WP_Widget_Media_Audio":{"prefix":"WP_Widget_Media_Audio","body":"WP_Widget_Media_Audio","description":"Core class that implements an audio widget."},"Class: WP_Widget_Media_Gallery":{"prefix":"WP_Widget_Media_Gallery","body":"WP_Widget_Media_Gallery","description":"Core class that implements a gallery widget."},"Class: WP_Widget_Media_Image":{"prefix":"WP_Widget_Media_Image","body":"WP_Widget_Media_Image","description":"Core class that implements an image widget."},"Class: WP_Widget_Media_Video":{"prefix":"WP_Widget_Media_Video","body":"WP_Widget_Media_Video","description":"Core class that implements a video widget."},"Class: WP_Widget_Media":{"prefix":"WP_Widget_Media","body":"WP_Widget_Media","description":"Core class that implements a media widget."},"Class: WP_Widget_Meta":{"prefix":"WP_Widget_Meta","body":"WP_Widget_Meta","description":"Core class used to implement a Meta widget."},"Class: WP_Widget_Pages":{"prefix":"WP_Widget_Pages","body":"WP_Widget_Pages","description":"Core class used to implement a Pages widget."},"Class: WP_Widget_Recent_Comments":{"prefix":"WP_Widget_Recent_Comments","body":"WP_Widget_Recent_Comments","description":"Core class used to implement a Recent Comments widget."},"Class: WP_Widget_Recent_Posts":{"prefix":"WP_Widget_Recent_Posts","body":"WP_Widget_Recent_Posts","description":"Core class used to implement a Recent Posts widget."},"Class: WP_Widget_RSS":{"prefix":"WP_Widget_RSS","body":"WP_Widget_RSS","description":"Core class used to implement a RSS widget."},"Class: WP_Widget_Search":{"prefix":"WP_Widget_Search","body":"WP_Widget_Search","description":"Core class used to implement a Search widget."},"Class: WP_Widget_Tag_Cloud":{"prefix":"WP_Widget_Tag_Cloud","body":"WP_Widget_Tag_Cloud","description":"Core class used to implement a Tag cloud widget."},"Class: WP_Widget_Text":{"prefix":"WP_Widget_Text","body":"WP_Widget_Text","description":"Core class used to implement a Text widget."},"Constant: CRLF":{"prefix":"CRLF","body":"CRLF","description":""},"Constant: FTP_AUTOASCII":{"prefix":"FTP_AUTOASCII","body":"FTP_AUTOASCII","description":""},"Constant: FTP_BINARY":{"prefix":"FTP_BINARY","body":"FTP_BINARY","description":""},"Constant: FTP_ASCII":{"prefix":"FTP_ASCII","body":"FTP_ASCII","description":""},"Constant: FTP_FORCE":{"prefix":"FTP_FORCE","body":"FTP_FORCE","description":""},"Constant: FTP_OS_Unix":{"prefix":"FTP_OS_Unix","body":"FTP_OS_Unix","description":""},"Constant: FTP_OS_Windows":{"prefix":"FTP_OS_Windows","body":"FTP_OS_Windows","description":""},"Constant: FTP_OS_Mac":{"prefix":"FTP_OS_Mac","body":"FTP_OS_Mac","description":""},"Constant: PCLZIP_READ_BLOCK_SIZE":{"prefix":"PCLZIP_READ_BLOCK_SIZE","body":"PCLZIP_READ_BLOCK_SIZE","description":""},"Constant: PCLZIP_SEPARATOR":{"prefix":"PCLZIP_SEPARATOR","body":"PCLZIP_SEPARATOR","description":""},"Constant: PCLZIP_ERROR_EXTERNAL":{"prefix":"PCLZIP_ERROR_EXTERNAL","body":"PCLZIP_ERROR_EXTERNAL","description":""},"Constant: PCLZIP_TEMPORARY_DIR":{"prefix":"PCLZIP_TEMPORARY_DIR","body":"PCLZIP_TEMPORARY_DIR","description":""},"Constant: PCLZIP_TEMPORARY_FILE_RATIO":{"prefix":"PCLZIP_TEMPORARY_FILE_RATIO","body":"PCLZIP_TEMPORARY_FILE_RATIO","description":""},"Constant: PCLZIP_ERR_USER_ABORTED":{"prefix":"PCLZIP_ERR_USER_ABORTED","body":"PCLZIP_ERR_USER_ABORTED","description":""},"Constant: PCLZIP_ERR_NO_ERROR":{"prefix":"PCLZIP_ERR_NO_ERROR","body":"PCLZIP_ERR_NO_ERROR","description":""},"Constant: PCLZIP_ERR_WRITE_OPEN_FAIL":{"prefix":"PCLZIP_ERR_WRITE_OPEN_FAIL","body":"PCLZIP_ERR_WRITE_OPEN_FAIL","description":""},"Constant: PCLZIP_ERR_READ_OPEN_FAIL":{"prefix":"PCLZIP_ERR_READ_OPEN_FAIL","body":"PCLZIP_ERR_READ_OPEN_FAIL","description":""},"Constant: PCLZIP_ERR_INVALID_PARAMETER":{"prefix":"PCLZIP_ERR_INVALID_PARAMETER","body":"PCLZIP_ERR_INVALID_PARAMETER","description":""},"Constant: PCLZIP_ERR_MISSING_FILE":{"prefix":"PCLZIP_ERR_MISSING_FILE","body":"PCLZIP_ERR_MISSING_FILE","description":""},"Constant: PCLZIP_ERR_FILENAME_TOO_LONG":{"prefix":"PCLZIP_ERR_FILENAME_TOO_LONG","body":"PCLZIP_ERR_FILENAME_TOO_LONG","description":""},"Constant: PCLZIP_ERR_INVALID_ZIP":{"prefix":"PCLZIP_ERR_INVALID_ZIP","body":"PCLZIP_ERR_INVALID_ZIP","description":""},"Constant: PCLZIP_ERR_BAD_EXTRACTED_FILE":{"prefix":"PCLZIP_ERR_BAD_EXTRACTED_FILE","body":"PCLZIP_ERR_BAD_EXTRACTED_FILE","description":""},"Constant: PCLZIP_ERR_DIR_CREATE_FAIL":{"prefix":"PCLZIP_ERR_DIR_CREATE_FAIL","body":"PCLZIP_ERR_DIR_CREATE_FAIL","description":""},"Constant: PCLZIP_ERR_BAD_EXTENSION":{"prefix":"PCLZIP_ERR_BAD_EXTENSION","body":"PCLZIP_ERR_BAD_EXTENSION","description":""},"Constant: PCLZIP_ERR_BAD_FORMAT":{"prefix":"PCLZIP_ERR_BAD_FORMAT","body":"PCLZIP_ERR_BAD_FORMAT","description":""},"Constant: PCLZIP_ERR_DELETE_FILE_FAIL":{"prefix":"PCLZIP_ERR_DELETE_FILE_FAIL","body":"PCLZIP_ERR_DELETE_FILE_FAIL","description":""},"Constant: PCLZIP_ERR_RENAME_FILE_FAIL":{"prefix":"PCLZIP_ERR_RENAME_FILE_FAIL","body":"PCLZIP_ERR_RENAME_FILE_FAIL","description":""},"Constant: PCLZIP_ERR_BAD_CHECKSUM":{"prefix":"PCLZIP_ERR_BAD_CHECKSUM","body":"PCLZIP_ERR_BAD_CHECKSUM","description":""},"Constant: PCLZIP_ERR_INVALID_ARCHIVE_ZIP":{"prefix":"PCLZIP_ERR_INVALID_ARCHIVE_ZIP","body":"PCLZIP_ERR_INVALID_ARCHIVE_ZIP","description":""},"Constant: PCLZIP_ERR_MISSING_OPTION_VALUE":{"prefix":"PCLZIP_ERR_MISSING_OPTION_VALUE","body":"PCLZIP_ERR_MISSING_OPTION_VALUE","description":""},"Constant: PCLZIP_ERR_INVALID_OPTION_VALUE":{"prefix":"PCLZIP_ERR_INVALID_OPTION_VALUE","body":"PCLZIP_ERR_INVALID_OPTION_VALUE","description":""},"Constant: PCLZIP_ERR_ALREADY_A_DIRECTORY":{"prefix":"PCLZIP_ERR_ALREADY_A_DIRECTORY","body":"PCLZIP_ERR_ALREADY_A_DIRECTORY","description":""},"Constant: PCLZIP_ERR_UNSUPPORTED_COMPRESSION":{"prefix":"PCLZIP_ERR_UNSUPPORTED_COMPRESSION","body":"PCLZIP_ERR_UNSUPPORTED_COMPRESSION","description":""},"Constant: PCLZIP_ERR_UNSUPPORTED_ENCRYPTION":{"prefix":"PCLZIP_ERR_UNSUPPORTED_ENCRYPTION","body":"PCLZIP_ERR_UNSUPPORTED_ENCRYPTION","description":""},"Constant: PCLZIP_ERR_INVALID_ATTRIBUTE_VALUE":{"prefix":"PCLZIP_ERR_INVALID_ATTRIBUTE_VALUE","body":"PCLZIP_ERR_INVALID_ATTRIBUTE_VALUE","description":""},"Constant: PCLZIP_ERR_DIRECTORY_RESTRICTION":{"prefix":"PCLZIP_ERR_DIRECTORY_RESTRICTION","body":"PCLZIP_ERR_DIRECTORY_RESTRICTION","description":""},"Constant: PCLZIP_OPT_PATH":{"prefix":"PCLZIP_OPT_PATH","body":"PCLZIP_OPT_PATH","description":""},"Constant: PCLZIP_OPT_ADD_PATH":{"prefix":"PCLZIP_OPT_ADD_PATH","body":"PCLZIP_OPT_ADD_PATH","description":""},"Constant: PCLZIP_OPT_REMOVE_PATH":{"prefix":"PCLZIP_OPT_REMOVE_PATH","body":"PCLZIP_OPT_REMOVE_PATH","description":""},"Constant: PCLZIP_OPT_REMOVE_ALL_PATH":{"prefix":"PCLZIP_OPT_REMOVE_ALL_PATH","body":"PCLZIP_OPT_REMOVE_ALL_PATH","description":""},"Constant: PCLZIP_OPT_SET_CHMOD":{"prefix":"PCLZIP_OPT_SET_CHMOD","body":"PCLZIP_OPT_SET_CHMOD","description":""},"Constant: PCLZIP_OPT_EXTRACT_AS_STRING":{"prefix":"PCLZIP_OPT_EXTRACT_AS_STRING","body":"PCLZIP_OPT_EXTRACT_AS_STRING","description":""},"Constant: PCLZIP_OPT_NO_COMPRESSION":{"prefix":"PCLZIP_OPT_NO_COMPRESSION","body":"PCLZIP_OPT_NO_COMPRESSION","description":""},"Constant: PCLZIP_OPT_BY_NAME":{"prefix":"PCLZIP_OPT_BY_NAME","body":"PCLZIP_OPT_BY_NAME","description":""},"Constant: PCLZIP_OPT_BY_INDEX":{"prefix":"PCLZIP_OPT_BY_INDEX","body":"PCLZIP_OPT_BY_INDEX","description":""},"Constant: PCLZIP_OPT_BY_EREG":{"prefix":"PCLZIP_OPT_BY_EREG","body":"PCLZIP_OPT_BY_EREG","description":""},"Constant: PCLZIP_OPT_BY_PREG":{"prefix":"PCLZIP_OPT_BY_PREG","body":"PCLZIP_OPT_BY_PREG","description":""},"Constant: PCLZIP_OPT_COMMENT":{"prefix":"PCLZIP_OPT_COMMENT","body":"PCLZIP_OPT_COMMENT","description":""},"Constant: PCLZIP_OPT_ADD_COMMENT":{"prefix":"PCLZIP_OPT_ADD_COMMENT","body":"PCLZIP_OPT_ADD_COMMENT","description":""},"Constant: PCLZIP_OPT_PREPEND_COMMENT":{"prefix":"PCLZIP_OPT_PREPEND_COMMENT","body":"PCLZIP_OPT_PREPEND_COMMENT","description":""},"Constant: PCLZIP_OPT_EXTRACT_IN_OUTPUT":{"prefix":"PCLZIP_OPT_EXTRACT_IN_OUTPUT","body":"PCLZIP_OPT_EXTRACT_IN_OUTPUT","description":""},"Constant: PCLZIP_OPT_REPLACE_NEWER":{"prefix":"PCLZIP_OPT_REPLACE_NEWER","body":"PCLZIP_OPT_REPLACE_NEWER","description":""},"Constant: PCLZIP_OPT_STOP_ON_ERROR":{"prefix":"PCLZIP_OPT_STOP_ON_ERROR","body":"PCLZIP_OPT_STOP_ON_ERROR","description":""},"Constant: PCLZIP_OPT_EXTRACT_DIR_RESTRICTION":{"prefix":"PCLZIP_OPT_EXTRACT_DIR_RESTRICTION","body":"PCLZIP_OPT_EXTRACT_DIR_RESTRICTION","description":""},"Constant: PCLZIP_OPT_TEMP_FILE_THRESHOLD":{"prefix":"PCLZIP_OPT_TEMP_FILE_THRESHOLD","body":"PCLZIP_OPT_TEMP_FILE_THRESHOLD","description":""},"Constant: PCLZIP_OPT_ADD_TEMP_FILE_THRESHOLD":{"prefix":"PCLZIP_OPT_ADD_TEMP_FILE_THRESHOLD","body":"PCLZIP_OPT_ADD_TEMP_FILE_THRESHOLD","description":""},"Constant: PCLZIP_OPT_TEMP_FILE_ON":{"prefix":"PCLZIP_OPT_TEMP_FILE_ON","body":"PCLZIP_OPT_TEMP_FILE_ON","description":""},"Constant: PCLZIP_OPT_ADD_TEMP_FILE_ON":{"prefix":"PCLZIP_OPT_ADD_TEMP_FILE_ON","body":"PCLZIP_OPT_ADD_TEMP_FILE_ON","description":""},"Constant: PCLZIP_OPT_TEMP_FILE_OFF":{"prefix":"PCLZIP_OPT_TEMP_FILE_OFF","body":"PCLZIP_OPT_TEMP_FILE_OFF","description":""},"Constant: PCLZIP_OPT_ADD_TEMP_FILE_OFF":{"prefix":"PCLZIP_OPT_ADD_TEMP_FILE_OFF","body":"PCLZIP_OPT_ADD_TEMP_FILE_OFF","description":""},"Constant: PCLZIP_ATT_FILE_NAME":{"prefix":"PCLZIP_ATT_FILE_NAME","body":"PCLZIP_ATT_FILE_NAME","description":""},"Constant: PCLZIP_ATT_FILE_NEW_SHORT_NAME":{"prefix":"PCLZIP_ATT_FILE_NEW_SHORT_NAME","body":"PCLZIP_ATT_FILE_NEW_SHORT_NAME","description":""},"Constant: PCLZIP_ATT_FILE_NEW_FULL_NAME":{"prefix":"PCLZIP_ATT_FILE_NEW_FULL_NAME","body":"PCLZIP_ATT_FILE_NEW_FULL_NAME","description":""},"Constant: PCLZIP_ATT_FILE_MTIME":{"prefix":"PCLZIP_ATT_FILE_MTIME","body":"PCLZIP_ATT_FILE_MTIME","description":""},"Constant: PCLZIP_ATT_FILE_CONTENT":{"prefix":"PCLZIP_ATT_FILE_CONTENT","body":"PCLZIP_ATT_FILE_CONTENT","description":""},"Constant: PCLZIP_ATT_FILE_COMMENT":{"prefix":"PCLZIP_ATT_FILE_COMMENT","body":"PCLZIP_ATT_FILE_COMMENT","description":""},"Constant: PCLZIP_CB_PRE_EXTRACT":{"prefix":"PCLZIP_CB_PRE_EXTRACT","body":"PCLZIP_CB_PRE_EXTRACT","description":""},"Constant: PCLZIP_CB_POST_EXTRACT":{"prefix":"PCLZIP_CB_POST_EXTRACT","body":"PCLZIP_CB_POST_EXTRACT","description":""},"Constant: PCLZIP_CB_PRE_ADD":{"prefix":"PCLZIP_CB_PRE_ADD","body":"PCLZIP_CB_PRE_ADD","description":""},"Constant: PCLZIP_CB_POST_ADD":{"prefix":"PCLZIP_CB_POST_ADD","body":"PCLZIP_CB_POST_ADD","description":""},"Constant: FS_TIMEOUT":{"prefix":"FS_TIMEOUT","body":"FS_TIMEOUT","description":""},"Constant: WXR_VERSION":{"prefix":"WXR_VERSION","body":"WXR_VERSION","description":"Version number for the export format."},"Constant: FS_CONNECT_TIMEOUT":{"prefix":"FS_CONNECT_TIMEOUT","body":"FS_CONNECT_TIMEOUT","description":""},"Constant: FS_CHMOD_DIR":{"prefix":"FS_CHMOD_DIR","body":"FS_CHMOD_DIR","description":""},"Constant: FS_CHMOD_FILE":{"prefix":"FS_CHMOD_FILE","body":"FS_CHMOD_FILE","description":""},"Constant: GETID3_TEMP_DIR":{"prefix":"GETID3_TEMP_DIR","body":"GETID3_TEMP_DIR","description":""},"Constant: WP_UNINSTALL_PLUGIN":{"prefix":"WP_UNINSTALL_PLUGIN","body":"WP_UNINSTALL_PLUGIN","description":""},"Constant: WP_SANDBOX_SCRAPING":{"prefix":"WP_SANDBOX_SCRAPING","body":"WP_SANDBOX_SCRAPING","description":""},"Constant: DOING_AUTOSAVE":{"prefix":"DOING_AUTOSAVE","body":"DOING_AUTOSAVE","description":""},"Constant: WP_INSTALLING_NETWORK":{"prefix":"WP_INSTALLING_NETWORK","body":"WP_INSTALLING_NETWORK","description":""},"Constant: REQUESTS_SILENCE_PSR0_DEPRECATIONS":{"prefix":"REQUESTS_SILENCE_PSR0_DEPRECATIONS","body":"REQUESTS_SILENCE_PSR0_DEPRECATIONS","description":""},"Constant: IFRAME_REQUEST":{"prefix":"IFRAME_REQUEST","body":"IFRAME_REQUEST","description":""},"Constant: WP_TEMPLATE_PART_AREA_HEADER":{"prefix":"WP_TEMPLATE_PART_AREA_HEADER","body":"WP_TEMPLATE_PART_AREA_HEADER","description":""},"Constant: WP_TEMPLATE_PART_AREA_FOOTER":{"prefix":"WP_TEMPLATE_PART_AREA_FOOTER","body":"WP_TEMPLATE_PART_AREA_FOOTER","description":""},"Constant: WP_TEMPLATE_PART_AREA_SIDEBAR":{"prefix":"WP_TEMPLATE_PART_AREA_SIDEBAR","body":"WP_TEMPLATE_PART_AREA_SIDEBAR","description":""},"Constant: WP_TEMPLATE_PART_AREA_UNCATEGORIZED":{"prefix":"WP_TEMPLATE_PART_AREA_UNCATEGORIZED","body":"WP_TEMPLATE_PART_AREA_UNCATEGORIZED","description":""},"Constant: BLOCKS_PATH":{"prefix":"BLOCKS_PATH","body":"BLOCKS_PATH","description":""},"Constant: FOUND":{"prefix":"FOUND","body":"FOUND","description":""},"Constant: NOT_FOUND":{"prefix":"NOT_FOUND","body":"NOT_FOUND","description":""},"Constant: TRUNCATED":{"prefix":"TRUNCATED","body":"TRUNCATED","description":""},"Constant: ABORTED":{"prefix":"ABORTED","body":"ABORTED","description":""},"Constant: INVALID":{"prefix":"INVALID","body":"INVALID","description":""},"Constant: MAX_SIZE":{"prefix":"MAX_SIZE","body":"MAX_SIZE","description":""},"Constant: MAX_NUM_BOXES":{"prefix":"MAX_NUM_BOXES","body":"MAX_NUM_BOXES","description":""},"Constant: MAX_VALUE":{"prefix":"MAX_VALUE","body":"MAX_VALUE","description":""},"Constant: MAX_TILES":{"prefix":"MAX_TILES","body":"MAX_TILES","description":""},"Constant: MAX_PROPS":{"prefix":"MAX_PROPS","body":"MAX_PROPS","description":""},"Constant: MAX_FEATURES":{"prefix":"MAX_FEATURES","body":"MAX_FEATURES","description":""},"Constant: UNDEFINED":{"prefix":"UNDEFINED","body":"UNDEFINED","description":""},"Constant: SERVICES_JSON_SLICE":{"prefix":"SERVICES_JSON_SLICE","body":"SERVICES_JSON_SLICE","description":"Marker constant for Services_JSON::decode(), used to flag stack state"},"Constant: SERVICES_JSON_IN_STR":{"prefix":"SERVICES_JSON_IN_STR","body":"SERVICES_JSON_IN_STR","description":"Marker constant for Services_JSON::decode(), used to flag stack state"},"Constant: SERVICES_JSON_IN_ARR":{"prefix":"SERVICES_JSON_IN_ARR","body":"SERVICES_JSON_IN_ARR","description":"Marker constant for Services_JSON::decode(), used to flag stack state"},"Constant: SERVICES_JSON_IN_OBJ":{"prefix":"SERVICES_JSON_IN_OBJ","body":"SERVICES_JSON_IN_OBJ","description":"Marker constant for Services_JSON::decode(), used to flag stack state"},"Constant: SERVICES_JSON_IN_CMT":{"prefix":"SERVICES_JSON_IN_CMT","body":"SERVICES_JSON_IN_CMT","description":"Marker constant for Services_JSON::decode(), used to flag stack state"},"Constant: SERVICES_JSON_LOOSE_TYPE":{"prefix":"SERVICES_JSON_LOOSE_TYPE","body":"SERVICES_JSON_LOOSE_TYPE","description":"Behavior switch for Services_JSON::decode()"},"Constant: SERVICES_JSON_SUPPRESS_ERRORS":{"prefix":"SERVICES_JSON_SUPPRESS_ERRORS","body":"SERVICES_JSON_SUPPRESS_ERRORS","description":"Behavior switch for Services_JSON::decode()"},"Constant: SERVICES_JSON_USE_TO_JSON":{"prefix":"SERVICES_JSON_USE_TO_JSON","body":"SERVICES_JSON_USE_TO_JSON","description":"Behavior switch for Services_JSON::decode()"},"Constant: EZSQL_VERSION":{"prefix":"EZSQL_VERSION","body":"EZSQL_VERSION","description":""},"Constant: OBJECT":{"prefix":"OBJECT","body":"OBJECT","description":""},"Constant: object":{"prefix":"object","body":"object","description":""},"Constant: OBJECT_K":{"prefix":"OBJECT_K","body":"OBJECT_K","description":""},"Constant: ARRAY_A":{"prefix":"ARRAY_A","body":"ARRAY_A","description":""},"Constant: ARRAY_N":{"prefix":"ARRAY_N","body":"ARRAY_N","description":""},"Constant: COMMENTS_TEMPLATE":{"prefix":"COMMENTS_TEMPLATE","body":"COMMENTS_TEMPLATE","description":""},"Constant: IMAGETYPE_AVIF":{"prefix":"IMAGETYPE_AVIF","body":"IMAGETYPE_AVIF","description":""},"Constant: IMG_AVIF":{"prefix":"IMG_AVIF","body":"IMG_AVIF","description":""},"Constant: IMAGETYPE_HEIC":{"prefix":"IMAGETYPE_HEIC","body":"IMAGETYPE_HEIC","description":""},"Constant: KB_IN_BYTES":{"prefix":"KB_IN_BYTES","body":"KB_IN_BYTES","description":""},"Constant: MB_IN_BYTES":{"prefix":"MB_IN_BYTES","body":"MB_IN_BYTES","description":""},"Constant: GB_IN_BYTES":{"prefix":"GB_IN_BYTES","body":"GB_IN_BYTES","description":""},"Constant: TB_IN_BYTES":{"prefix":"TB_IN_BYTES","body":"TB_IN_BYTES","description":""},"Constant: PB_IN_BYTES":{"prefix":"PB_IN_BYTES","body":"PB_IN_BYTES","description":""},"Constant: EB_IN_BYTES":{"prefix":"EB_IN_BYTES","body":"EB_IN_BYTES","description":""},"Constant: ZB_IN_BYTES":{"prefix":"ZB_IN_BYTES","body":"ZB_IN_BYTES","description":""},"Constant: YB_IN_BYTES":{"prefix":"YB_IN_BYTES","body":"YB_IN_BYTES","description":""},"Constant: WP_START_TIMESTAMP":{"prefix":"WP_START_TIMESTAMP","body":"WP_START_TIMESTAMP","description":""},"Constant: WP_MEMORY_LIMIT":{"prefix":"WP_MEMORY_LIMIT","body":"WP_MEMORY_LIMIT","description":""},"Constant: WP_MAX_MEMORY_LIMIT":{"prefix":"WP_MAX_MEMORY_LIMIT","body":"WP_MAX_MEMORY_LIMIT","description":""},"Constant: WP_CONTENT_DIR":{"prefix":"WP_CONTENT_DIR","body":"WP_CONTENT_DIR","description":""},"Constant: WP_DEVELOPMENT_MODE":{"prefix":"WP_DEVELOPMENT_MODE","body":"WP_DEVELOPMENT_MODE","description":""},"Constant: WP_DEBUG":{"prefix":"WP_DEBUG","body":"WP_DEBUG","description":""},"Constant: WP_DEBUG_DISPLAY":{"prefix":"WP_DEBUG_DISPLAY","body":"WP_DEBUG_DISPLAY","description":""},"Constant: WP_DEBUG_LOG":{"prefix":"WP_DEBUG_LOG","body":"WP_DEBUG_LOG","description":""},"Constant: WP_CACHE":{"prefix":"WP_CACHE","body":"WP_CACHE","description":""},"Constant: SCRIPT_DEBUG":{"prefix":"SCRIPT_DEBUG","body":"SCRIPT_DEBUG","description":""},"Constant: MEDIA_TRASH":{"prefix":"MEDIA_TRASH","body":"MEDIA_TRASH","description":""},"Constant: SHORTINIT":{"prefix":"SHORTINIT","body":"SHORTINIT","description":""},"Constant: WP_FEATURE_BETTER_PASSWORDS":{"prefix":"WP_FEATURE_BETTER_PASSWORDS","body":"WP_FEATURE_BETTER_PASSWORDS","description":""},"Constant: MINUTE_IN_SECONDS":{"prefix":"MINUTE_IN_SECONDS","body":"MINUTE_IN_SECONDS","description":""},"Constant: HOUR_IN_SECONDS":{"prefix":"HOUR_IN_SECONDS","body":"HOUR_IN_SECONDS","description":""},"Constant: DAY_IN_SECONDS":{"prefix":"DAY_IN_SECONDS","body":"DAY_IN_SECONDS","description":""},"Constant: WEEK_IN_SECONDS":{"prefix":"WEEK_IN_SECONDS","body":"WEEK_IN_SECONDS","description":""},"Constant: MONTH_IN_SECONDS":{"prefix":"MONTH_IN_SECONDS","body":"MONTH_IN_SECONDS","description":""},"Constant: YEAR_IN_SECONDS":{"prefix":"YEAR_IN_SECONDS","body":"YEAR_IN_SECONDS","description":""},"Constant: WP_CONTENT_URL":{"prefix":"WP_CONTENT_URL","body":"WP_CONTENT_URL","description":""},"Constant: WP_PLUGIN_DIR":{"prefix":"WP_PLUGIN_DIR","body":"WP_PLUGIN_DIR","description":""},"Constant: WP_PLUGIN_URL":{"prefix":"WP_PLUGIN_URL","body":"WP_PLUGIN_URL","description":""},"Constant: PLUGINDIR":{"prefix":"PLUGINDIR","body":"PLUGINDIR","description":""},"Constant: WPMU_PLUGIN_DIR":{"prefix":"WPMU_PLUGIN_DIR","body":"WPMU_PLUGIN_DIR","description":""},"Constant: WPMU_PLUGIN_URL":{"prefix":"WPMU_PLUGIN_URL","body":"WPMU_PLUGIN_URL","description":""},"Constant: MUPLUGINDIR":{"prefix":"MUPLUGINDIR","body":"MUPLUGINDIR","description":""},"Constant: COOKIEHASH":{"prefix":"COOKIEHASH","body":"COOKIEHASH","description":""},"Constant: USER_COOKIE":{"prefix":"USER_COOKIE","body":"USER_COOKIE","description":""},"Constant: PASS_COOKIE":{"prefix":"PASS_COOKIE","body":"PASS_COOKIE","description":""},"Constant: AUTH_COOKIE":{"prefix":"AUTH_COOKIE","body":"AUTH_COOKIE","description":""},"Constant: SECURE_AUTH_COOKIE":{"prefix":"SECURE_AUTH_COOKIE","body":"SECURE_AUTH_COOKIE","description":""},"Constant: LOGGED_IN_COOKIE":{"prefix":"LOGGED_IN_COOKIE","body":"LOGGED_IN_COOKIE","description":""},"Constant: TEST_COOKIE":{"prefix":"TEST_COOKIE","body":"TEST_COOKIE","description":""},"Constant: COOKIEPATH":{"prefix":"COOKIEPATH","body":"COOKIEPATH","description":""},"Constant: SITECOOKIEPATH":{"prefix":"SITECOOKIEPATH","body":"SITECOOKIEPATH","description":""},"Constant: ADMIN_COOKIE_PATH":{"prefix":"ADMIN_COOKIE_PATH","body":"ADMIN_COOKIE_PATH","description":""},"Constant: PLUGINS_COOKIE_PATH":{"prefix":"PLUGINS_COOKIE_PATH","body":"PLUGINS_COOKIE_PATH","description":""},"Constant: COOKIE_DOMAIN":{"prefix":"COOKIE_DOMAIN","body":"COOKIE_DOMAIN","description":""},"Constant: RECOVERY_MODE_COOKIE":{"prefix":"RECOVERY_MODE_COOKIE","body":"RECOVERY_MODE_COOKIE","description":""},"Constant: FORCE_SSL_ADMIN":{"prefix":"FORCE_SSL_ADMIN","body":"FORCE_SSL_ADMIN","description":""},"Constant: AUTOSAVE_INTERVAL":{"prefix":"AUTOSAVE_INTERVAL","body":"AUTOSAVE_INTERVAL","description":""},"Constant: EMPTY_TRASH_DAYS":{"prefix":"EMPTY_TRASH_DAYS","body":"EMPTY_TRASH_DAYS","description":""},"Constant: WP_POST_REVISIONS":{"prefix":"WP_POST_REVISIONS","body":"WP_POST_REVISIONS","description":""},"Constant: WP_CRON_LOCK_TIMEOUT":{"prefix":"WP_CRON_LOCK_TIMEOUT","body":"WP_CRON_LOCK_TIMEOUT","description":""},"Constant: TEMPLATEPATH":{"prefix":"TEMPLATEPATH","body":"TEMPLATEPATH","description":"Deprecated | Filesystem path to the current active template directory."},"Constant: STYLESHEETPATH":{"prefix":"STYLESHEETPATH","body":"STYLESHEETPATH","description":"Deprecated | Filesystem path to the current active template stylesheet directory."},"Constant: WP_DEFAULT_THEME":{"prefix":"WP_DEFAULT_THEME","body":"WP_DEFAULT_THEME","description":""},"Constant: CUSTOM_TAGS":{"prefix":"CUSTOM_TAGS","body":"CUSTOM_TAGS","description":""},"Constant: WP_LANG_DIR":{"prefix":"WP_LANG_DIR","body":"WP_LANG_DIR","description":"Server path of the language directory."},"Constant: LANGDIR":{"prefix":"LANGDIR","body":"LANGDIR","description":""},"Constant: UPLOADBLOGSDIR":{"prefix":"UPLOADBLOGSDIR","body":"UPLOADBLOGSDIR","description":""},"Constant: UPLOADS":{"prefix":"UPLOADS","body":"UPLOADS","description":""},"Constant: BLOGUPLOADDIR":{"prefix":"BLOGUPLOADDIR","body":"BLOGUPLOADDIR","description":""},"Constant: WPMU_SENDFILE":{"prefix":"WPMU_SENDFILE","body":"WPMU_SENDFILE","description":""},"Constant: WPMU_ACCEL_REDIRECT":{"prefix":"WPMU_ACCEL_REDIRECT","body":"WPMU_ACCEL_REDIRECT","description":""},"Constant: VHOST":{"prefix":"VHOST","body":"VHOST","description":""},"Constant: SUBDOMAIN_INSTALL":{"prefix":"SUBDOMAIN_INSTALL","body":"SUBDOMAIN_INSTALL","description":""},"Constant: MS_FILES_REQUEST":{"prefix":"MS_FILES_REQUEST","body":"MS_FILES_REQUEST","description":"Multisite upload handler."},"Constant: PO_MAX_LINE_LEN":{"prefix":"PO_MAX_LINE_LEN","body":"PO_MAX_LINE_LEN","description":""},"Constant: REST_API_VERSION":{"prefix":"REST_API_VERSION","body":"REST_API_VERSION","description":"Version number for our API."},"Constant: REST_REQUEST":{"prefix":"REST_REQUEST","body":"REST_REQUEST","description":"Whether this is a REST Request."},"Constant: EP_NONE":{"prefix":"EP_NONE","body":"EP_NONE","description":"Endpoint mask that matches nothing."},"Constant: EP_PERMALINK":{"prefix":"EP_PERMALINK","body":"EP_PERMALINK","description":"Endpoint mask that matches post permalinks."},"Constant: EP_ATTACHMENT":{"prefix":"EP_ATTACHMENT","body":"EP_ATTACHMENT","description":"Endpoint mask that matches attachment permalinks."},"Constant: EP_DATE":{"prefix":"EP_DATE","body":"EP_DATE","description":"Endpoint mask that matches any date archives."},"Constant: EP_YEAR":{"prefix":"EP_YEAR","body":"EP_YEAR","description":"Endpoint mask that matches yearly archives."},"Constant: EP_MONTH":{"prefix":"EP_MONTH","body":"EP_MONTH","description":"Endpoint mask that matches monthly archives."},"Constant: EP_DAY":{"prefix":"EP_DAY","body":"EP_DAY","description":"Endpoint mask that matches daily archives."},"Constant: EP_ROOT":{"prefix":"EP_ROOT","body":"EP_ROOT","description":"Endpoint mask that matches the site root."},"Constant: EP_COMMENTS":{"prefix":"EP_COMMENTS","body":"EP_COMMENTS","description":"Endpoint mask that matches comment feeds."},"Constant: EP_SEARCH":{"prefix":"EP_SEARCH","body":"EP_SEARCH","description":"Endpoint mask that matches searches."},"Constant: EP_CATEGORIES":{"prefix":"EP_CATEGORIES","body":"EP_CATEGORIES","description":"Endpoint mask that matches category archives."},"Constant: EP_TAGS":{"prefix":"EP_TAGS","body":"EP_TAGS","description":"Endpoint mask that matches tag archives."},"Constant: EP_AUTHORS":{"prefix":"EP_AUTHORS","body":"EP_AUTHORS","description":"Endpoint mask that matches author archives."},"Constant: EP_PAGES":{"prefix":"EP_PAGES","body":"EP_PAGES","description":"Endpoint mask that matches pages."},"Constant: EP_ALL_ARCHIVES":{"prefix":"EP_ALL_ARCHIVES","body":"EP_ALL_ARCHIVES","description":"Endpoint mask that matches all archive views."},"Constant: EP_ALL":{"prefix":"EP_ALL","body":"EP_ALL","description":"Endpoint mask that matches everything."},"Constant: RSS":{"prefix":"RSS","body":"RSS","description":"RSS feed constant."},"Constant: ATOM":{"prefix":"ATOM","body":"ATOM","description":""},"Constant: MAGPIE_USER_AGENT":{"prefix":"MAGPIE_USER_AGENT","body":"MAGPIE_USER_AGENT","description":""},"Constant: MAGPIE_INITALIZED":{"prefix":"MAGPIE_INITALIZED","body":"MAGPIE_INITALIZED","description":""},"Constant: MAGPIE_CACHE_ON":{"prefix":"MAGPIE_CACHE_ON","body":"MAGPIE_CACHE_ON","description":""},"Constant: MAGPIE_CACHE_DIR":{"prefix":"MAGPIE_CACHE_DIR","body":"MAGPIE_CACHE_DIR","description":""},"Constant: MAGPIE_CACHE_AGE":{"prefix":"MAGPIE_CACHE_AGE","body":"MAGPIE_CACHE_AGE","description":""},"Constant: MAGPIE_CACHE_FRESH_ONLY":{"prefix":"MAGPIE_CACHE_FRESH_ONLY","body":"MAGPIE_CACHE_FRESH_ONLY","description":""},"Constant: MAGPIE_DEBUG":{"prefix":"MAGPIE_DEBUG","body":"MAGPIE_DEBUG","description":""},"Constant: MAGPIE_FETCH_TIME_OUT":{"prefix":"MAGPIE_FETCH_TIME_OUT","body":"MAGPIE_FETCH_TIME_OUT","description":""},"Constant: MAGPIE_USE_GZIP":{"prefix":"MAGPIE_USE_GZIP","body":"MAGPIE_USE_GZIP","description":""},"ƒ: wp_ajax_nopriv_heartbeat":{"prefix":["wp_ajax_nopriv_heartbeat","wanh"],"body":"wp_ajax_nopriv_heartbeat(  )","description":"Handles the Heartbeat API in the no-privilege context via AJAX ."},"ƒ: wp_ajax_fetch_list":{"prefix":["wp_ajax_fetch_list","wafl"],"body":"wp_ajax_fetch_list(  )","description":"Handles fetching a list table via AJAX."},"ƒ: wp_ajax_ajax_tag_search":{"prefix":["wp_ajax_ajax_tag_search","waats"],"body":"wp_ajax_ajax_tag_search(  )","description":"Handles tag search via AJAX."},"ƒ: wp_ajax_wp_compression_test":{"prefix":["wp_ajax_wp_compression_test","wawct"],"body":"wp_ajax_wp_compression_test(  )","description":"Handles compression testing via AJAX."},"ƒ: wp_ajax_imgedit_preview":{"prefix":["wp_ajax_imgedit_preview","waip"],"body":"wp_ajax_imgedit_preview(  )","description":"Handles image editor previews via AJAX."},"ƒ: wp_ajax_oembed_cache":{"prefix":["wp_ajax_oembed_cache","waoc"],"body":"wp_ajax_oembed_cache(  )","description":"Handles oEmbed caching via AJAX."},"ƒ: wp_ajax_autocomplete_user":{"prefix":["wp_ajax_autocomplete_user","waau"],"body":"wp_ajax_autocomplete_user(  )","description":"Handles user autocomplete via AJAX."},"ƒ: wp_ajax_get_community_events":{"prefix":["wp_ajax_get_community_events","wagce"],"body":"wp_ajax_get_community_events(  )","description":"Handles Ajax requests for community events"},"ƒ: wp_ajax_dashboard_widgets":{"prefix":["wp_ajax_dashboard_widgets","wadw"],"body":"wp_ajax_dashboard_widgets(  )","description":"Handles dashboard widgets via AJAX."},"ƒ: wp_ajax_logged_in":{"prefix":["wp_ajax_logged_in","wali"],"body":"wp_ajax_logged_in(  )","description":"Handles Customizer preview logged-in status via AJAX."},"ƒ: wp_ajax_delete_comment":{"prefix":["wp_ajax_delete_comment","wadc"],"body":"wp_ajax_delete_comment(  )","description":"Handles deleting a comment via AJAX."},"ƒ: wp_ajax_delete_tag":{"prefix":["wp_ajax_delete_tag","wadt"],"body":"wp_ajax_delete_tag(  )","description":"Handles deleting a tag via AJAX."},"ƒ: wp_ajax_delete_link":{"prefix":["wp_ajax_delete_link","wadl"],"body":"wp_ajax_delete_link(  )","description":"Handles deleting a link via AJAX."},"ƒ: wp_ajax_delete_meta":{"prefix":["wp_ajax_delete_meta","wadm"],"body":"wp_ajax_delete_meta(  )","description":"Handles deleting meta via AJAX."},"ƒ: wp_ajax_delete_post":{"prefix":["wp_ajax_delete_post","wadp"],"body":"wp_ajax_delete_post( ${1:\\$action:string} )","description":"Handles deleting a post via AJAX."},"ƒ: wp_ajax_trash_post":{"prefix":["wp_ajax_trash_post","watp"],"body":"wp_ajax_trash_post( ${1:\\$action:string} )","description":"Handles sending a post to the Trash via AJAX."},"ƒ: wp_ajax_untrash_post":{"prefix":["wp_ajax_untrash_post","waup"],"body":"wp_ajax_untrash_post( ${1:\\$action:string} )","description":"Handles restoring a post from the Trash via AJAX."},"ƒ: wp_ajax_delete_page":{"prefix":["wp_ajax_delete_page","wadp"],"body":"wp_ajax_delete_page( ${1:\\$action:string} )","description":"Handles deleting a page via AJAX."},"ƒ: wp_ajax_dim_comment":{"prefix":["wp_ajax_dim_comment","wadc"],"body":"wp_ajax_dim_comment(  )","description":"Handles dimming a comment via AJAX."},"ƒ: wp_ajax_add_link_category":{"prefix":["wp_ajax_add_link_category","waalc"],"body":"wp_ajax_add_link_category( ${1:\\$action:string} )","description":"Handles adding a link category via AJAX."},"ƒ: wp_ajax_add_tag":{"prefix":["wp_ajax_add_tag","waat"],"body":"wp_ajax_add_tag(  )","description":"Handles adding a tag via AJAX."},"ƒ: wp_ajax_get_tagcloud":{"prefix":["wp_ajax_get_tagcloud","wagt"],"body":"wp_ajax_get_tagcloud(  )","description":"Handles getting a tagcloud via AJAX."},"ƒ: wp_ajax_get_comments":{"prefix":["wp_ajax_get_comments","wagc"],"body":"wp_ajax_get_comments( ${1:\\$action:string} )","description":"Handles getting comments via AJAX."},"ƒ: wp_ajax_replyto_comment":{"prefix":["wp_ajax_replyto_comment","warc"],"body":"wp_ajax_replyto_comment( ${1:\\$action:string} )","description":"Handles replying to a comment via AJAX."},"ƒ: wp_ajax_edit_comment":{"prefix":["wp_ajax_edit_comment","waec"],"body":"wp_ajax_edit_comment(  )","description":"Handles editing a comment via AJAX."},"ƒ: wp_ajax_add_menu_item":{"prefix":["wp_ajax_add_menu_item","waami"],"body":"wp_ajax_add_menu_item(  )","description":"Handles adding a menu item via AJAX."},"ƒ: wp_ajax_add_meta":{"prefix":["wp_ajax_add_meta","waam"],"body":"wp_ajax_add_meta(  )","description":"Handles adding meta via AJAX."},"ƒ: wp_ajax_add_user":{"prefix":["wp_ajax_add_user","waau"],"body":"wp_ajax_add_user( ${1:\\$action:string} )","description":"Handles adding a user via AJAX."},"ƒ: wp_ajax_closed_postboxes":{"prefix":["wp_ajax_closed_postboxes","wacp"],"body":"wp_ajax_closed_postboxes(  )","description":"Handles closed post boxes via AJAX."},"ƒ: wp_ajax_hidden_columns":{"prefix":["wp_ajax_hidden_columns","wahc"],"body":"wp_ajax_hidden_columns(  )","description":"Handles hidden columns via AJAX."},"ƒ: wp_ajax_update_welcome_panel":{"prefix":["wp_ajax_update_welcome_panel","wauwp"],"body":"wp_ajax_update_welcome_panel(  )","description":"Handles updating whether to display the welcome panel via AJAX."},"ƒ: wp_ajax_menu_get_metabox":{"prefix":["wp_ajax_menu_get_metabox","wamgm"],"body":"wp_ajax_menu_get_metabox(  )","description":"Handles for retrieving menu meta boxes via AJAX."},"ƒ: wp_ajax_wp_link_ajax":{"prefix":["wp_ajax_wp_link_ajax","wawla"],"body":"wp_ajax_wp_link_ajax(  )","description":"Handles internal linking via AJAX."},"ƒ: wp_ajax_menu_locations_save":{"prefix":["wp_ajax_menu_locations_save","wamls"],"body":"wp_ajax_menu_locations_save(  )","description":"Handles saving menu locations via AJAX."},"ƒ: wp_ajax_meta_box_order":{"prefix":["wp_ajax_meta_box_order","wambo"],"body":"wp_ajax_meta_box_order(  )","description":"Handles saving the meta box order via AJAX."},"ƒ: wp_ajax_menu_quick_search":{"prefix":["wp_ajax_menu_quick_search","wamqs"],"body":"wp_ajax_menu_quick_search(  )","description":"Handles menu quick searching via AJAX."},"ƒ: wp_ajax_get_permalink":{"prefix":["wp_ajax_get_permalink","wagp"],"body":"wp_ajax_get_permalink(  )","description":"Handles retrieving a permalink via AJAX."},"ƒ: wp_ajax_sample_permalink":{"prefix":["wp_ajax_sample_permalink","wasp"],"body":"wp_ajax_sample_permalink(  )","description":"Handles retrieving a sample permalink via AJAX."},"ƒ: wp_ajax_inline_save":{"prefix":["wp_ajax_inline_save","wais"],"body":"wp_ajax_inline_save(  )","description":"Handles Quick Edit saving a post from a list table via AJAX."},"ƒ: wp_ajax_inline_save_tax":{"prefix":["wp_ajax_inline_save_tax","waist"],"body":"wp_ajax_inline_save_tax(  )","description":"Handles Quick Edit saving for a term via AJAX."},"ƒ: wp_ajax_find_posts":{"prefix":["wp_ajax_find_posts","wafp"],"body":"wp_ajax_find_posts(  )","description":"Handles querying posts for the Find Posts modal via AJAX."},"ƒ: wp_ajax_widgets_order":{"prefix":["wp_ajax_widgets_order","wawo"],"body":"wp_ajax_widgets_order(  )","description":"Handles saving the widgets order via AJAX."},"ƒ: wp_ajax_save_widget":{"prefix":["wp_ajax_save_widget","wasw"],"body":"wp_ajax_save_widget(  )","description":"Handles saving a widget via AJAX."},"ƒ: wp_ajax_update_widget":{"prefix":["wp_ajax_update_widget","wauw"],"body":"wp_ajax_update_widget(  )","description":"Handles updating a widget via AJAX."},"ƒ: wp_ajax_delete_inactive_widgets":{"prefix":["wp_ajax_delete_inactive_widgets","wadiw"],"body":"wp_ajax_delete_inactive_widgets(  )","description":"Handles removing inactive widgets via AJAX."},"ƒ: wp_ajax_media_create_image_subsizes":{"prefix":["wp_ajax_media_create_image_subsizes","wamcis"],"body":"wp_ajax_media_create_image_subsizes(  )","description":"Handles creating missing image sub-sizes for just uploaded images via AJAX."},"ƒ: wp_ajax_upload_attachment":{"prefix":["wp_ajax_upload_attachment","waua"],"body":"wp_ajax_upload_attachment(  )","description":"Handles uploading attachments via AJAX."},"ƒ: wp_ajax_image_editor":{"prefix":["wp_ajax_image_editor","waie"],"body":"wp_ajax_image_editor(  )","description":"Handles image editing via AJAX."},"ƒ: wp_ajax_set_post_thumbnail":{"prefix":["wp_ajax_set_post_thumbnail","waspt"],"body":"wp_ajax_set_post_thumbnail(  )","description":"Handles setting the featured image via AJAX."},"ƒ: wp_ajax_get_post_thumbnail_html":{"prefix":["wp_ajax_get_post_thumbnail_html","wagpth"],"body":"wp_ajax_get_post_thumbnail_html(  )","description":"Handles retrieving HTML for the featured image via AJAX."},"ƒ: wp_ajax_set_attachment_thumbnail":{"prefix":["wp_ajax_set_attachment_thumbnail","wasat"],"body":"wp_ajax_set_attachment_thumbnail(  )","description":"Handles setting the featured image for an attachment via AJAX."},"ƒ: wp_ajax_date_format":{"prefix":["wp_ajax_date_format","wadf"],"body":"wp_ajax_date_format(  )","description":"Handles formatting a date via AJAX."},"ƒ: wp_ajax_time_format":{"prefix":["wp_ajax_time_format","watf"],"body":"wp_ajax_time_format(  )","description":"Handles formatting a time via AJAX."},"ƒ: wp_ajax_wp_fullscreen_save_post":{"prefix":["wp_ajax_wp_fullscreen_save_post","wawfsp"],"body":"wp_ajax_wp_fullscreen_save_post(  )","description":"Handles saving posts from the fullscreen editor via AJAX."},"ƒ: wp_ajax_wp_remove_post_lock":{"prefix":["wp_ajax_wp_remove_post_lock","wawrpl"],"body":"wp_ajax_wp_remove_post_lock(  )","description":"Handles removing a post lock via AJAX."},"ƒ: wp_ajax_dismiss_wp_pointer":{"prefix":["wp_ajax_dismiss_wp_pointer","wadwp"],"body":"wp_ajax_dismiss_wp_pointer(  )","description":"Handles dismissing a WordPress pointer via AJAX."},"ƒ: wp_ajax_get_attachment":{"prefix":["wp_ajax_get_attachment","waga"],"body":"wp_ajax_get_attachment(  )","description":"Handles getting an attachment via AJAX."},"ƒ: wp_ajax_query_attachments":{"prefix":["wp_ajax_query_attachments","waqa"],"body":"wp_ajax_query_attachments(  )","description":"Handles querying attachments via AJAX."},"ƒ: wp_ajax_save_attachment":{"prefix":["wp_ajax_save_attachment","wasa"],"body":"wp_ajax_save_attachment(  )","description":"Handles updating attachment attributes via AJAX."},"ƒ: wp_ajax_save_attachment_compat":{"prefix":["wp_ajax_save_attachment_compat","wasac"],"body":"wp_ajax_save_attachment_compat(  )","description":"Handles saving backward compatible attachment attributes via AJAX."},"ƒ: wp_ajax_save_attachment_order":{"prefix":["wp_ajax_save_attachment_order","wasao"],"body":"wp_ajax_save_attachment_order(  )","description":"Handles saving the attachment order via AJAX."},"ƒ: wp_ajax_send_attachment_to_editor":{"prefix":["wp_ajax_send_attachment_to_editor","wasate"],"body":"wp_ajax_send_attachment_to_editor(  )","description":"Handles sending an attachment to the editor via AJAX."},"ƒ: wp_ajax_send_link_to_editor":{"prefix":["wp_ajax_send_link_to_editor","waslte"],"body":"wp_ajax_send_link_to_editor(  )","description":"Handles sending a link to the editor via AJAX."},"ƒ: wp_ajax_heartbeat":{"prefix":["wp_ajax_heartbeat","wah"],"body":"wp_ajax_heartbeat(  )","description":"Handles the Heartbeat API via AJAX."},"ƒ: wp_ajax_get_revision_diffs":{"prefix":["wp_ajax_get_revision_diffs","wagrd"],"body":"wp_ajax_get_revision_diffs(  )","description":"Handles getting revision diffs via AJAX."},"ƒ: wp_ajax_save_user_color_scheme":{"prefix":["wp_ajax_save_user_color_scheme","wasucs"],"body":"wp_ajax_save_user_color_scheme(  )","description":"Handles auto-saving the selected color scheme for a user's own profile via AJAX."},"ƒ: wp_ajax_query_themes":{"prefix":["wp_ajax_query_themes","waqt"],"body":"wp_ajax_query_themes(  )","description":"Handles getting themes from themes_api() via AJAX."},"ƒ: wp_ajax_parse_embed":{"prefix":["wp_ajax_parse_embed","wape"],"body":"wp_ajax_parse_embed(  )","description":"Applies [embed] Ajax handlers to a string."},"ƒ: wp_ajax_parse_media_shortcode":{"prefix":["wp_ajax_parse_media_shortcode","wapms"],"body":"wp_ajax_parse_media_shortcode(  )","description":""},"ƒ: wp_ajax_destroy_sessions":{"prefix":["wp_ajax_destroy_sessions","wads"],"body":"wp_ajax_destroy_sessions(  )","description":"Handles destroying multiple open sessions for a user via AJAX."},"ƒ: wp_ajax_crop_image":{"prefix":["wp_ajax_crop_image","waci"],"body":"wp_ajax_crop_image(  )","description":"Handles cropping an image via AJAX."},"ƒ: wp_ajax_generate_password":{"prefix":["wp_ajax_generate_password","wagp"],"body":"wp_ajax_generate_password(  )","description":"Handles generating a password via AJAX."},"ƒ: wp_ajax_nopriv_generate_password":{"prefix":["wp_ajax_nopriv_generate_password","wangp"],"body":"wp_ajax_nopriv_generate_password(  )","description":"Handles generating a password in the no-privilege context via AJAX."},"ƒ: wp_ajax_save_wporg_username":{"prefix":["wp_ajax_save_wporg_username","waswu"],"body":"wp_ajax_save_wporg_username(  )","description":"Handles saving the user's WordPress.org username via AJAX."},"ƒ: wp_ajax_install_theme":{"prefix":["wp_ajax_install_theme","wait"],"body":"wp_ajax_install_theme(  )","description":"Handles installing a theme via AJAX."},"ƒ: wp_ajax_update_theme":{"prefix":["wp_ajax_update_theme","waut"],"body":"wp_ajax_update_theme(  )","description":"Handles updating a theme via AJAX."},"ƒ: wp_ajax_delete_theme":{"prefix":["wp_ajax_delete_theme","wadt"],"body":"wp_ajax_delete_theme(  )","description":"Handles deleting a theme via AJAX."},"ƒ: wp_ajax_install_plugin":{"prefix":["wp_ajax_install_plugin","waip"],"body":"wp_ajax_install_plugin(  )","description":"Handles installing a plugin via AJAX."},"ƒ: wp_ajax_activate_plugin":{"prefix":["wp_ajax_activate_plugin","waap"],"body":"wp_ajax_activate_plugin(  )","description":"Handles activating a plugin via AJAX."},"ƒ: wp_ajax_update_plugin":{"prefix":["wp_ajax_update_plugin","waup"],"body":"wp_ajax_update_plugin(  )","description":"Handles updating a plugin via AJAX."},"ƒ: wp_ajax_delete_plugin":{"prefix":["wp_ajax_delete_plugin","wadp"],"body":"wp_ajax_delete_plugin(  )","description":"Handles deleting a plugin via AJAX."},"ƒ: wp_ajax_search_plugins":{"prefix":["wp_ajax_search_plugins","wasp"],"body":"wp_ajax_search_plugins(  )","description":"Handles searching plugins via AJAX."},"ƒ: wp_ajax_search_install_plugins":{"prefix":["wp_ajax_search_install_plugins","wasip"],"body":"wp_ajax_search_install_plugins(  )","description":"Handles searching plugins to install via AJAX."},"ƒ: wp_ajax_edit_theme_plugin_file":{"prefix":["wp_ajax_edit_theme_plugin_file","waetpf"],"body":"wp_ajax_edit_theme_plugin_file(  )","description":"Handles editing a theme or plugin file via AJAX."},"ƒ: wp_ajax_wp_privacy_export_personal_data":{"prefix":["wp_ajax_wp_privacy_export_personal_data","wawpepd"],"body":"wp_ajax_wp_privacy_export_personal_data(  )","description":"Handles exporting a user's personal data via AJAX."},"ƒ: wp_ajax_wp_privacy_erase_personal_data":{"prefix":["wp_ajax_wp_privacy_erase_personal_data","wawpepd"],"body":"wp_ajax_wp_privacy_erase_personal_data(  )","description":"Handles erasing personal data via AJAX."},"ƒ: wp_ajax_health_check_dotorg_communication":{"prefix":["wp_ajax_health_check_dotorg_communication","wahcdc"],"body":"wp_ajax_health_check_dotorg_communication(  )","description":"Handles site health checks on server communication via AJAX."},"ƒ: wp_ajax_health_check_background_updates":{"prefix":["wp_ajax_health_check_background_updates","wahcbu"],"body":"wp_ajax_health_check_background_updates(  )","description":"Handles site health checks on background updates via AJAX."},"ƒ: wp_ajax_health_check_loopback_requests":{"prefix":["wp_ajax_health_check_loopback_requests","wahclr"],"body":"wp_ajax_health_check_loopback_requests(  )","description":"Handles site health checks on loopback requests via AJAX."},"ƒ: wp_ajax_health_check_site_status_result":{"prefix":["wp_ajax_health_check_site_status_result","wahcssr"],"body":"wp_ajax_health_check_site_status_result(  )","description":"Handles site health check to update the result status via AJAX."},"ƒ: wp_ajax_health_check_get_sizes":{"prefix":["wp_ajax_health_check_get_sizes","wahcgs"],"body":"wp_ajax_health_check_get_sizes(  )","description":"Handles site health check to get directories and database sizes via AJAX."},"ƒ: wp_ajax_rest_nonce":{"prefix":["wp_ajax_rest_nonce","warn"],"body":"wp_ajax_rest_nonce(  )","description":"Handles renewing the REST API nonce via AJAX."},"ƒ: wp_ajax_toggle_auto_updates":{"prefix":["wp_ajax_toggle_auto_updates","watau"],"body":"wp_ajax_toggle_auto_updates(  )","description":"Handles enabling or disable plugin and theme auto-updates via AJAX."},"ƒ: wp_ajax_send_password_reset":{"prefix":["wp_ajax_send_password_reset","waspr"],"body":"wp_ajax_send_password_reset(  )","description":"Handles sending a password reset link via AJAX."},"ƒ: add_link":{"prefix":["add_link","al"],"body":"add_link(  )","description":"Adds a link using values provided in $_POST."},"ƒ: edit_link":{"prefix":["edit_link","el"],"body":"edit_link( ${1:\\$link_id:int} )","description":"Updates or inserts a link using values provided in $_POST."},"ƒ: get_default_link_to_edit":{"prefix":["get_default_link_to_edit","gdlte"],"body":"get_default_link_to_edit(  )","description":"Retrieves the default link for editing."},"ƒ: wp_delete_link":{"prefix":["wp_delete_link","wdl"],"body":"wp_delete_link( ${1:\\$link_id:int} )","description":"Deletes a specified link from the database."},"ƒ: wp_get_link_cats":{"prefix":["wp_get_link_cats","wglc"],"body":"wp_get_link_cats( ${1:\\$link_id:int} )","description":"Retrieves the link category IDs associated with the link specified."},"ƒ: get_link_to_edit":{"prefix":["get_link_to_edit","glte"],"body":"get_link_to_edit( ${1:\\$link:int|stdClass} )","description":"Retrieves link data based on its ID."},"ƒ: wp_insert_link":{"prefix":["wp_insert_link","wil"],"body":"wp_insert_link( ${1:\\$linkdata:array}, ${2:\\$wp_error:bool} )","description":"Inserts a link into the database, or updates an existing link."},"ƒ: wp_set_link_cats":{"prefix":["wp_set_link_cats","wslc"],"body":"wp_set_link_cats( ${1:\\$link_id:int}, ${2:\\$link_categories:int[]} )","description":"Updates link with the specified link categories."},"ƒ: wp_update_link":{"prefix":["wp_update_link","wul"],"body":"wp_update_link( ${1:\\$linkdata:array} )","description":"Updates a link in the database."},"ƒ: PclZipUtilPathReduction":{"prefix":["PclZipUtilPathReduction"],"body":"PclZipUtilPathReduction( ${1:\\$p_dir:mixed} )","description":""},"ƒ: PclZipUtilPathInclusion":{"prefix":["PclZipUtilPathInclusion"],"body":"PclZipUtilPathInclusion( ${1:\\$p_dir:mixed}, ${2:\\$p_path:mixed} )","description":""},"ƒ: PclZipUtilCopyBlock":{"prefix":["PclZipUtilCopyBlock"],"body":"PclZipUtilCopyBlock( ${1:\\$p_src:mixed}, ${2:\\$p_dest:mixed}, ${3:\\$p_size:mixed}, ${4:\\$p_mode:mixed} )","description":""},"ƒ: PclZipUtilRename":{"prefix":["PclZipUtilRename"],"body":"PclZipUtilRename( ${1:\\$p_src:mixed}, ${2:\\$p_dest:mixed} )","description":""},"ƒ: PclZipUtilOptionText":{"prefix":["PclZipUtilOptionText"],"body":"PclZipUtilOptionText( ${1:\\$p_option:mixed} )","description":""},"ƒ: PclZipUtilTranslateWinPath":{"prefix":["PclZipUtilTranslateWinPath"],"body":"PclZipUtilTranslateWinPath( ${1:\\$p_path:mixed}, ${2:\\$p_remove_disk_letter:mixed} )","description":""},"ƒ: get_cli_args":{"prefix":["get_cli_args","gca"],"body":"get_cli_args( ${1:\\$param:string}, ${2:\\$required:bool} )","description":"Returns value of command line params."},"ƒ: comment_exists":{"prefix":["comment_exists","ce"],"body":"comment_exists( ${1:\\$comment_author:string}, ${2:\\$comment_date:string}, ${3:\\$timezone:string} )","description":"Determines if a comment exists based on author and date."},"ƒ: edit_comment":{"prefix":["edit_comment","ec"],"body":"edit_comment(  )","description":"Updates a comment with values provided in $_POST."},"ƒ: get_comment_to_edit":{"prefix":["get_comment_to_edit","gcte"],"body":"get_comment_to_edit( ${1:\\$id:int} )","description":"Returns a WP_Comment object based on comment ID."},"ƒ: get_pending_comments_num":{"prefix":["get_pending_comments_num","gpcn"],"body":"get_pending_comments_num( ${1:\\$post_id:int|int[]} )","description":"Gets the number of pending comments on a post or posts."},"ƒ: floated_admin_avatar":{"prefix":["floated_admin_avatar","faa"],"body":"floated_admin_avatar( ${1:\\$name:string} )","description":"Adds avatars to relevant places in admin."},"ƒ: enqueue_comment_hotkeys_js":{"prefix":["enqueue_comment_hotkeys_js","echj"],"body":"enqueue_comment_hotkeys_js(  )","description":"Enqueues comment shortcuts jQuery script."},"ƒ: comment_footer_die":{"prefix":["comment_footer_die","cfd"],"body":"comment_footer_die( ${1:\\$msg:string} )","description":"Displays error message at bottom of comments."},"ƒ: wp_credits":{"prefix":["wp_credits","wc"],"body":"wp_credits( ${1:\\$version:string}, ${2:\\$locale:string} )","description":"Retrieves the contributor credits."},"ƒ: wp_credits_section_title":{"prefix":["wp_credits_section_title","wcst"],"body":"wp_credits_section_title( ${1:\\$group_data:array} )","description":"Displays the title for a given group of contributors."},"ƒ: wp_credits_section_list":{"prefix":["wp_credits_section_list","wcsl"],"body":"wp_credits_section_list( ${1:\\$credits:array}, ${2:\\$slug:string} )","description":"Displays a list of contributors for a given group."},"ƒ: wp_dashboard_setup":{"prefix":["wp_dashboard_setup","wds"],"body":"wp_dashboard_setup(  )","description":"Registers dashboard widgets."},"ƒ: wp_add_dashboard_widget":{"prefix":["wp_add_dashboard_widget","wadw"],"body":"wp_add_dashboard_widget( ${1:\\$widget_id:string}, ${2:\\$widget_name:string}, ${3:\\$callback:callable}, ${4:\\$control_callback:callable|null}, ${5:\\$callback_args:array|null}, ${6:\\$context:string}, ${7:\\$priority:string} )","description":"Adds a new dashboard widget."},"ƒ: wp_dashboard":{"prefix":["wp_dashboard","wd"],"body":"wp_dashboard(  )","description":"Displays the dashboard."},"ƒ: wp_dashboard_right_now":{"prefix":["wp_dashboard_right_now","wdrn"],"body":"wp_dashboard_right_now(  )","description":"Dashboard widget that displays some basic stats about the site."},"ƒ: wp_network_dashboard_right_now":{"prefix":["wp_network_dashboard_right_now","wndrn"],"body":"wp_network_dashboard_right_now(  )","description":""},"ƒ: wp_dashboard_quick_press":{"prefix":["wp_dashboard_quick_press","wdqp"],"body":"wp_dashboard_quick_press( ${1:\\$error_msg:string|false} )","description":"Displays the Quick Draft widget."},"ƒ: wp_dashboard_recent_drafts":{"prefix":["wp_dashboard_recent_drafts","wdrd"],"body":"wp_dashboard_recent_drafts( ${1:\\$drafts:WP_Post[]|false} )","description":"Show recent drafts of the user on the dashboard."},"ƒ: wp_dashboard_site_activity":{"prefix":["wp_dashboard_site_activity","wdsa"],"body":"wp_dashboard_site_activity(  )","description":"Outputs the Activity widget."},"ƒ: wp_dashboard_recent_posts":{"prefix":["wp_dashboard_recent_posts","wdrp"],"body":"wp_dashboard_recent_posts( ${1:\\$args:array} )","description":"Generates Publishing Soon and Recently Published sections."},"ƒ: wp_dashboard_recent_comments":{"prefix":["wp_dashboard_recent_comments","wdrc"],"body":"wp_dashboard_recent_comments( ${1:\\$total_items:int} )","description":"Show Comments section."},"ƒ: wp_dashboard_rss_output":{"prefix":["wp_dashboard_rss_output","wdro"],"body":"wp_dashboard_rss_output( ${1:\\$widget_id:string} )","description":"Display generic dashboard RSS widget feed."},"ƒ: wp_dashboard_cached_rss_widget":{"prefix":["wp_dashboard_cached_rss_widget","wdcrw"],"body":"wp_dashboard_cached_rss_widget( ${1:\\$widget_id:string}, ${2:\\$callback:callable}, ${3:\\$check_urls:array}, ${4:\\$args:mixed} )","description":"Checks to see if all of the feed url in $check_urls are cached."},"ƒ: wp_dashboard_trigger_widget_control":{"prefix":["wp_dashboard_trigger_widget_control","wdtwc"],"body":"wp_dashboard_trigger_widget_control( ${1:\\$widget_control_id:int|false} )","description":"Calls widget control callback."},"ƒ: wp_dashboard_rss_control":{"prefix":["wp_dashboard_rss_control","wdrc"],"body":"wp_dashboard_rss_control( ${1:\\$widget_id:string}, ${2:\\$form_inputs:array} )","description":"Sets up the RSS dashboard widget control and $args to be used as input to wp_widget_rss_form()."},"ƒ: wp_dashboard_events_news":{"prefix":["wp_dashboard_events_news","wden"],"body":"wp_dashboard_events_news(  )","description":"Renders the Events and News dashboard widget."},"ƒ: wp_print_community_events_markup":{"prefix":["wp_print_community_events_markup","wpcem"],"body":"wp_print_community_events_markup(  )","description":"Prints the markup for the Community Events section of the Events and News Dashboard widget."},"ƒ: wp_print_community_events_templates":{"prefix":["wp_print_community_events_templates","wpcet"],"body":"wp_print_community_events_templates(  )","description":"Renders the events templates for the Event and News widget."},"ƒ: wp_dashboard_primary":{"prefix":["wp_dashboard_primary","wdp"],"body":"wp_dashboard_primary(  )","description":"'WordPress Events and News' dashboard widget."},"ƒ: wp_dashboard_primary_output":{"prefix":["wp_dashboard_primary_output","wdpo"],"body":"wp_dashboard_primary_output( ${1:\\$widget_id:string}, ${2:\\$feeds:array} )","description":"Displays the WordPress events and news feeds."},"ƒ: wp_dashboard_quota":{"prefix":["wp_dashboard_quota","wdq"],"body":"wp_dashboard_quota(  )","description":"Displays file upload quota on dashboard."},"ƒ: wp_dashboard_browser_nag":{"prefix":["wp_dashboard_browser_nag","wdbn"],"body":"wp_dashboard_browser_nag(  )","description":"Displays the browser update nag."},"ƒ: dashboard_browser_nag_class":{"prefix":["dashboard_browser_nag_class","dbnc"],"body":"dashboard_browser_nag_class( ${1:\\$classes:string[]} )","description":"Adds an additional class to the browser nag if the current version is insecure."},"ƒ: wp_check_browser_version":{"prefix":["wp_check_browser_version","wcbv"],"body":"wp_check_browser_version(  )","description":"Checks if the user needs a browser update."},"ƒ: wp_dashboard_php_nag":{"prefix":["wp_dashboard_php_nag","wdpn"],"body":"wp_dashboard_php_nag(  )","description":"Displays the PHP update nag."},"ƒ: dashboard_php_nag_class":{"prefix":["dashboard_php_nag_class","dpnc"],"body":"dashboard_php_nag_class( ${1:\\$classes:string[]} )","description":"Adds an additional class to the PHP nag if the current version is insecure."},"ƒ: wp_dashboard_site_health":{"prefix":["wp_dashboard_site_health","wdsh"],"body":"wp_dashboard_site_health(  )","description":"Displays the Site Health Status widget."},"ƒ: wp_dashboard_empty":{"prefix":["wp_dashboard_empty","wde"],"body":"wp_dashboard_empty(  )","description":"Outputs empty dashboard widget to be populated by JS later."},"ƒ: wp_welcome_panel":{"prefix":["wp_welcome_panel","wwp"],"body":"wp_welcome_panel(  )","description":"Displays a welcome panel to introduce users to WordPress."},"ƒ: tinymce_include":{"prefix":["tinymce_include","ti"],"body":"tinymce_include(  )","description":""},"ƒ: documentation_link":{"prefix":["documentation_link","dl"],"body":"documentation_link(  )","description":"Unused Admin function."},"ƒ: wp_shrink_dimensions":{"prefix":["wp_shrink_dimensions","wsd"],"body":"wp_shrink_dimensions( ${1:\\$width:int}, ${2:\\$height:int}, ${3:\\$wmax:int}, ${4:\\$hmax:int} )","description":"Calculates the new dimensions for a downsampled image."},"ƒ: get_udims":{"prefix":["get_udims","gu"],"body":"get_udims( ${1:\\$width:int}, ${2:\\$height:int} )","description":"Calculated the new dimensions for a downsampled image."},"ƒ: dropdown_categories":{"prefix":["dropdown_categories","dc"],"body":"dropdown_categories( ${1:\\$default_category:int}, ${2:\\$category_parent:int}, ${3:\\$popular_ids:array} )","description":"Legacy function used to generate the categories checklist control."},"ƒ: dropdown_link_categories":{"prefix":["dropdown_link_categories","dlc"],"body":"dropdown_link_categories( ${1:\\$default_link_category:int} )","description":"Legacy function used to generate a link categories checklist control."},"ƒ: get_real_file_to_edit":{"prefix":["get_real_file_to_edit","grfte"],"body":"get_real_file_to_edit( ${1:\\$file:string} )","description":"Get the real filesystem path to a file to edit within the admin."},"ƒ: wp_dropdown_cats":{"prefix":["wp_dropdown_cats","wdc"],"body":"wp_dropdown_cats( ${1:\\$current_cat:int}, ${2:\\$current_parent:int}, ${3:\\$category_parent:int}, ${4:\\$level:int}, ${5:\\$categories:array} )","description":"Legacy function used for generating a categories drop-down control."},"ƒ: add_option_update_handler":{"prefix":["add_option_update_handler","aouh"],"body":"add_option_update_handler( ${1:\\$option_group:string}, ${2:\\$option_name:string}, ${3:\\$sanitize_callback:callable} )","description":"Register a setting and its sanitization callback"},"ƒ: remove_option_update_handler":{"prefix":["remove_option_update_handler","rouh"],"body":"remove_option_update_handler( ${1:\\$option_group:string}, ${2:\\$option_name:string}, ${3:\\$sanitize_callback:callable} )","description":"Unregister a setting"},"ƒ: codepress_get_lang":{"prefix":["codepress_get_lang","cgl"],"body":"codepress_get_lang( ${1:\\$filename:string} )","description":"Determines the language to use for CodePress syntax highlighting."},"ƒ: codepress_footer_js":{"prefix":["codepress_footer_js","cfj"],"body":"codepress_footer_js(  )","description":"Adds JavaScript required to make CodePress work on the theme/plugin file editors."},"ƒ: use_codepress":{"prefix":["use_codepress","uc"],"body":"use_codepress(  )","description":"Determine whether to use CodePress."},"ƒ: get_author_user_ids":{"prefix":["get_author_user_ids","gaui"],"body":"get_author_user_ids(  )","description":"Get all user IDs."},"ƒ: get_editable_authors":{"prefix":["get_editable_authors","gea"],"body":"get_editable_authors( ${1:\\$user_id:int} )","description":"Gets author users who can edit posts."},"ƒ: get_editable_user_ids":{"prefix":["get_editable_user_ids","geui"],"body":"get_editable_user_ids( ${1:\\$user_id:int}, ${2:\\$exclude_zeros:bool}, ${3:\\$post_type:mixed} )","description":"Gets the IDs of any users who can edit posts."},"ƒ: get_nonauthor_user_ids":{"prefix":["get_nonauthor_user_ids","gnui"],"body":"get_nonauthor_user_ids(  )","description":"Gets all users who are not authors."},"ƒ: get_others_unpublished_posts":{"prefix":["get_others_unpublished_posts","goup"],"body":"get_others_unpublished_posts( ${1:\\$user_id:int}, ${2:\\$type:string} )","description":"Retrieves editable posts from other users."},"ƒ: get_others_drafts":{"prefix":["get_others_drafts","god"],"body":"get_others_drafts( ${1:\\$user_id:int} )","description":"Retrieve drafts from other users."},"ƒ: get_others_pending":{"prefix":["get_others_pending","gop"],"body":"get_others_pending( ${1:\\$user_id:int} )","description":"Retrieve pending review posts from other users."},"ƒ: wp_dashboard_quick_press_output":{"prefix":["wp_dashboard_quick_press_output","wdqpo"],"body":"wp_dashboard_quick_press_output(  )","description":"Output the QuickPress dashboard widget."},"ƒ: wp_tiny_mce":{"prefix":["wp_tiny_mce","wtm"],"body":"wp_tiny_mce( ${1:\\$teeny:mixed}, ${2:\\$settings:mixed} )","description":"Outputs the TinyMCE editor."},"ƒ: wp_preload_dialogs":{"prefix":["wp_preload_dialogs","wpd"],"body":"wp_preload_dialogs(  )","description":"Preloads TinyMCE dialogs."},"ƒ: wp_print_editor_js":{"prefix":["wp_print_editor_js","wpej"],"body":"wp_print_editor_js(  )","description":"Prints TinyMCE editor JS."},"ƒ: wp_quicktags":{"prefix":["wp_quicktags","wq"],"body":"wp_quicktags(  )","description":"Handles quicktags."},"ƒ: screen_layout":{"prefix":["screen_layout","sl"],"body":"screen_layout( ${1:\\$screen:mixed} )","description":"Returns the screen layout options."},"ƒ: screen_options":{"prefix":["screen_options","so"],"body":"screen_options( ${1:\\$screen:mixed} )","description":"Returns the screen's per-page options."},"ƒ: screen_meta":{"prefix":["screen_meta","sm"],"body":"screen_meta( ${1:\\$screen:mixed} )","description":"Renders the screen's help."},"ƒ: favorite_actions":{"prefix":["favorite_actions","fa"],"body":"favorite_actions(  )","description":"Favorite actions were deprecated in version 3.2. Use the admin bar instead."},"ƒ: media_upload_image":{"prefix":["media_upload_image","mui"],"body":"media_upload_image(  )","description":"Handles uploading an image."},"ƒ: media_upload_audio":{"prefix":["media_upload_audio","mua"],"body":"media_upload_audio(  )","description":"Handles uploading an audio file."},"ƒ: media_upload_video":{"prefix":["media_upload_video","muv"],"body":"media_upload_video(  )","description":"Handles uploading a video file."},"ƒ: media_upload_file":{"prefix":["media_upload_file","muf"],"body":"media_upload_file(  )","description":"Handles uploading a generic file."},"ƒ: type_url_form_image":{"prefix":["type_url_form_image","tufi"],"body":"type_url_form_image(  )","description":"Handles retrieving the insert-from-URL form for an image."},"ƒ: type_url_form_audio":{"prefix":["type_url_form_audio","tufa"],"body":"type_url_form_audio(  )","description":"Handles retrieving the insert-from-URL form for an audio file."},"ƒ: type_url_form_video":{"prefix":["type_url_form_video","tufv"],"body":"type_url_form_video(  )","description":"Handles retrieving the insert-from-URL form for a video file."},"ƒ: type_url_form_file":{"prefix":["type_url_form_file","tuff"],"body":"type_url_form_file(  )","description":"Handles retrieving the insert-from-URL form for a generic file."},"ƒ: add_contextual_help":{"prefix":["add_contextual_help","ach"],"body":"add_contextual_help( ${1:\\$screen:string}, ${2:\\$help:string} )","description":"Add contextual help text for a page."},"ƒ: get_allowed_themes":{"prefix":["get_allowed_themes","gat"],"body":"get_allowed_themes(  )","description":"Get the allowed themes for the current site."},"ƒ: get_broken_themes":{"prefix":["get_broken_themes","gbt"],"body":"get_broken_themes(  )","description":"Retrieves a list of broken themes."},"ƒ: current_theme_info":{"prefix":["current_theme_info","cti"],"body":"current_theme_info(  )","description":"Retrieves information on the current active theme."},"ƒ: get_post_to_edit":{"prefix":["get_post_to_edit","gpte"],"body":"get_post_to_edit( ${1:\\$id:int} )","description":"Gets an existing post and format it for editing."},"ƒ: get_default_page_to_edit":{"prefix":["get_default_page_to_edit","gdpte"],"body":"get_default_page_to_edit(  )","description":"Gets the default page information to use."},"ƒ: wp_create_thumbnail":{"prefix":["wp_create_thumbnail","wct"],"body":"wp_create_thumbnail( ${1:\\$file:mixed}, ${2:\\$max_side:int}, ${3:\\$deprecated:mixed} )","description":"This was once used to create a thumbnail from an Image given a maximum side size."},"ƒ: wp_nav_menu_locations_meta_box":{"prefix":["wp_nav_menu_locations_meta_box","wnmlmb"],"body":"wp_nav_menu_locations_meta_box(  )","description":"This was once used to display a meta box for the nav menu theme locations."},"ƒ: wp_update_core":{"prefix":["wp_update_core","wuc"],"body":"wp_update_core( ${1:\\$current:mixed}, ${2:\\$feedback:mixed} )","description":"This was once used to kick-off the Core Updater."},"ƒ: wp_update_plugin":{"prefix":["wp_update_plugin","wup"],"body":"wp_update_plugin( ${1:\\$plugin:mixed}, ${2:\\$feedback:mixed} )","description":"This was once used to kick-off the Plugin Updater."},"ƒ: wp_update_theme":{"prefix":["wp_update_theme","wut"],"body":"wp_update_theme( ${1:\\$theme:mixed}, ${2:\\$feedback:mixed} )","description":"This was once used to kick-off the Theme Updater."},"ƒ: the_attachment_links":{"prefix":["the_attachment_links","tal"],"body":"the_attachment_links( ${1:\\$id:int|bool} )","description":"This was once used to display attachment links. Now it is deprecated and stubbed."},"ƒ: screen_icon":{"prefix":["screen_icon","si"],"body":"screen_icon(  )","description":"Displays a screen icon."},"ƒ: get_screen_icon":{"prefix":["get_screen_icon","gsi"],"body":"get_screen_icon(  )","description":"Retrieves the screen icon (no longer used in 3.8+)."},"ƒ: wp_dashboard_incoming_links_output":{"prefix":["wp_dashboard_incoming_links_output","wdilo"],"body":"wp_dashboard_incoming_links_output(  )","description":"Deprecated dashboard widget controls."},"ƒ: wp_dashboard_secondary_output":{"prefix":["wp_dashboard_secondary_output","wdso"],"body":"wp_dashboard_secondary_output(  )","description":"Deprecated dashboard secondary output."},"ƒ: wp_dashboard_incoming_links":{"prefix":["wp_dashboard_incoming_links","wdil"],"body":"wp_dashboard_incoming_links(  )","description":"Deprecated dashboard widget controls."},"ƒ: wp_dashboard_incoming_links_control":{"prefix":["wp_dashboard_incoming_links_control","wdilc"],"body":"wp_dashboard_incoming_links_control(  )","description":"Deprecated dashboard incoming links control."},"ƒ: wp_dashboard_plugins":{"prefix":["wp_dashboard_plugins","wdp"],"body":"wp_dashboard_plugins(  )","description":"Deprecated dashboard plugins control."},"ƒ: wp_dashboard_primary_control":{"prefix":["wp_dashboard_primary_control","wdpc"],"body":"wp_dashboard_primary_control(  )","description":"Deprecated dashboard primary control."},"ƒ: wp_dashboard_recent_comments_control":{"prefix":["wp_dashboard_recent_comments_control","wdrcc"],"body":"wp_dashboard_recent_comments_control(  )","description":"Deprecated dashboard recent comments control."},"ƒ: wp_dashboard_secondary":{"prefix":["wp_dashboard_secondary","wds"],"body":"wp_dashboard_secondary(  )","description":"Deprecated dashboard secondary section."},"ƒ: wp_dashboard_secondary_control":{"prefix":["wp_dashboard_secondary_control","wdsc"],"body":"wp_dashboard_secondary_control(  )","description":"Deprecated dashboard secondary control."},"ƒ: wp_dashboard_plugins_output":{"prefix":["wp_dashboard_plugins_output","wdpo"],"body":"wp_dashboard_plugins_output( ${1:\\$rss:string}, ${2:\\$args:array} )","description":"Display plugins text for the WordPress news widget."},"ƒ: add_object_page":{"prefix":["add_object_page","aop"],"body":"add_object_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$icon_url:string} )","description":"Add a top-level menu page in the 'objects' section."},"ƒ: add_utility_page":{"prefix":["add_utility_page","aup"],"body":"add_utility_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$icon_url:string} )","description":"Add a top-level menu page in the 'utility' section."},"ƒ: post_form_autocomplete_off":{"prefix":["post_form_autocomplete_off","pfao"],"body":"post_form_autocomplete_off(  )","description":"Disables autocomplete on the 'post' form (Add/Edit Post screens) for WebKit browsers, as they disregard the autocomplete setting on the editor textarea. That can break the editor when the user navigates to it with the browser's Back button. See #28037"},"ƒ: options_permalink_add_js":{"prefix":["options_permalink_add_js","opaj"],"body":"options_permalink_add_js(  )","description":"Display JavaScript on the page."},"ƒ: image_attachment_fields_to_save":{"prefix":["image_attachment_fields_to_save","iafts"],"body":"image_attachment_fields_to_save( ${1:\\$post:array}, ${2:\\$attachment:array} )","description":"Was used to filter input from media_upload_form_handler() and to assign a default post_title from the file name if none supplied."},"ƒ: export_wp":{"prefix":["export_wp","ew"],"body":"export_wp( ${1:\\$args:array} )","description":"Generates the WXR export file for download."},"ƒ: get_file_description":{"prefix":["get_file_description","gfd"],"body":"get_file_description( ${1:\\$file:string} )","description":"Gets the description for standard WordPress theme files."},"ƒ: get_home_path":{"prefix":["get_home_path","ghp"],"body":"get_home_path(  )","description":"Gets the absolute filesystem path to the root of the WordPress installation."},"ƒ: list_files":{"prefix":["list_files","lf"],"body":"list_files( ${1:\\$folder:string}, ${2:\\$levels:int}, ${3:\\$exclusions:string[]}, ${4:\\$include_hidden:bool} )","description":"Returns a listing of all files in the specified folder and all subdirectories up to 100 levels deep."},"ƒ: wp_get_plugin_file_editable_extensions":{"prefix":["wp_get_plugin_file_editable_extensions","wgpfee"],"body":"wp_get_plugin_file_editable_extensions( ${1:\\$plugin:string} )","description":"Gets the list of file extensions that are editable in plugins."},"ƒ: wp_get_theme_file_editable_extensions":{"prefix":["wp_get_theme_file_editable_extensions","wgtfee"],"body":"wp_get_theme_file_editable_extensions( ${1:\\$theme:WP_Theme} )","description":"Gets the list of file extensions that are editable for a given theme."},"ƒ: wp_print_file_editor_templates":{"prefix":["wp_print_file_editor_templates","wpfet"],"body":"wp_print_file_editor_templates(  )","description":"Prints file editor templates (for plugins and themes)."},"ƒ: wp_edit_theme_plugin_file":{"prefix":["wp_edit_theme_plugin_file","wetpf"],"body":"wp_edit_theme_plugin_file( ${1:\\$args:string[]} )","description":"Attempts to edit a file for a theme or plugin."},"ƒ: wp_tempnam":{"prefix":["wp_tempnam","wt"],"body":"wp_tempnam( ${1:\\$filename:string}, ${2:\\$dir:string} )","description":"Returns a filename of a temporary unique file."},"ƒ: validate_file_to_edit":{"prefix":["validate_file_to_edit","vfte"],"body":"validate_file_to_edit( ${1:\\$file:string}, ${2:\\$allowed_files:string[]} )","description":"Makes sure that the file that was requested to be edited is allowed to be edited."},"ƒ: wp_handle_upload":{"prefix":["wp_handle_upload","whu"],"body":"wp_handle_upload( ${1:\\$file:array}, ${2:\\$overrides:array|false}, ${3:\\$time:string|null|null} )","description":"Wrapper for _wp_handle_upload()."},"ƒ: wp_handle_sideload":{"prefix":["wp_handle_sideload","whs"],"body":"wp_handle_sideload( ${1:\\$file:array}, ${2:\\$overrides:array|false}, ${3:\\$time:string|null|null} )","description":"Wrapper for _wp_handle_upload()."},"ƒ: download_url":{"prefix":["download_url","du"],"body":"download_url( ${1:\\$url:string}, ${2:\\$timeout:int}, ${3:\\$signature_verification:bool} )","description":"Downloads a URL to a local temporary file using the WordPress HTTP API."},"ƒ: verify_file_md5":{"prefix":["verify_file_md5","vfm"],"body":"verify_file_md5( ${1:\\$filename:string}, ${2:\\$expected_md5:string} )","description":"Calculates and compares the MD5 of a file to its expected value."},"ƒ: verify_file_signature":{"prefix":["verify_file_signature","vfs"],"body":"verify_file_signature( ${1:\\$filename:string}, ${2:\\$signatures:string|array}, ${3:\\$filename_for_errors:string|false} )","description":"Verifies the contents of a file against its ED25519 signature."},"ƒ: wp_trusted_keys":{"prefix":["wp_trusted_keys","wtk"],"body":"wp_trusted_keys(  )","description":"Retrieves the list of signing keys trusted by WordPress."},"ƒ: wp_zip_file_is_valid":{"prefix":["wp_zip_file_is_valid","wzfiv"],"body":"wp_zip_file_is_valid( ${1:\\$file:string} )","description":"Determines whether the given file is a valid ZIP file."},"ƒ: unzip_file":{"prefix":["unzip_file","uf"],"body":"unzip_file( ${1:\\$file:string}, ${2:\\$to:string} )","description":"Unzips a specified ZIP file to a location on the filesystem via the WordPress Filesystem Abstraction."},"ƒ: copy_dir":{"prefix":["copy_dir","cd"],"body":"copy_dir( ${1:\\$from:string}, ${2:\\$to:string}, ${3:\\$skip_list:string[]} )","description":"Copies a directory from one location to another via the WordPress Filesystem Abstraction."},"ƒ: move_dir":{"prefix":["move_dir","md"],"body":"move_dir( ${1:\\$from:string}, ${2:\\$to:string}, ${3:\\$overwrite:bool} )","description":"Moves a directory from one location to another."},"ƒ: WP_Filesystem":{"prefix":["WP_Filesystem","WF"],"body":"WP_Filesystem( ${1:\\$args:array|false}, ${2:\\$context:string|false}, ${3:\\$allow_relaxed_file_ownership:bool} )","description":"Initializes and connects the WordPress Filesystem Abstraction classes."},"ƒ: get_filesystem_method":{"prefix":["get_filesystem_method","gfm"],"body":"get_filesystem_method( ${1:\\$args:array}, ${2:\\$context:string}, ${3:\\$allow_relaxed_file_ownership:bool} )","description":"Determines which method to use for reading, writing, modifying, or deleting files on the filesystem."},"ƒ: request_filesystem_credentials":{"prefix":["request_filesystem_credentials","rfc"],"body":"request_filesystem_credentials( ${1:\\$form_post:string}, ${2:\\$type:string}, ${3:\\$error:bool|WP_Error}, ${4:\\$context:string}, ${5:\\$extra_fields:array|null}, ${6:\\$allow_relaxed_file_ownership:bool} )","description":"Displays a form to the user to request for their FTP/SSH details in order to connect to the filesystem."},"ƒ: wp_print_request_filesystem_credentials_modal":{"prefix":["wp_print_request_filesystem_credentials_modal","wprfcm"],"body":"wp_print_request_filesystem_credentials_modal(  )","description":"Prints the filesystem credentials modal when needed."},"ƒ: wp_opcache_invalidate":{"prefix":["wp_opcache_invalidate","woi"],"body":"wp_opcache_invalidate( ${1:\\$filepath:string}, ${2:\\$force:bool} )","description":"Attempts to clear the opcode cache for an individual PHP file."},"ƒ: wp_opcache_invalidate_directory":{"prefix":["wp_opcache_invalidate_directory","woid"],"body":"wp_opcache_invalidate_directory( ${1:\\$dir:string} )","description":"Attempts to clear the opcode cache for a directory of files."},"ƒ: wp_image_editor":{"prefix":["wp_image_editor","wie"],"body":"wp_image_editor( ${1:\\$post_id:int}, ${2:\\$msg:false|object} )","description":"Loads the WP image-editing interface."},"ƒ: wp_stream_image":{"prefix":["wp_stream_image","wsi"],"body":"wp_stream_image( ${1:\\$image:WP_Image_Editor}, ${2:\\$mime_type:string}, ${3:\\$attachment_id:int} )","description":"Streams image in WP_Image_Editor to browser."},"ƒ: wp_save_image_file":{"prefix":["wp_save_image_file","wsif"],"body":"wp_save_image_file( ${1:\\$filename:string}, ${2:\\$image:WP_Image_Editor}, ${3:\\$mime_type:string}, ${4:\\$post_id:int} )","description":"Saves image to file."},"ƒ: image_edit_apply_changes":{"prefix":["image_edit_apply_changes","ieac"],"body":"image_edit_apply_changes( ${1:\\$image:WP_Image_Editor}, ${2:\\$changes:array} )","description":"Performs group of changes on Editor specified."},"ƒ: stream_preview_image":{"prefix":["stream_preview_image","spi"],"body":"stream_preview_image( ${1:\\$post_id:int} )","description":"Streams image in post to browser, along with enqueued changes in `$_REQUEST['history']`."},"ƒ: wp_restore_image":{"prefix":["wp_restore_image","wri"],"body":"wp_restore_image( ${1:\\$post_id:int} )","description":"Restores the metadata for a given attachment."},"ƒ: wp_save_image":{"prefix":["wp_save_image","wsi"],"body":"wp_save_image( ${1:\\$post_id:int} )","description":"Saves image to post, along with enqueued changes in `$_REQUEST['history']`."},"ƒ: wp_crop_image":{"prefix":["wp_crop_image","wci"],"body":"wp_crop_image( ${1:\\$src:string|int}, ${2:\\$src_x:int}, ${3:\\$src_y:int}, ${4:\\$src_w:int}, ${5:\\$src_h:int}, ${6:\\$dst_w:int}, ${7:\\$dst_h:int}, ${8:\\$src_abs:bool|false}, ${9:\\$dst_file:string|false} )","description":"Crops an image to a given size."},"ƒ: wp_get_missing_image_subsizes":{"prefix":["wp_get_missing_image_subsizes","wgmis"],"body":"wp_get_missing_image_subsizes( ${1:\\$attachment_id:int} )","description":"Compare the existing image sub-sizes (as saved in the attachment meta) to the currently registered image sub-sizes, and return the difference."},"ƒ: wp_update_image_subsizes":{"prefix":["wp_update_image_subsizes","wuis"],"body":"wp_update_image_subsizes( ${1:\\$attachment_id:int} )","description":"If any of the currently registered image sub-sizes are missing, create them and update the image meta data."},"ƒ: wp_create_image_subsizes":{"prefix":["wp_create_image_subsizes","wcis"],"body":"wp_create_image_subsizes( ${1:\\$file:string}, ${2:\\$attachment_id:int} )","description":"Creates image sub-sizes, adds the new data to the image meta `sizes` array, and updates the image metadata."},"ƒ: wp_copy_parent_attachment_properties":{"prefix":["wp_copy_parent_attachment_properties","wcpap"],"body":"wp_copy_parent_attachment_properties( ${1:\\$cropped:string}, ${2:\\$parent_attachment_id:int}, ${3:\\$context:string} )","description":"Copy parent attachment properties to newly cropped image."},"ƒ: wp_generate_attachment_metadata":{"prefix":["wp_generate_attachment_metadata","wgam"],"body":"wp_generate_attachment_metadata( ${1:\\$attachment_id:int}, ${2:\\$file:string} )","description":"Generates attachment meta data and create image sub-sizes for images."},"ƒ: wp_exif_frac2dec":{"prefix":["wp_exif_frac2dec","wef"],"body":"wp_exif_frac2dec( ${1:\\$str:string} )","description":"Converts a fraction string to a decimal."},"ƒ: wp_exif_date2ts":{"prefix":["wp_exif_date2ts","wed"],"body":"wp_exif_date2ts( ${1:\\$str:string} )","description":"Converts the exif date format to a unix timestamp."},"ƒ: wp_read_image_metadata":{"prefix":["wp_read_image_metadata","wrim"],"body":"wp_read_image_metadata( ${1:\\$file:string} )","description":"Gets extended image metadata, exif or iptc as available."},"ƒ: file_is_valid_image":{"prefix":["file_is_valid_image","fivi"],"body":"file_is_valid_image( ${1:\\$path:string} )","description":"Validates that file is an image."},"ƒ: file_is_displayable_image":{"prefix":["file_is_displayable_image","fidi"],"body":"file_is_displayable_image( ${1:\\$path:string} )","description":"Validates that file is suitable for displaying within a web page."},"ƒ: load_image_to_edit":{"prefix":["load_image_to_edit","lite"],"body":"load_image_to_edit( ${1:\\$attachment_id:int}, ${2:\\$mime_type:string}, ${3:\\$size:string|int[]} )","description":"Loads an image resource for editing."},"ƒ: get_importers":{"prefix":["get_importers","gi"],"body":"get_importers(  )","description":"Retrieves the list of importers."},"ƒ: register_importer":{"prefix":["register_importer","ri"],"body":"register_importer( ${1:\\$id:string}, ${2:\\$name:string}, ${3:\\$description:string}, ${4:\\$callback:callable} )","description":"Registers importer for WordPress."},"ƒ: wp_import_cleanup":{"prefix":["wp_import_cleanup","wic"],"body":"wp_import_cleanup( ${1:\\$id:string} )","description":"Cleanup importer."},"ƒ: wp_import_handle_upload":{"prefix":["wp_import_handle_upload","wihu"],"body":"wp_import_handle_upload(  )","description":"Handles importer uploading and adds attachment."},"ƒ: wp_get_popular_importers":{"prefix":["wp_get_popular_importers","wgpi"],"body":"wp_get_popular_importers(  )","description":"Returns a list from WordPress.org of popular importer plugins."},"ƒ: register_column_headers":{"prefix":["register_column_headers","rch"],"body":"register_column_headers( ${1:\\$screen:string}, ${2:\\$columns:string[]} )","description":"Register column headers for a particular screen."},"ƒ: print_column_headers":{"prefix":["print_column_headers","pch"],"body":"print_column_headers( ${1:\\$screen:string|WP_Screen}, ${2:\\$with_id:bool} )","description":"Prints column headers for a particular screen."},"ƒ: media_upload_tabs":{"prefix":["media_upload_tabs","mut"],"body":"media_upload_tabs(  )","description":"Defines the default media upload tabs."},"ƒ: update_gallery_tab":{"prefix":["update_gallery_tab","ugt"],"body":"update_gallery_tab( ${1:\\$tabs:array} )","description":"Adds the gallery tab back to the tabs array if post has image attachments."},"ƒ: the_media_upload_tabs":{"prefix":["the_media_upload_tabs","tmut"],"body":"the_media_upload_tabs(  )","description":"Outputs the legacy media upload tabs UI."},"ƒ: get_image_send_to_editor":{"prefix":["get_image_send_to_editor","giste"],"body":"get_image_send_to_editor( ${1:\\$id:int}, ${2:\\$caption:string}, ${3:\\$title:string}, ${4:\\$align:string}, ${5:\\$url:string}, ${6:\\$rel:bool|string}, ${7:\\$size:string|int[]}, ${8:\\$alt:string} )","description":"Retrieves the image HTML to send to the editor."},"ƒ: image_add_caption":{"prefix":["image_add_caption","iac"],"body":"image_add_caption( ${1:\\$html:string}, ${2:\\$id:int}, ${3:\\$caption:string}, ${4:\\$title:string}, ${5:\\$align:string}, ${6:\\$url:string}, ${7:\\$size:string}, ${8:\\$alt:string} )","description":"Adds image shortcode with caption to editor."},"ƒ: media_send_to_editor":{"prefix":["media_send_to_editor","mste"],"body":"media_send_to_editor( ${1:\\$html:string} )","description":"Adds image HTML to editor."},"ƒ: media_handle_upload":{"prefix":["media_handle_upload","mhu"],"body":"media_handle_upload( ${1:\\$file_id:string}, ${2:\\$post_id:int}, ${3:\\$post_data:array}, ${4:\\$overrides:array} )","description":"Saves a file submitted from a POST request and create an attachment post for it."},"ƒ: media_handle_sideload":{"prefix":["media_handle_sideload","mhs"],"body":"media_handle_sideload( ${1:\\$file_array:string[]}, ${2:\\$post_id:int}, ${3:\\$desc:string|null}, ${4:\\$post_data:array} )","description":"Handles a side-loaded file in the same way as an uploaded file is handled by media_handle_upload()."},"ƒ: wp_iframe":{"prefix":["wp_iframe","wi"],"body":"wp_iframe( ${1:\\$content_func:callable}, ${2:\\$args:mixed} )","description":"Outputs the iframe to display the media upload page."},"ƒ: media_buttons":{"prefix":["media_buttons","mb"],"body":"media_buttons( ${1:\\$editor_id:string} )","description":"Adds the media button to the editor."},"ƒ: get_upload_iframe_src":{"prefix":["get_upload_iframe_src","guis"],"body":"get_upload_iframe_src( ${1:\\$type:string|null}, ${2:\\$post_id:int|null}, ${3:\\$tab:string|null} )","description":"Retrieves the upload iframe source URL."},"ƒ: media_upload_form_handler":{"prefix":["media_upload_form_handler","mufh"],"body":"media_upload_form_handler(  )","description":"Handles form submissions for the legacy media uploader."},"ƒ: wp_media_upload_handler":{"prefix":["wp_media_upload_handler","wmuh"],"body":"wp_media_upload_handler(  )","description":"Handles the process of uploading media."},"ƒ: media_sideload_image":{"prefix":["media_sideload_image","msi"],"body":"media_sideload_image( ${1:\\$file:string}, ${2:\\$post_id:int}, ${3:\\$desc:string|null}, ${4:\\$return_type:string} )","description":"Downloads an image from the specified URL, saves it as an attachment, and optionally attaches it to a post."},"ƒ: media_upload_gallery":{"prefix":["media_upload_gallery","mug"],"body":"media_upload_gallery(  )","description":"Retrieves the legacy media uploader form in an iframe."},"ƒ: media_upload_library":{"prefix":["media_upload_library","mul"],"body":"media_upload_library(  )","description":"Retrieves the legacy media library form in an iframe."},"ƒ: image_align_input_fields":{"prefix":["image_align_input_fields","iaif"],"body":"image_align_input_fields( ${1:\\$post:WP_Post}, ${2:\\$checked:string} )","description":"Retrieves HTML for the image alignment radio buttons with the specified one checked."},"ƒ: image_size_input_fields":{"prefix":["image_size_input_fields","isif"],"body":"image_size_input_fields( ${1:\\$post:WP_Post}, ${2:\\$check:bool|string} )","description":"Retrieves HTML for the size radio buttons with the specified one checked."},"ƒ: image_link_input_fields":{"prefix":["image_link_input_fields","ilif"],"body":"image_link_input_fields( ${1:\\$post:WP_Post}, ${2:\\$url_type:string} )","description":"Retrieves HTML for the Link URL buttons with the default link type as specified."},"ƒ: wp_caption_input_textarea":{"prefix":["wp_caption_input_textarea","wcit"],"body":"wp_caption_input_textarea( ${1:\\$edit_post:WP_Post} )","description":"Outputs a textarea element for inputting an attachment caption."},"ƒ: image_attachment_fields_to_edit":{"prefix":["image_attachment_fields_to_edit","iafte"],"body":"image_attachment_fields_to_edit( ${1:\\$form_fields:array}, ${2:\\$post:object} )","description":"Retrieves the image attachment fields to edit form fields."},"ƒ: media_single_attachment_fields_to_edit":{"prefix":["media_single_attachment_fields_to_edit","msafte"],"body":"media_single_attachment_fields_to_edit( ${1:\\$form_fields:array}, ${2:\\$post:WP_Post} )","description":"Retrieves the single non-image attachment fields to edit form fields."},"ƒ: media_post_single_attachment_fields_to_edit":{"prefix":["media_post_single_attachment_fields_to_edit","mpsafte"],"body":"media_post_single_attachment_fields_to_edit( ${1:\\$form_fields:array}, ${2:\\$post:WP_Post} )","description":"Retrieves the post non-image attachment fields to edit form fields."},"ƒ: image_media_send_to_editor":{"prefix":["image_media_send_to_editor","imste"],"body":"image_media_send_to_editor( ${1:\\$html:string}, ${2:\\$attachment_id:int}, ${3:\\$attachment:array} )","description":"Retrieves the media element HTML to send to the editor."},"ƒ: get_attachment_fields_to_edit":{"prefix":["get_attachment_fields_to_edit","gafte"],"body":"get_attachment_fields_to_edit( ${1:\\$post:WP_Post}, ${2:\\$errors:array|null} )","description":"Retrieves the attachment fields to edit form fields."},"ƒ: get_media_items":{"prefix":["get_media_items","gmi"],"body":"get_media_items( ${1:\\$post_id:int}, ${2:\\$errors:array} )","description":"Retrieves HTML for media items of post gallery."},"ƒ: get_media_item":{"prefix":["get_media_item","gmi"],"body":"get_media_item( ${1:\\$attachment_id:int}, ${2:\\$args:string|array|null} )","description":"Retrieves HTML form for modifying the image attachment."},"ƒ: get_compat_media_markup":{"prefix":["get_compat_media_markup","gcmm"],"body":"get_compat_media_markup( ${1:\\$attachment_id:int}, ${2:\\$args:array|null} )","description":""},"ƒ: media_upload_header":{"prefix":["media_upload_header","muh"],"body":"media_upload_header(  )","description":"Outputs the legacy media upload header."},"ƒ: media_upload_form":{"prefix":["media_upload_form","muf"],"body":"media_upload_form( ${1:\\$errors:array|null} )","description":"Outputs the legacy media upload form."},"ƒ: media_upload_type_form":{"prefix":["media_upload_type_form","mutf"],"body":"media_upload_type_form( ${1:\\$type:string}, ${2:\\$errors:array|null}, ${3:\\$id:int|WP_Error|null} )","description":"Outputs the legacy media upload form for a given media type."},"ƒ: media_upload_type_url_form":{"prefix":["media_upload_type_url_form","mutuf"],"body":"media_upload_type_url_form( ${1:\\$type:string|null}, ${2:\\$errors:object|null}, ${3:\\$id:int|null} )","description":"Outputs the legacy media upload form for external media."},"ƒ: media_upload_gallery_form":{"prefix":["media_upload_gallery_form","mugf"],"body":"media_upload_gallery_form( ${1:\\$errors:array} )","description":"Adds gallery form to upload iframe."},"ƒ: media_upload_library_form":{"prefix":["media_upload_library_form","mulf"],"body":"media_upload_library_form( ${1:\\$errors:array} )","description":"Outputs the legacy media upload form for the media library."},"ƒ: wp_media_insert_url_form":{"prefix":["wp_media_insert_url_form","wmiuf"],"body":"wp_media_insert_url_form( ${1:\\$default_view:string} )","description":"Creates the form for external url."},"ƒ: media_upload_flash_bypass":{"prefix":["media_upload_flash_bypass","mufb"],"body":"media_upload_flash_bypass(  )","description":"Displays the multi-file uploader message."},"ƒ: media_upload_html_bypass":{"prefix":["media_upload_html_bypass","muhb"],"body":"media_upload_html_bypass(  )","description":"Displays the browser's built-in uploader message."},"ƒ: media_upload_text_after":{"prefix":["media_upload_text_after","muta"],"body":"media_upload_text_after(  )","description":"Used to display a \"After a file has been uploaded...\" help message."},"ƒ: media_upload_max_image_resize":{"prefix":["media_upload_max_image_resize","mumir"],"body":"media_upload_max_image_resize(  )","description":"Displays the checkbox to scale images."},"ƒ: multisite_over_quota_message":{"prefix":["multisite_over_quota_message","moqm"],"body":"multisite_over_quota_message(  )","description":"Displays the out of storage quota message in Multisite."},"ƒ: edit_form_image_editor":{"prefix":["edit_form_image_editor","efie"],"body":"edit_form_image_editor( ${1:\\$post:WP_Post} )","description":"Displays the image and editor in the post editor"},"ƒ: attachment_submitbox_metadata":{"prefix":["attachment_submitbox_metadata","asm"],"body":"attachment_submitbox_metadata(  )","description":"Displays non-editable attachment metadata in the publish meta box."},"ƒ: wp_add_id3_tag_data":{"prefix":["wp_add_id3_tag_data","waitd"],"body":"wp_add_id3_tag_data( ${1:\\$metadata:array}, ${2:\\$data:array} )","description":"Parses ID3v2, ID3v1, and getID3 comments to extract usable data."},"ƒ: wp_read_video_metadata":{"prefix":["wp_read_video_metadata","wrvm"],"body":"wp_read_video_metadata( ${1:\\$file:string} )","description":"Retrieves metadata from a video file's ID3 tags."},"ƒ: wp_read_audio_metadata":{"prefix":["wp_read_audio_metadata","wram"],"body":"wp_read_audio_metadata( ${1:\\$file:string} )","description":"Retrieves metadata from an audio file's ID3 tags."},"ƒ: wp_get_media_creation_timestamp":{"prefix":["wp_get_media_creation_timestamp","wgmct"],"body":"wp_get_media_creation_timestamp( ${1:\\$metadata:array} )","description":"Parses creation date from media metadata."},"ƒ: wp_media_attach_action":{"prefix":["wp_media_attach_action","wmaa"],"body":"wp_media_attach_action( ${1:\\$parent_id:int}, ${2:\\$action:string} )","description":"Encapsulates the logic for Attach/Detach actions."},"ƒ: add_cssclass":{"prefix":["add_cssclass","ac"],"body":"add_cssclass( ${1:\\$class_to_add:string}, ${2:\\$classes:string} )","description":"Adds a CSS class to a string."},"ƒ: add_menu_classes":{"prefix":["add_menu_classes","amc"],"body":"add_menu_classes( ${1:\\$menu:array} )","description":"Adds CSS classes for top-level administration menu items."},"ƒ: sort_menu":{"prefix":["sort_menu","sm"],"body":"sort_menu( ${1:\\$a:array}, ${2:\\$b:array} )","description":""},"ƒ: post_submit_meta_box":{"prefix":["post_submit_meta_box","psmb"],"body":"post_submit_meta_box( ${1:\\$post:WP_Post}, ${2:\\$args:array} )","description":"Displays post submit form fields."},"ƒ: attachment_submit_meta_box":{"prefix":["attachment_submit_meta_box","asmb"],"body":"attachment_submit_meta_box( ${1:\\$post:WP_Post} )","description":"Displays attachment submit form fields."},"ƒ: post_format_meta_box":{"prefix":["post_format_meta_box","pfmb"],"body":"post_format_meta_box( ${1:\\$post:WP_Post}, ${2:\\$box:array} )","description":"Displays post format form elements."},"ƒ: post_tags_meta_box":{"prefix":["post_tags_meta_box","ptmb"],"body":"post_tags_meta_box( ${1:\\$post:WP_Post}, ${2:\\$box:array} )","description":"Displays post tags form fields."},"ƒ: post_categories_meta_box":{"prefix":["post_categories_meta_box","pcmb"],"body":"post_categories_meta_box( ${1:\\$post:WP_Post}, ${2:\\$box:array} )","description":"Displays post categories form fields."},"ƒ: post_excerpt_meta_box":{"prefix":["post_excerpt_meta_box","pemb"],"body":"post_excerpt_meta_box( ${1:\\$post:WP_Post} )","description":"Displays post excerpt form fields."},"ƒ: post_trackback_meta_box":{"prefix":["post_trackback_meta_box","ptmb"],"body":"post_trackback_meta_box( ${1:\\$post:WP_Post} )","description":"Displays trackback links form fields."},"ƒ: post_custom_meta_box":{"prefix":["post_custom_meta_box","pcmb"],"body":"post_custom_meta_box( ${1:\\$post:WP_Post} )","description":"Displays custom fields form fields."},"ƒ: post_comment_status_meta_box":{"prefix":["post_comment_status_meta_box","pcsmb"],"body":"post_comment_status_meta_box( ${1:\\$post:WP_Post} )","description":"Displays comments status form fields."},"ƒ: post_comment_meta_box_thead":{"prefix":["post_comment_meta_box_thead","pcmbt"],"body":"post_comment_meta_box_thead( ${1:\\$result:array} )","description":"Displays comments for post table header"},"ƒ: post_comment_meta_box":{"prefix":["post_comment_meta_box","pcmb"],"body":"post_comment_meta_box( ${1:\\$post:WP_Post} )","description":"Displays comments for post."},"ƒ: post_slug_meta_box":{"prefix":["post_slug_meta_box","psmb"],"body":"post_slug_meta_box( ${1:\\$post:WP_Post} )","description":"Displays slug form fields."},"ƒ: post_author_meta_box":{"prefix":["post_author_meta_box","pamb"],"body":"post_author_meta_box( ${1:\\$post:WP_Post} )","description":"Displays form field with list of authors."},"ƒ: post_revisions_meta_box":{"prefix":["post_revisions_meta_box","prmb"],"body":"post_revisions_meta_box( ${1:\\$post:WP_Post} )","description":"Displays list of revisions."},"ƒ: page_attributes_meta_box":{"prefix":["page_attributes_meta_box","pamb"],"body":"page_attributes_meta_box( ${1:\\$post:WP_Post} )","description":"Displays page attributes form fields."},"ƒ: link_submit_meta_box":{"prefix":["link_submit_meta_box","lsmb"],"body":"link_submit_meta_box( ${1:\\$link:object} )","description":"Displays link create form fields."},"ƒ: link_categories_meta_box":{"prefix":["link_categories_meta_box","lcmb"],"body":"link_categories_meta_box( ${1:\\$link:object} )","description":"Displays link categories form fields."},"ƒ: link_target_meta_box":{"prefix":["link_target_meta_box","ltmb"],"body":"link_target_meta_box( ${1:\\$link:object} )","description":"Displays form fields for changing link target."},"ƒ: xfn_check":{"prefix":["xfn_check","xc"],"body":"xfn_check( ${1:\\$xfn_relationship:string}, ${2:\\$xfn_value:string}, ${3:\\$deprecated:mixed} )","description":"Displays 'checked' checkboxes attribute for XFN microformat options."},"ƒ: link_xfn_meta_box":{"prefix":["link_xfn_meta_box","lxmb"],"body":"link_xfn_meta_box( ${1:\\$link:object} )","description":"Displays XFN form fields."},"ƒ: link_advanced_meta_box":{"prefix":["link_advanced_meta_box","lamb"],"body":"link_advanced_meta_box( ${1:\\$link:object} )","description":"Displays advanced link options form fields."},"ƒ: post_thumbnail_meta_box":{"prefix":["post_thumbnail_meta_box","ptmb"],"body":"post_thumbnail_meta_box( ${1:\\$post:WP_Post} )","description":"Displays post thumbnail meta box."},"ƒ: attachment_id3_data_meta_box":{"prefix":["attachment_id3_data_meta_box","aidmb"],"body":"attachment_id3_data_meta_box( ${1:\\$post:WP_Post} )","description":"Displays fields for ID3 data."},"ƒ: register_and_do_post_meta_boxes":{"prefix":["register_and_do_post_meta_boxes","radpmb"],"body":"register_and_do_post_meta_boxes( ${1:\\$post:WP_Post} )","description":"Registers the default post meta boxes, and runs the `do_meta_boxes` actions."},"ƒ: got_mod_rewrite":{"prefix":["got_mod_rewrite","gmr"],"body":"got_mod_rewrite(  )","description":"Returns whether the server is running Apache with the mod_rewrite module loaded."},"ƒ: got_url_rewrite":{"prefix":["got_url_rewrite","gur"],"body":"got_url_rewrite(  )","description":"Returns whether the server supports URL rewriting."},"ƒ: extract_from_markers":{"prefix":["extract_from_markers","efm"],"body":"extract_from_markers( ${1:\\$filename:string}, ${2:\\$marker:string} )","description":"Extracts strings from between the BEGIN and END markers in the .htaccess file."},"ƒ: insert_with_markers":{"prefix":["insert_with_markers","iwm"],"body":"insert_with_markers( ${1:\\$filename:string}, ${2:\\$marker:string}, ${3:\\$insertion:array|string} )","description":"Inserts an array of strings into a file (.htaccess), placing it between BEGIN and END markers."},"ƒ: save_mod_rewrite_rules":{"prefix":["save_mod_rewrite_rules","smrr"],"body":"save_mod_rewrite_rules(  )","description":"Updates the htaccess file with the current rules if it is writable."},"ƒ: iis7_save_url_rewrite_rules":{"prefix":["iis7_save_url_rewrite_rules","isurr"],"body":"iis7_save_url_rewrite_rules(  )","description":"Updates the IIS web.config file with the current rules if it is writable."},"ƒ: update_recently_edited":{"prefix":["update_recently_edited","ure"],"body":"update_recently_edited( ${1:\\$file:string} )","description":"Updates the \"recently-edited\" file for the plugin or theme file editor."},"ƒ: update_home_siteurl":{"prefix":["update_home_siteurl","uhs"],"body":"update_home_siteurl( ${1:\\$old_value:string}, ${2:\\$value:string} )","description":"Flushes rewrite rules if `siteurl`, `home` or `page_on_front` changed."},"ƒ: wp_reset_vars":{"prefix":["wp_reset_vars","wrv"],"body":"wp_reset_vars( ${1:\\$vars:array} )","description":"Resets global variables based on `$_GET` and `$_POST`."},"ƒ: show_message":{"prefix":["show_message","sm"],"body":"show_message( ${1:\\$message:string|WP_Error} )","description":"Displays the given administration message."},"ƒ: wp_doc_link_parse":{"prefix":["wp_doc_link_parse","wdlp"],"body":"wp_doc_link_parse( ${1:\\$content:string} )","description":""},"ƒ: set_screen_options":{"prefix":["set_screen_options","sso"],"body":"set_screen_options(  )","description":"Saves option for number of rows when listing posts, pages, comments, etc."},"ƒ: iis7_rewrite_rule_exists":{"prefix":["iis7_rewrite_rule_exists","irre"],"body":"iis7_rewrite_rule_exists( ${1:\\$filename:string} )","description":"Checks if rewrite rule for WordPress already exists in the IIS 7+ configuration file."},"ƒ: iis7_delete_rewrite_rule":{"prefix":["iis7_delete_rewrite_rule","idrr"],"body":"iis7_delete_rewrite_rule( ${1:\\$filename:string} )","description":"Deletes WordPress rewrite rule from web.config file if it exists there."},"ƒ: iis7_add_rewrite_rule":{"prefix":["iis7_add_rewrite_rule","iarr"],"body":"iis7_add_rewrite_rule( ${1:\\$filename:string}, ${2:\\$rewrite_rule:string} )","description":"Adds WordPress rewrite rule to the IIS 7+ configuration file."},"ƒ: saveDomDocument":{"prefix":["saveDomDocument"],"body":"saveDomDocument( ${1:\\$doc:DOMDocument}, ${2:\\$filename:string} )","description":"Saves the XML document into a file."},"ƒ: admin_color_scheme_picker":{"prefix":["admin_color_scheme_picker","acsp"],"body":"admin_color_scheme_picker( ${1:\\$user_id:int} )","description":"Displays the default admin color scheme picker (Used in user-edit.php)."},"ƒ: wp_color_scheme_settings":{"prefix":["wp_color_scheme_settings","wcss"],"body":"wp_color_scheme_settings(  )","description":""},"ƒ: wp_admin_viewport_meta":{"prefix":["wp_admin_viewport_meta","wavm"],"body":"wp_admin_viewport_meta(  )","description":"Displays the viewport meta in the admin."},"ƒ: wp_check_locked_posts":{"prefix":["wp_check_locked_posts","wclp"],"body":"wp_check_locked_posts( ${1:\\$response:array}, ${2:\\$data:array}, ${3:\\$screen_id:string} )","description":"Checks lock status for posts displayed on the Posts screen."},"ƒ: wp_refresh_post_lock":{"prefix":["wp_refresh_post_lock","wrpl"],"body":"wp_refresh_post_lock( ${1:\\$response:array}, ${2:\\$data:array}, ${3:\\$screen_id:string} )","description":"Checks lock status on the New/Edit Post screen and refresh the lock."},"ƒ: wp_refresh_post_nonces":{"prefix":["wp_refresh_post_nonces","wrpn"],"body":"wp_refresh_post_nonces( ${1:\\$response:array}, ${2:\\$data:array}, ${3:\\$screen_id:string} )","description":"Checks nonce expiration on the New/Edit Post screen and refresh if needed."},"ƒ: wp_refresh_metabox_loader_nonces":{"prefix":["wp_refresh_metabox_loader_nonces","wrmln"],"body":"wp_refresh_metabox_loader_nonces( ${1:\\$response:array}, ${2:\\$data:array} )","description":"Refresh nonces used with meta boxes in the block editor."},"ƒ: wp_refresh_heartbeat_nonces":{"prefix":["wp_refresh_heartbeat_nonces","wrhn"],"body":"wp_refresh_heartbeat_nonces( ${1:\\$response:array} )","description":"Adds the latest Heartbeat and REST API nonce to the Heartbeat response."},"ƒ: wp_heartbeat_set_suspension":{"prefix":["wp_heartbeat_set_suspension","whss"],"body":"wp_heartbeat_set_suspension( ${1:\\$settings:array} )","description":"Disables suspension of Heartbeat on the Add/Edit Post screens."},"ƒ: heartbeat_autosave":{"prefix":["heartbeat_autosave","ha"],"body":"heartbeat_autosave( ${1:\\$response:array}, ${2:\\$data:array} )","description":"Performs autosave with heartbeat."},"ƒ: wp_admin_canonical_url":{"prefix":["wp_admin_canonical_url","wacu"],"body":"wp_admin_canonical_url(  )","description":"Removes single-use URL parameters and create canonical link based on new URL."},"ƒ: wp_page_reload_on_back_button_js":{"prefix":["wp_page_reload_on_back_button_js","wprobbj"],"body":"wp_page_reload_on_back_button_js(  )","description":"Outputs JS that reloads the page if the user navigated to it with the Back or Forward button."},"ƒ: update_option_new_admin_email":{"prefix":["update_option_new_admin_email","uonae"],"body":"update_option_new_admin_email( ${1:\\$old_value:string}, ${2:\\$value:string} )","description":"Sends a confirmation request email when a change of site admin email address is attempted."},"ƒ: wp_check_php_version":{"prefix":["wp_check_php_version","wcpv"],"body":"wp_check_php_version(  )","description":"Checks if the user needs to update PHP."},"ƒ: wpmu_menu":{"prefix":["wpmu_menu","wm"],"body":"wpmu_menu(  )","description":"Outputs the WPMU menu."},"ƒ: wpmu_checkAvailableSpace":{"prefix":["wpmu_checkAvailableSpace","wc"],"body":"wpmu_checkAvailableSpace(  )","description":"Determines if the available space defined by the admin has been exceeded by the user."},"ƒ: mu_options":{"prefix":["mu_options","mo"],"body":"mu_options( ${1:\\$options:mixed} )","description":"WPMU options."},"ƒ: activate_sitewide_plugin":{"prefix":["activate_sitewide_plugin","asp"],"body":"activate_sitewide_plugin(  )","description":"Deprecated functionality for activating a network-only plugin."},"ƒ: deactivate_sitewide_plugin":{"prefix":["deactivate_sitewide_plugin","dsp"],"body":"deactivate_sitewide_plugin( ${1:\\$plugin:mixed} )","description":"Deprecated functionality for deactivating a network-only plugin."},"ƒ: is_wpmu_sitewide_plugin":{"prefix":["is_wpmu_sitewide_plugin","iwsp"],"body":"is_wpmu_sitewide_plugin( ${1:\\$file:mixed} )","description":"Deprecated functionality for determining if the current plugin is network-only."},"ƒ: get_site_allowed_themes":{"prefix":["get_site_allowed_themes","gsat"],"body":"get_site_allowed_themes(  )","description":"Deprecated functionality for getting themes network-enabled themes."},"ƒ: wpmu_get_blog_allowedthemes":{"prefix":["wpmu_get_blog_allowedthemes","wgba"],"body":"wpmu_get_blog_allowedthemes( ${1:\\$blog_id:mixed} )","description":"Deprecated functionality for getting themes allowed on a specific site."},"ƒ: ms_deprecated_blogs_file":{"prefix":["ms_deprecated_blogs_file","mdbf"],"body":"ms_deprecated_blogs_file(  )","description":"Deprecated functionality for determining whether a file is deprecated."},"ƒ: install_global_terms":{"prefix":["install_global_terms","igt"],"body":"install_global_terms(  )","description":"Install global terms."},"ƒ: sync_category_tag_slugs":{"prefix":["sync_category_tag_slugs","scts"],"body":"sync_category_tag_slugs( ${1:\\$term:WP_Term|array}, ${2:\\$taxonomy:string} )","description":"Synchronizes category and post tag slugs when global terms are enabled."},"ƒ: check_upload_size":{"prefix":["check_upload_size","cus"],"body":"check_upload_size( ${1:\\$file:array} )","description":"Determines whether uploaded file exceeds space quota."},"ƒ: wpmu_delete_blog":{"prefix":["wpmu_delete_blog","wdb"],"body":"wpmu_delete_blog( ${1:\\$blog_id:int}, ${2:\\$drop:bool} )","description":"Deletes a site."},"ƒ: wpmu_delete_user":{"prefix":["wpmu_delete_user","wdu"],"body":"wpmu_delete_user( ${1:\\$id:int} )","description":"Deletes a user and all of their posts from the network."},"ƒ: upload_is_user_over_quota":{"prefix":["upload_is_user_over_quota","uiuoq"],"body":"upload_is_user_over_quota( ${1:\\$display_message:bool} )","description":"Checks whether a site has used its allotted upload space."},"ƒ: display_space_usage":{"prefix":["display_space_usage","dsu"],"body":"display_space_usage(  )","description":"Displays the amount of disk space used by the current site. Not used in core."},"ƒ: fix_import_form_size":{"prefix":["fix_import_form_size","fifs"],"body":"fix_import_form_size( ${1:\\$size:int} )","description":"Gets the remaining upload space for this site."},"ƒ: upload_space_setting":{"prefix":["upload_space_setting","uss"],"body":"upload_space_setting( ${1:\\$id:int} )","description":"Displays the site upload space quota setting form on the Edit Site Settings screen."},"ƒ: refresh_user_details":{"prefix":["refresh_user_details","rud"],"body":"refresh_user_details( ${1:\\$id:int} )","description":"Cleans the user cache for a specific user."},"ƒ: format_code_lang":{"prefix":["format_code_lang","fcl"],"body":"format_code_lang( ${1:\\$code:string} )","description":"Returns the language for a language code."},"ƒ: check_import_new_users":{"prefix":["check_import_new_users","cinu"],"body":"check_import_new_users( ${1:\\$permission:string} )","description":"Checks if the current user has permissions to import new users."},"ƒ: mu_dropdown_languages":{"prefix":["mu_dropdown_languages","mdl"],"body":"mu_dropdown_languages( ${1:\\$lang_files:string[]}, ${2:\\$current:string} )","description":"Generates and displays a drop-down of available languages."},"ƒ: site_admin_notice":{"prefix":["site_admin_notice","san"],"body":"site_admin_notice(  )","description":"Displays an admin notice to upgrade all sites after a core upgrade."},"ƒ: avoid_blog_page_permalink_collision":{"prefix":["avoid_blog_page_permalink_collision","abppc"],"body":"avoid_blog_page_permalink_collision( ${1:\\$data:array}, ${2:\\$postarr:array} )","description":"Avoids a collision between a site slug and a permalink slug."},"ƒ: choose_primary_blog":{"prefix":["choose_primary_blog","cpb"],"body":"choose_primary_blog(  )","description":"Handles the display of choosing a user's primary site."},"ƒ: can_edit_network":{"prefix":["can_edit_network","cen"],"body":"can_edit_network( ${1:\\$network_id:int} )","description":"Determines whether or not this network from this page can be edited."},"ƒ: confirm_delete_users":{"prefix":["confirm_delete_users","cdu"],"body":"confirm_delete_users( ${1:\\$users:array} )","description":""},"ƒ: network_settings_add_js":{"prefix":["network_settings_add_js","nsaj"],"body":"network_settings_add_js(  )","description":"Prints JavaScript in the header on the Network Settings screen."},"ƒ: network_edit_site_nav":{"prefix":["network_edit_site_nav","nesn"],"body":"network_edit_site_nav( ${1:\\$args:array} )","description":"Outputs the HTML for a network's \"Edit Site\" tabular interface."},"ƒ: get_site_screen_help_tab_args":{"prefix":["get_site_screen_help_tab_args","gsshta"],"body":"get_site_screen_help_tab_args(  )","description":"Returns the arguments for the help tab on the Edit Site screens."},"ƒ: get_site_screen_help_sidebar_content":{"prefix":["get_site_screen_help_sidebar_content","gsshsc"],"body":"get_site_screen_help_sidebar_content(  )","description":"Returns the content for the help sidebar on the Edit Site screens."},"ƒ: wp_ensure_editable_role":{"prefix":["wp_ensure_editable_role","weer"],"body":"wp_ensure_editable_role( ${1:\\$role:string} )","description":"Stop execution if the role can not be assigned by the current user."},"ƒ: wp_nav_menu_setup":{"prefix":["wp_nav_menu_setup","wnms"],"body":"wp_nav_menu_setup(  )","description":"Register nav menu meta boxes and advanced menu items."},"ƒ: wp_initial_nav_menu_meta_boxes":{"prefix":["wp_initial_nav_menu_meta_boxes","winmmb"],"body":"wp_initial_nav_menu_meta_boxes(  )","description":"Limit the amount of meta boxes to pages, posts, links, and categories for first time users."},"ƒ: wp_nav_menu_post_type_meta_boxes":{"prefix":["wp_nav_menu_post_type_meta_boxes","wnmptmb"],"body":"wp_nav_menu_post_type_meta_boxes(  )","description":"Creates meta boxes for any post type menu item."},"ƒ: wp_nav_menu_taxonomy_meta_boxes":{"prefix":["wp_nav_menu_taxonomy_meta_boxes","wnmtmb"],"body":"wp_nav_menu_taxonomy_meta_boxes(  )","description":"Creates meta boxes for any taxonomy menu item."},"ƒ: wp_nav_menu_disabled_check":{"prefix":["wp_nav_menu_disabled_check","wnmdc"],"body":"wp_nav_menu_disabled_check( ${1:\\$nav_menu_selected_id:int|string}, ${2:\\$display:bool} )","description":"Check whether to disable the Menu Locations meta box submit button and inputs."},"ƒ: wp_nav_menu_item_link_meta_box":{"prefix":["wp_nav_menu_item_link_meta_box","wnmilmb"],"body":"wp_nav_menu_item_link_meta_box(  )","description":"Displays a meta box for the custom links menu item."},"ƒ: wp_nav_menu_item_post_type_meta_box":{"prefix":["wp_nav_menu_item_post_type_meta_box","wnmiptmb"],"body":"wp_nav_menu_item_post_type_meta_box( ${1:\\$data_object:string}, ${2:\\$box:array} )","description":"Displays a meta box for a post type menu item."},"ƒ: wp_nav_menu_item_taxonomy_meta_box":{"prefix":["wp_nav_menu_item_taxonomy_meta_box","wnmitmb"],"body":"wp_nav_menu_item_taxonomy_meta_box( ${1:\\$data_object:string}, ${2:\\$box:array} )","description":"Displays a meta box for a taxonomy menu item."},"ƒ: wp_save_nav_menu_items":{"prefix":["wp_save_nav_menu_items","wsnmi"],"body":"wp_save_nav_menu_items( ${1:\\$menu_id:int}, ${2:\\$menu_data:array[]} )","description":"Save posted nav menu item data."},"ƒ: wp_get_nav_menu_to_edit":{"prefix":["wp_get_nav_menu_to_edit","wgnmte"],"body":"wp_get_nav_menu_to_edit( ${1:\\$menu_id:int} )","description":"Returns the menu formatted to edit."},"ƒ: wp_nav_menu_manage_columns":{"prefix":["wp_nav_menu_manage_columns","wnmmc"],"body":"wp_nav_menu_manage_columns(  )","description":"Returns the columns for the nav menus page."},"ƒ: wp_nav_menu_update_menu_items":{"prefix":["wp_nav_menu_update_menu_items","wnmumi"],"body":"wp_nav_menu_update_menu_items( ${1:\\$nav_menu_selected_id:int|string}, ${2:\\$nav_menu_selected_title:string} )","description":"Saves nav menu items."},"ƒ: network_domain_check":{"prefix":["network_domain_check","ndc"],"body":"network_domain_check(  )","description":"Check for an existing network."},"ƒ: allow_subdomain_install":{"prefix":["allow_subdomain_install","asi"],"body":"allow_subdomain_install(  )","description":"Allow subdomain installation"},"ƒ: allow_subdirectory_install":{"prefix":["allow_subdirectory_install","asi"],"body":"allow_subdirectory_install(  )","description":"Allow subdirectory installation."},"ƒ: get_clean_basedomain":{"prefix":["get_clean_basedomain","gcb"],"body":"get_clean_basedomain(  )","description":"Get base domain of network."},"ƒ: network_step1":{"prefix":["network_step1","ns"],"body":"network_step1( ${1:\\$errors:false|WP_Error} )","description":"Prints step 1 for Network installation process."},"ƒ: network_step2":{"prefix":["network_step2","ns"],"body":"network_step2( ${1:\\$errors:false|WP_Error} )","description":"Prints step 2 for Network installation process."},"ƒ: get_file":{"prefix":["get_file","gf"],"body":"get_file( ${1:\\$path:mixed} )","description":""},"ƒ: options_discussion_add_js":{"prefix":["options_discussion_add_js","odaj"],"body":"options_discussion_add_js(  )","description":"Output JavaScript to toggle display of additional settings if avatars are disabled."},"ƒ: options_general_add_js":{"prefix":["options_general_add_js","ogaj"],"body":"options_general_add_js(  )","description":"Display JavaScript on the page."},"ƒ: options_reading_add_js":{"prefix":["options_reading_add_js","oraj"],"body":"options_reading_add_js(  )","description":"Display JavaScript on the page."},"ƒ: options_reading_blog_charset":{"prefix":["options_reading_blog_charset","orbc"],"body":"options_reading_blog_charset(  )","description":"Render the site charset setting."},"ƒ: plugins_api":{"prefix":["plugins_api","pa"],"body":"plugins_api( ${1:\\$action:string}, ${2:\\$args:array|object} )","description":"Retrieves plugin installer pages from the WordPress.org Plugins API."},"ƒ: install_popular_tags":{"prefix":["install_popular_tags","ipt"],"body":"install_popular_tags( ${1:\\$args:array} )","description":"Retrieves popular WordPress plugin tags."},"ƒ: install_dashboard":{"prefix":["install_dashboard","id"],"body":"install_dashboard(  )","description":"Displays the Featured tab of Add Plugins screen."},"ƒ: install_search_form":{"prefix":["install_search_form","isf"],"body":"install_search_form( ${1:\\$deprecated:bool} )","description":"Displays a search form for searching plugins."},"ƒ: install_plugins_upload":{"prefix":["install_plugins_upload","ipu"],"body":"install_plugins_upload(  )","description":"Displays a form to upload plugins from zip files."},"ƒ: install_plugins_favorites_form":{"prefix":["install_plugins_favorites_form","ipff"],"body":"install_plugins_favorites_form(  )","description":"Shows a username form for the favorites page."},"ƒ: display_plugins_table":{"prefix":["display_plugins_table","dpt"],"body":"display_plugins_table(  )","description":"Displays plugin content based on plugin list."},"ƒ: install_plugin_install_status":{"prefix":["install_plugin_install_status","ipis"],"body":"install_plugin_install_status( ${1:\\$api:array|object}, ${2:\\$loop:bool} )","description":"Determines the status we can perform on a plugin."},"ƒ: install_plugin_information":{"prefix":["install_plugin_information","ipi"],"body":"install_plugin_information(  )","description":"Displays plugin information in dialog box form."},"ƒ: wp_get_plugin_action_button":{"prefix":["wp_get_plugin_action_button","wgpab"],"body":"wp_get_plugin_action_button( ${1:\\$name:string}, ${2:\\$data:array|object}, ${3:\\$compatible_php:bool}, ${4:\\$compatible_wp:bool} )","description":"Gets the markup for the plugin install action button."},"ƒ: get_plugin_data":{"prefix":["get_plugin_data","gpd"],"body":"get_plugin_data( ${1:\\$plugin_file:string}, ${2:\\$markup:bool}, ${3:\\$translate:bool} )","description":"Parses the plugin contents to retrieve plugin's metadata."},"ƒ: get_plugin_files":{"prefix":["get_plugin_files","gpf"],"body":"get_plugin_files( ${1:\\$plugin:string} )","description":"Gets a list of a plugin's files."},"ƒ: get_plugins":{"prefix":["get_plugins","gp"],"body":"get_plugins( ${1:\\$plugin_folder:string} )","description":"Checks the plugins directory and retrieve all plugin files with plugin data."},"ƒ: get_mu_plugins":{"prefix":["get_mu_plugins","gmp"],"body":"get_mu_plugins(  )","description":"Checks the mu-plugins directory and retrieve all mu-plugin files with any plugin data."},"ƒ: get_dropins":{"prefix":["get_dropins","gd"],"body":"get_dropins(  )","description":"Checks the wp-content directory and retrieve all drop-ins with any plugin data."},"ƒ: is_plugin_active":{"prefix":["is_plugin_active","ipa"],"body":"is_plugin_active( ${1:\\$plugin:string} )","description":"Determines whether a plugin is active."},"ƒ: is_plugin_inactive":{"prefix":["is_plugin_inactive","ipi"],"body":"is_plugin_inactive( ${1:\\$plugin:string} )","description":"Determines whether the plugin is inactive."},"ƒ: is_plugin_active_for_network":{"prefix":["is_plugin_active_for_network","ipafn"],"body":"is_plugin_active_for_network( ${1:\\$plugin:string} )","description":"Determines whether the plugin is active for the entire network."},"ƒ: is_network_only_plugin":{"prefix":["is_network_only_plugin","inop"],"body":"is_network_only_plugin( ${1:\\$plugin:string} )","description":"Checks for \"Network: true\" in the plugin header to see if this should be activated only as a network wide plugin. The plugin would also work when Multisite is not enabled."},"ƒ: activate_plugin":{"prefix":["activate_plugin","ap"],"body":"activate_plugin( ${1:\\$plugin:string}, ${2:\\$redirect:string}, ${3:\\$network_wide:bool}, ${4:\\$silent:bool} )","description":"Attempts activation of plugin in a \"sandbox\" and redirects on success."},"ƒ: deactivate_plugins":{"prefix":["deactivate_plugins","dp"],"body":"deactivate_plugins( ${1:\\$plugins:string|string[]}, ${2:\\$silent:bool}, ${3:\\$network_wide:bool|null|null} )","description":"Deactivates a single plugin or multiple plugins."},"ƒ: activate_plugins":{"prefix":["activate_plugins","ap"],"body":"activate_plugins( ${1:\\$plugins:string|string[]}, ${2:\\$redirect:string}, ${3:\\$network_wide:bool}, ${4:\\$silent:bool} )","description":"Activates multiple plugins."},"ƒ: delete_plugins":{"prefix":["delete_plugins","dp"],"body":"delete_plugins( ${1:\\$plugins:string[]}, ${2:\\$deprecated:string} )","description":"Removes directory and files of a plugin for a list of plugins."},"ƒ: validate_active_plugins":{"prefix":["validate_active_plugins","vap"],"body":"validate_active_plugins(  )","description":"Validates active plugins."},"ƒ: validate_plugin":{"prefix":["validate_plugin","vp"],"body":"validate_plugin( ${1:\\$plugin:string} )","description":"Validates the plugin path."},"ƒ: validate_plugin_requirements":{"prefix":["validate_plugin_requirements","vpr"],"body":"validate_plugin_requirements( ${1:\\$plugin:string} )","description":"Validates the plugin requirements for WordPress version and PHP version."},"ƒ: is_uninstallable_plugin":{"prefix":["is_uninstallable_plugin","iup"],"body":"is_uninstallable_plugin( ${1:\\$plugin:string} )","description":"Determines whether the plugin can be uninstalled."},"ƒ: uninstall_plugin":{"prefix":["uninstall_plugin","up"],"body":"uninstall_plugin( ${1:\\$plugin:string} )","description":"Uninstalls a single plugin."},"ƒ: add_menu_page":{"prefix":["add_menu_page","amp"],"body":"add_menu_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$icon_url:string}, ${7:\\$position:int|float|null} )","description":"Adds a top-level menu page."},"ƒ: add_submenu_page":{"prefix":["add_submenu_page","asp"],"body":"add_submenu_page( ${1:\\$parent_slug:string}, ${2:\\$page_title:string}, ${3:\\$menu_title:string}, ${4:\\$capability:string}, ${5:\\$menu_slug:string}, ${6:\\$callback:callable}, ${7:\\$position:int|float|null} )","description":"Adds a submenu page."},"ƒ: add_management_page":{"prefix":["add_management_page","amp"],"body":"add_management_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Tools main menu."},"ƒ: add_options_page":{"prefix":["add_options_page","aop"],"body":"add_options_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Settings main menu."},"ƒ: add_theme_page":{"prefix":["add_theme_page","atp"],"body":"add_theme_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Appearance main menu."},"ƒ: add_plugins_page":{"prefix":["add_plugins_page","app"],"body":"add_plugins_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Plugins main menu."},"ƒ: add_users_page":{"prefix":["add_users_page","aup"],"body":"add_users_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Users/Profile main menu."},"ƒ: add_dashboard_page":{"prefix":["add_dashboard_page","adp"],"body":"add_dashboard_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Dashboard main menu."},"ƒ: add_posts_page":{"prefix":["add_posts_page","app"],"body":"add_posts_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Posts main menu."},"ƒ: add_media_page":{"prefix":["add_media_page","amp"],"body":"add_media_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Media main menu."},"ƒ: add_links_page":{"prefix":["add_links_page","alp"],"body":"add_links_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Links main menu."},"ƒ: add_pages_page":{"prefix":["add_pages_page","app"],"body":"add_pages_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Pages main menu."},"ƒ: add_comments_page":{"prefix":["add_comments_page","acp"],"body":"add_comments_page( ${1:\\$page_title:string}, ${2:\\$menu_title:string}, ${3:\\$capability:string}, ${4:\\$menu_slug:string}, ${5:\\$callback:callable}, ${6:\\$position:int|null} )","description":"Adds a submenu page to the Comments main menu."},"ƒ: remove_menu_page":{"prefix":["remove_menu_page","rmp"],"body":"remove_menu_page( ${1:\\$menu_slug:string} )","description":"Removes a top-level admin menu."},"ƒ: remove_submenu_page":{"prefix":["remove_submenu_page","rsp"],"body":"remove_submenu_page( ${1:\\$menu_slug:string}, ${2:\\$submenu_slug:string} )","description":"Removes an admin submenu."},"ƒ: menu_page_url":{"prefix":["menu_page_url","mpu"],"body":"menu_page_url( ${1:\\$menu_slug:string}, ${2:\\$display:bool} )","description":"Gets the URL to access a particular menu page based on the slug it was registered with."},"ƒ: get_admin_page_parent":{"prefix":["get_admin_page_parent","gapp"],"body":"get_admin_page_parent( ${1:\\$parent_page:string} )","description":"Gets the parent file of the current admin page."},"ƒ: get_admin_page_title":{"prefix":["get_admin_page_title","gapt"],"body":"get_admin_page_title(  )","description":"Gets the title of the current admin page."},"ƒ: get_plugin_page_hook":{"prefix":["get_plugin_page_hook","gpph"],"body":"get_plugin_page_hook( ${1:\\$plugin_page:string}, ${2:\\$parent_page:string} )","description":"Gets the hook attached to the administrative page of a plugin."},"ƒ: get_plugin_page_hookname":{"prefix":["get_plugin_page_hookname","gpph"],"body":"get_plugin_page_hookname( ${1:\\$plugin_page:string}, ${2:\\$parent_page:string} )","description":"Gets the hook name for the administrative page of a plugin."},"ƒ: user_can_access_admin_page":{"prefix":["user_can_access_admin_page","ucaap"],"body":"user_can_access_admin_page(  )","description":"Determines whether the current user can access the current admin page."},"ƒ: option_update_filter":{"prefix":["option_update_filter","ouf"],"body":"option_update_filter( ${1:\\$options:array} )","description":"Refreshes the value of the allowed options list available via the 'allowed_options' hook."},"ƒ: add_allowed_options":{"prefix":["add_allowed_options","aao"],"body":"add_allowed_options( ${1:\\$new_options:array}, ${2:\\$options:string|array} )","description":"Adds an array of options to the list of allowed options."},"ƒ: remove_allowed_options":{"prefix":["remove_allowed_options","rao"],"body":"remove_allowed_options( ${1:\\$del_options:array}, ${2:\\$options:string|array} )","description":"Removes a list of options from the allowed options list."},"ƒ: settings_fields":{"prefix":["settings_fields","sf"],"body":"settings_fields( ${1:\\$option_group:string} )","description":"Outputs nonce, action, and option_page fields for a settings page."},"ƒ: wp_clean_plugins_cache":{"prefix":["wp_clean_plugins_cache","wcpc"],"body":"wp_clean_plugins_cache( ${1:\\$clear_update_cache:bool} )","description":"Clears the plugins cache used by get_plugins() and by default, the plugin updates cache."},"ƒ: plugin_sandbox_scrape":{"prefix":["plugin_sandbox_scrape","pss"],"body":"plugin_sandbox_scrape( ${1:\\$plugin:string} )","description":"Loads a given plugin attempt to generate errors."},"ƒ: wp_add_privacy_policy_content":{"prefix":["wp_add_privacy_policy_content","wappc"],"body":"wp_add_privacy_policy_content( ${1:\\$plugin_name:string}, ${2:\\$policy_text:string} )","description":"Declares a helper function for adding content to the Privacy Policy Guide."},"ƒ: is_plugin_paused":{"prefix":["is_plugin_paused","ipp"],"body":"is_plugin_paused( ${1:\\$plugin:string} )","description":"Determines whether a plugin is technically active but was paused while loading."},"ƒ: wp_get_plugin_error":{"prefix":["wp_get_plugin_error","wgpe"],"body":"wp_get_plugin_error( ${1:\\$plugin:string} )","description":"Gets the error that was recorded for a paused plugin."},"ƒ: resume_plugin":{"prefix":["resume_plugin","rp"],"body":"resume_plugin( ${1:\\$plugin:string}, ${2:\\$redirect:string} )","description":"Tries to resume a single plugin."},"ƒ: paused_plugins_notice":{"prefix":["paused_plugins_notice","ppn"],"body":"paused_plugins_notice(  )","description":"Renders an admin notice in case some plugins have been paused due to errors."},"ƒ: edit_post":{"prefix":["edit_post","ep"],"body":"edit_post( ${1:\\$post_data:array|null|null} )","description":"Updates an existing post with values provided in `$_POST`."},"ƒ: bulk_edit_posts":{"prefix":["bulk_edit_posts","bep"],"body":"bulk_edit_posts( ${1:\\$post_data:array|null|null} )","description":"Processes the post data for the bulk editing of posts."},"ƒ: get_default_post_to_edit":{"prefix":["get_default_post_to_edit","gdpte"],"body":"get_default_post_to_edit( ${1:\\$post_type:string}, ${2:\\$create_in_db:bool} )","description":"Returns default post information to use when populating the \"Write Post\" form."},"ƒ: post_exists":{"prefix":["post_exists","pe"],"body":"post_exists( ${1:\\$title:string}, ${2:\\$content:string}, ${3:\\$date:string}, ${4:\\$type:string}, ${5:\\$status:string} )","description":"Determines if a post exists based on title, content, date and type."},"ƒ: wp_write_post":{"prefix":["wp_write_post","wwp"],"body":"wp_write_post(  )","description":"Creates a new post from the \"Write Post\" form using `$_POST` information."},"ƒ: write_post":{"prefix":["write_post","wp"],"body":"write_post(  )","description":"Calls wp_write_post() and handles the errors."},"ƒ: add_meta":{"prefix":["add_meta","am"],"body":"add_meta( ${1:\\$post_id:int} )","description":"Adds post meta data defined in the `$_POST` superglobal for a post with given ID."},"ƒ: delete_meta":{"prefix":["delete_meta","dm"],"body":"delete_meta( ${1:\\$mid:int} )","description":"Deletes post meta data by meta ID."},"ƒ: get_meta_keys":{"prefix":["get_meta_keys","gmk"],"body":"get_meta_keys(  )","description":"Returns a list of previously defined keys."},"ƒ: get_post_meta_by_id":{"prefix":["get_post_meta_by_id","gpmbi"],"body":"get_post_meta_by_id( ${1:\\$mid:int} )","description":"Returns post meta data by meta ID."},"ƒ: has_meta":{"prefix":["has_meta","hm"],"body":"has_meta( ${1:\\$post_id:int} )","description":"Returns meta data for the given post ID."},"ƒ: update_meta":{"prefix":["update_meta","um"],"body":"update_meta( ${1:\\$meta_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:string} )","description":"Updates post meta data by meta ID."},"ƒ: get_available_post_statuses":{"prefix":["get_available_post_statuses","gaps"],"body":"get_available_post_statuses( ${1:\\$type:string} )","description":"Returns all the possible statuses for a post type."},"ƒ: wp_edit_posts_query":{"prefix":["wp_edit_posts_query","wepq"],"body":"wp_edit_posts_query( ${1:\\$q:array|false} )","description":"Runs the query to fetch the posts for listing on the edit posts page."},"ƒ: wp_edit_attachments_query_vars":{"prefix":["wp_edit_attachments_query_vars","weaqv"],"body":"wp_edit_attachments_query_vars( ${1:\\$q:array|false} )","description":"Returns the query variables for the current attachments request."},"ƒ: wp_edit_attachments_query":{"prefix":["wp_edit_attachments_query","weaq"],"body":"wp_edit_attachments_query( ${1:\\$q:array|false} )","description":"Executes a query for attachments. An array of WP_Query arguments can be passed in, which will override the arguments set by this function."},"ƒ: postbox_classes":{"prefix":["postbox_classes","pc"],"body":"postbox_classes( ${1:\\$box_id:string}, ${2:\\$screen_id:string} )","description":"Returns the list of classes to be used by a meta box."},"ƒ: get_sample_permalink":{"prefix":["get_sample_permalink","gsp"],"body":"get_sample_permalink( ${1:\\$post:int|WP_Post}, ${2:\\$title:string|null|null}, ${3:\\$name:string|null|null} )","description":"Returns a sample permalink based on the post name."},"ƒ: get_sample_permalink_html":{"prefix":["get_sample_permalink_html","gsph"],"body":"get_sample_permalink_html( ${1:\\$post:int|WP_Post}, ${2:\\$new_title:string|null|null}, ${3:\\$new_slug:string|null|null} )","description":"Returns the HTML of the sample permalink slug editor."},"ƒ: wp_check_post_lock":{"prefix":["wp_check_post_lock","wcpl"],"body":"wp_check_post_lock( ${1:\\$post:int|WP_Post} )","description":"Determines whether the post is currently being edited by another user."},"ƒ: wp_set_post_lock":{"prefix":["wp_set_post_lock","wspl"],"body":"wp_set_post_lock( ${1:\\$post:int|WP_Post} )","description":"Marks the post as currently being edited by the current user."},"ƒ: wp_create_post_autosave":{"prefix":["wp_create_post_autosave","wcpa"],"body":"wp_create_post_autosave( ${1:\\$post_data:array|int} )","description":"Creates autosave data for the specified post from `$_POST` data."},"ƒ: wp_autosave_post_revisioned_meta_fields":{"prefix":["wp_autosave_post_revisioned_meta_fields","waprmf"],"body":"wp_autosave_post_revisioned_meta_fields( ${1:\\$new_autosave:array} )","description":"Autosaves the revisioned meta fields."},"ƒ: post_preview":{"prefix":["post_preview","pp"],"body":"post_preview(  )","description":"Saves a draft or manually autosaves for the purpose of showing a post preview."},"ƒ: wp_autosave":{"prefix":["wp_autosave","wa"],"body":"wp_autosave( ${1:\\$post_data:array} )","description":"Saves a post submitted with XHR."},"ƒ: redirect_post":{"prefix":["redirect_post","rp"],"body":"redirect_post( ${1:\\$post_id:int} )","description":"Redirects to previous page."},"ƒ: taxonomy_meta_box_sanitize_cb_checkboxes":{"prefix":["taxonomy_meta_box_sanitize_cb_checkboxes","tmbscc"],"body":"taxonomy_meta_box_sanitize_cb_checkboxes( ${1:\\$taxonomy:string}, ${2:\\$terms:array} )","description":"Sanitizes POST values from a checkbox taxonomy metabox."},"ƒ: taxonomy_meta_box_sanitize_cb_input":{"prefix":["taxonomy_meta_box_sanitize_cb_input","tmbsci"],"body":"taxonomy_meta_box_sanitize_cb_input( ${1:\\$taxonomy:string}, ${2:\\$terms:array|string} )","description":"Sanitizes POST values from an input taxonomy metabox."},"ƒ: get_block_editor_server_block_settings":{"prefix":["get_block_editor_server_block_settings","gbesbs"],"body":"get_block_editor_server_block_settings(  )","description":"Prepares server-registered blocks for the block editor."},"ƒ: the_block_editor_meta_boxes":{"prefix":["the_block_editor_meta_boxes","tbemb"],"body":"the_block_editor_meta_boxes(  )","description":"Renders the meta boxes forms."},"ƒ: the_block_editor_meta_box_post_form_hidden_fields":{"prefix":["the_block_editor_meta_box_post_form_hidden_fields","tbembpfhf"],"body":"the_block_editor_meta_box_post_form_hidden_fields( ${1:\\$post:WP_Post} )","description":"Renders the hidden form required for the meta boxes form."},"ƒ: wp_privacy_generate_personal_data_export_group_html":{"prefix":["wp_privacy_generate_personal_data_export_group_html","wpgpdegh"],"body":"wp_privacy_generate_personal_data_export_group_html( ${1:\\$group_data:array}, ${2:\\$group_id:string}, ${3:\\$groups_count:int} )","description":"Generate a single group for the personal data export report."},"ƒ: wp_privacy_generate_personal_data_export_file":{"prefix":["wp_privacy_generate_personal_data_export_file","wpgpdef"],"body":"wp_privacy_generate_personal_data_export_file( ${1:\\$request_id:int} )","description":"Generate the personal data export file."},"ƒ: wp_privacy_send_personal_data_export_email":{"prefix":["wp_privacy_send_personal_data_export_email","wpspdee"],"body":"wp_privacy_send_personal_data_export_email( ${1:\\$request_id:int} )","description":"Send an email to the user with a link to the personal data export file"},"ƒ: wp_privacy_process_personal_data_export_page":{"prefix":["wp_privacy_process_personal_data_export_page","wpppdep"],"body":"wp_privacy_process_personal_data_export_page( ${1:\\$response:array}, ${2:\\$exporter_index:int}, ${3:\\$email_address:string}, ${4:\\$page:int}, ${5:\\$request_id:int}, ${6:\\$send_as_email:bool}, ${7:\\$exporter_key:string} )","description":"Intercept personal data exporter page Ajax responses in order to assemble the personal data export file."},"ƒ: wp_privacy_process_personal_data_erasure_page":{"prefix":["wp_privacy_process_personal_data_erasure_page","wpppdep"],"body":"wp_privacy_process_personal_data_erasure_page( ${1:\\$response:array}, ${2:\\$eraser_index:int}, ${3:\\$email_address:string}, ${4:\\$page:int}, ${5:\\$request_id:int} )","description":"Mark erasure requests as completed after processing is finished."},"ƒ: wp_get_revision_ui_diff":{"prefix":["wp_get_revision_ui_diff","wgrud"],"body":"wp_get_revision_ui_diff( ${1:\\$post:WP_Post|int}, ${2:\\$compare_from:int}, ${3:\\$compare_to:int} )","description":"Get the revision UI diff."},"ƒ: wp_prepare_revisions_for_js":{"prefix":["wp_prepare_revisions_for_js","wprfj"],"body":"wp_prepare_revisions_for_js( ${1:\\$post:WP_Post|int}, ${2:\\$selected_revision_id:int}, ${3:\\$from:int|null} )","description":"Prepare revisions for JavaScript."},"ƒ: wp_print_revision_templates":{"prefix":["wp_print_revision_templates","wprt"],"body":"wp_print_revision_templates(  )","description":"Print JavaScript templates required for the revisions experience."},"ƒ: wp_get_db_schema":{"prefix":["wp_get_db_schema","wgds"],"body":"wp_get_db_schema( ${1:\\$scope:string}, ${2:\\$blog_id:int|null} )","description":"Retrieve the SQL for creating database tables."},"ƒ: populate_options":{"prefix":["populate_options","po"],"body":"populate_options( ${1:\\$options:array} )","description":"Create WordPress options and set the default values."},"ƒ: populate_roles":{"prefix":["populate_roles","pr"],"body":"populate_roles(  )","description":"Execute WordPress role creation for the various WordPress versions."},"ƒ: populate_roles_160":{"prefix":["populate_roles_160","pr1"],"body":"populate_roles_160(  )","description":"Create the roles for WordPress 2.0"},"ƒ: populate_roles_210":{"prefix":["populate_roles_210","pr2"],"body":"populate_roles_210(  )","description":"Create and modify WordPress roles for WordPress 2.1."},"ƒ: populate_roles_230":{"prefix":["populate_roles_230","pr2"],"body":"populate_roles_230(  )","description":"Create and modify WordPress roles for WordPress 2.3."},"ƒ: populate_roles_250":{"prefix":["populate_roles_250","pr2"],"body":"populate_roles_250(  )","description":"Create and modify WordPress roles for WordPress 2.5."},"ƒ: populate_roles_260":{"prefix":["populate_roles_260","pr2"],"body":"populate_roles_260(  )","description":"Create and modify WordPress roles for WordPress 2.6."},"ƒ: populate_roles_270":{"prefix":["populate_roles_270","pr2"],"body":"populate_roles_270(  )","description":"Create and modify WordPress roles for WordPress 2.7."},"ƒ: populate_roles_280":{"prefix":["populate_roles_280","pr2"],"body":"populate_roles_280(  )","description":"Create and modify WordPress roles for WordPress 2.8."},"ƒ: populate_roles_300":{"prefix":["populate_roles_300","pr3"],"body":"populate_roles_300(  )","description":"Create and modify WordPress roles for WordPress 3.0."},"ƒ: install_network":{"prefix":["install_network","in"],"body":"install_network(  )","description":"Install Network."},"ƒ: populate_network":{"prefix":["populate_network","pn"],"body":"populate_network( ${1:\\$network_id:int}, ${2:\\$domain:string}, ${3:\\$email:string}, ${4:\\$site_name:string}, ${5:\\$path:string}, ${6:\\$subdomain_install:bool} )","description":"Populate network settings."},"ƒ: populate_network_meta":{"prefix":["populate_network_meta","pnm"],"body":"populate_network_meta( ${1:\\$network_id:int}, ${2:\\$meta:array} )","description":"Creates WordPress network meta and sets the default values."},"ƒ: populate_site_meta":{"prefix":["populate_site_meta","psm"],"body":"populate_site_meta( ${1:\\$site_id:int}, ${2:\\$meta:array} )","description":"Creates WordPress site meta and sets the default values."},"ƒ: get_column_headers":{"prefix":["get_column_headers","gch"],"body":"get_column_headers( ${1:\\$screen:string|WP_Screen} )","description":"Get the column headers for a screen"},"ƒ: get_hidden_columns":{"prefix":["get_hidden_columns","ghc"],"body":"get_hidden_columns( ${1:\\$screen:string|WP_Screen} )","description":"Get a list of hidden columns."},"ƒ: meta_box_prefs":{"prefix":["meta_box_prefs","mbp"],"body":"meta_box_prefs( ${1:\\$screen:WP_Screen} )","description":"Prints the meta box preferences for screen meta."},"ƒ: get_hidden_meta_boxes":{"prefix":["get_hidden_meta_boxes","ghmb"],"body":"get_hidden_meta_boxes( ${1:\\$screen:string|WP_Screen} )","description":"Gets an array of IDs of hidden meta boxes."},"ƒ: add_screen_option":{"prefix":["add_screen_option","aso"],"body":"add_screen_option( ${1:\\$option:string}, ${2:\\$args:mixed} )","description":"Register and configure an admin screen option"},"ƒ: get_current_screen":{"prefix":["get_current_screen","gcs"],"body":"get_current_screen(  )","description":"Get the current screen object"},"ƒ: set_current_screen":{"prefix":["set_current_screen","scs"],"body":"set_current_screen( ${1:\\$hook_name:string|WP_Screen} )","description":"Set the current screen object"},"ƒ: category_exists":{"prefix":["category_exists","ce"],"body":"category_exists( ${1:\\$cat_name:int|string}, ${2:\\$category_parent:int|null} )","description":"Checks whether a category exists."},"ƒ: get_category_to_edit":{"prefix":["get_category_to_edit","gcte"],"body":"get_category_to_edit( ${1:\\$id:int} )","description":"Gets category object for given ID and 'edit' filter context."},"ƒ: wp_create_category":{"prefix":["wp_create_category","wcc"],"body":"wp_create_category( ${1:\\$cat_name:int|string}, ${2:\\$category_parent:int} )","description":"Adds a new category to the database if it does not already exist."},"ƒ: wp_create_categories":{"prefix":["wp_create_categories","wcc"],"body":"wp_create_categories( ${1:\\$categories:string[]}, ${2:\\$post_id:int} )","description":"Creates categories for the given post."},"ƒ: wp_insert_category":{"prefix":["wp_insert_category","wic"],"body":"wp_insert_category( ${1:\\$catarr:array}, ${2:\\$wp_error:bool} )","description":"Updates an existing Category or creates a new Category."},"ƒ: wp_update_category":{"prefix":["wp_update_category","wuc"],"body":"wp_update_category( ${1:\\$catarr:array} )","description":"Aliases wp_insert_category() with minimal args."},"ƒ: tag_exists":{"prefix":["tag_exists","te"],"body":"tag_exists( ${1:\\$tag_name:int|string} )","description":"Checks whether a post tag with a given name exists."},"ƒ: wp_create_tag":{"prefix":["wp_create_tag","wct"],"body":"wp_create_tag( ${1:\\$tag_name:int|string} )","description":"Adds a new tag to the database if it does not already exist."},"ƒ: get_tags_to_edit":{"prefix":["get_tags_to_edit","gtte"],"body":"get_tags_to_edit( ${1:\\$post_id:int}, ${2:\\$taxonomy:string} )","description":"Gets comma-separated list of tags available to edit."},"ƒ: get_terms_to_edit":{"prefix":["get_terms_to_edit","gtte"],"body":"get_terms_to_edit( ${1:\\$post_id:int}, ${2:\\$taxonomy:string} )","description":"Gets comma-separated list of terms available to edit for the given post ID."},"ƒ: wp_create_term":{"prefix":["wp_create_term","wct"],"body":"wp_create_term( ${1:\\$tag_name:string}, ${2:\\$taxonomy:string} )","description":"Adds a new term to the database if it does not already exist."},"ƒ: wp_category_checklist":{"prefix":["wp_category_checklist","wcc"],"body":"wp_category_checklist( ${1:\\$post_id:int}, ${2:\\$descendants_and_self:int}, ${3:\\$selected_cats:int[]|false}, ${4:\\$popular_cats:int[]|false}, ${5:\\$walker:Walker|null}, ${6:\\$checked_ontop:bool} )","description":"Outputs an unordered list of checkbox input elements labeled with category names."},"ƒ: wp_terms_checklist":{"prefix":["wp_terms_checklist","wtc"],"body":"wp_terms_checklist( ${1:\\$post_id:int}, ${2:\\$args:array|string} )","description":"Outputs an unordered list of checkbox input elements labelled with term names."},"ƒ: wp_popular_terms_checklist":{"prefix":["wp_popular_terms_checklist","wptc"],"body":"wp_popular_terms_checklist( ${1:\\$taxonomy:string}, ${2:\\$default_term:int}, ${3:\\$number:int}, ${4:\\$display:bool} )","description":"Retrieves a list of the most popular terms from the specified taxonomy."},"ƒ: wp_link_category_checklist":{"prefix":["wp_link_category_checklist","wlcc"],"body":"wp_link_category_checklist( ${1:\\$link_id:int} )","description":"Outputs a link category checklist element."},"ƒ: get_inline_data":{"prefix":["get_inline_data","gid"],"body":"get_inline_data( ${1:\\$post:WP_Post} )","description":"Adds hidden fields with the data for use in the inline editor for posts and pages."},"ƒ: wp_comment_reply":{"prefix":["wp_comment_reply","wcr"],"body":"wp_comment_reply( ${1:\\$position:int}, ${2:\\$checkbox:bool}, ${3:\\$mode:string}, ${4:\\$table_row:bool} )","description":"Outputs the in-line comment reply-to form in the Comments list table."},"ƒ: wp_comment_trashnotice":{"prefix":["wp_comment_trashnotice","wct"],"body":"wp_comment_trashnotice(  )","description":"Outputs 'undo move to Trash' text for comments."},"ƒ: list_meta":{"prefix":["list_meta","lm"],"body":"list_meta( ${1:\\$meta:array[]} )","description":"Outputs a post's public meta data in the Custom Fields meta box."},"ƒ: meta_form":{"prefix":["meta_form","mf"],"body":"meta_form( ${1:\\$post:WP_Post|null} )","description":"Prints the form in the Custom Fields meta box."},"ƒ: touch_time":{"prefix":["touch_time","tt"],"body":"touch_time( ${1:\\$edit:int|bool}, ${2:\\$for_post:int|bool}, ${3:\\$tab_index:int}, ${4:\\$multi:int|bool} )","description":"Prints out HTML form date elements for editing post or comment publish date."},"ƒ: page_template_dropdown":{"prefix":["page_template_dropdown","ptd"],"body":"page_template_dropdown( ${1:\\$default_template:string}, ${2:\\$post_type:string} )","description":"Prints out option HTML elements for the page templates drop-down."},"ƒ: parent_dropdown":{"prefix":["parent_dropdown","pd"],"body":"parent_dropdown( ${1:\\$default_page:int}, ${2:\\$parent_page:int}, ${3:\\$level:int}, ${4:\\$post:int|WP_Post|null} )","description":"Prints out option HTML elements for the page parents drop-down."},"ƒ: wp_dropdown_roles":{"prefix":["wp_dropdown_roles","wdr"],"body":"wp_dropdown_roles( ${1:\\$selected:string} )","description":"Prints out option HTML elements for role selectors."},"ƒ: wp_import_upload_form":{"prefix":["wp_import_upload_form","wiuf"],"body":"wp_import_upload_form( ${1:\\$action:string} )","description":"Outputs the form used by the importers to accept the data to be imported."},"ƒ: add_meta_box":{"prefix":["add_meta_box","amb"],"body":"add_meta_box( ${1:\\$id:string}, ${2:\\$title:string}, ${3:\\$callback:callable}, ${4:\\$screen:string|array|WP_Screen|null}, ${5:\\$context:string}, ${6:\\$priority:string}, ${7:\\$callback_args:array|null} )","description":"Adds a meta box to one or more screens."},"ƒ: do_block_editor_incompatible_meta_box":{"prefix":["do_block_editor_incompatible_meta_box","dbeimb"],"body":"do_block_editor_incompatible_meta_box( ${1:\\$data_object:mixed}, ${2:\\$box:array} )","description":"Renders a \"fake\" meta box with an information message, shown on the block editor, when an incompatible meta box is found."},"ƒ: do_meta_boxes":{"prefix":["do_meta_boxes","dmb"],"body":"do_meta_boxes( ${1:\\$screen:string|WP_Screen}, ${2:\\$context:string}, ${3:\\$data_object:mixed} )","description":"Meta-Box template function."},"ƒ: remove_meta_box":{"prefix":["remove_meta_box","rmb"],"body":"remove_meta_box( ${1:\\$id:string}, ${2:\\$screen:string|array|WP_Screen}, ${3:\\$context:string} )","description":"Removes a meta box from one or more screens."},"ƒ: do_accordion_sections":{"prefix":["do_accordion_sections","das"],"body":"do_accordion_sections( ${1:\\$screen:string|object}, ${2:\\$context:string}, ${3:\\$data_object:mixed} )","description":"Meta Box Accordion Template Function."},"ƒ: add_settings_section":{"prefix":["add_settings_section","ass"],"body":"add_settings_section( ${1:\\$id:string}, ${2:\\$title:string}, ${3:\\$callback:callable}, ${4:\\$page:string}, ${5:\\$args:array} )","description":"Adds a new section to a settings page."},"ƒ: add_settings_field":{"prefix":["add_settings_field","asf"],"body":"add_settings_field( ${1:\\$id:string}, ${2:\\$title:string}, ${3:\\$callback:callable}, ${4:\\$page:string}, ${5:\\$section:string}, ${6:\\$args:array} )","description":"Adds a new field to a section of a settings page."},"ƒ: do_settings_sections":{"prefix":["do_settings_sections","dss"],"body":"do_settings_sections( ${1:\\$page:string} )","description":"Prints out all settings sections added to a particular settings page."},"ƒ: do_settings_fields":{"prefix":["do_settings_fields","dsf"],"body":"do_settings_fields( ${1:\\$page:string}, ${2:\\$section:string} )","description":"Prints out the settings fields for a particular settings section."},"ƒ: add_settings_error":{"prefix":["add_settings_error","ase"],"body":"add_settings_error( ${1:\\$setting:string}, ${2:\\$code:string}, ${3:\\$message:string}, ${4:\\$type:string} )","description":"Registers a settings error to be displayed to the user."},"ƒ: get_settings_errors":{"prefix":["get_settings_errors","gse"],"body":"get_settings_errors( ${1:\\$setting:string}, ${2:\\$sanitize:bool} )","description":"Fetches settings errors registered by add_settings_error()."},"ƒ: settings_errors":{"prefix":["settings_errors","se"],"body":"settings_errors( ${1:\\$setting:string}, ${2:\\$sanitize:bool}, ${3:\\$hide_on_update:bool} )","description":"Displays settings errors registered by add_settings_error()."},"ƒ: find_posts_div":{"prefix":["find_posts_div","fpd"],"body":"find_posts_div( ${1:\\$found_action:string} )","description":"Outputs the modal window used for attaching media to posts or pages in the media-listing screen."},"ƒ: the_post_password":{"prefix":["the_post_password","tpp"],"body":"the_post_password(  )","description":"Displays the post password."},"ƒ: iframe_header":{"prefix":["iframe_header","ih"],"body":"iframe_header( ${1:\\$title:string}, ${2:\\$deprecated:bool} )","description":"Generic Iframe header for use with Thickbox."},"ƒ: iframe_footer":{"prefix":["iframe_footer"],"body":"iframe_footer(  )","description":"Generic Iframe footer for use with Thickbox."},"ƒ: get_post_states":{"prefix":["get_post_states","gps"],"body":"get_post_states( ${1:\\$post:WP_Post} )","description":"Retrieves an array of post states from a post."},"ƒ: get_media_states":{"prefix":["get_media_states","gms"],"body":"get_media_states( ${1:\\$post:WP_Post} )","description":"Retrieves an array of media states from an attachment."},"ƒ: compression_test":{"prefix":["compression_test","ct"],"body":"compression_test(  )","description":"Tests support for compressing JavaScript from PHP."},"ƒ: submit_button":{"prefix":["submit_button","sb"],"body":"submit_button( ${1:\\$text:string}, ${2:\\$type:string}, ${3:\\$name:string}, ${4:\\$wrap:bool}, ${5:\\$other_attributes:array|string} )","description":"Echoes a submit button, with provided text and appropriate class(es)."},"ƒ: get_submit_button":{"prefix":["get_submit_button","gsb"],"body":"get_submit_button( ${1:\\$text:string}, ${2:\\$type:string}, ${3:\\$name:string}, ${4:\\$wrap:bool}, ${5:\\$other_attributes:array|string} )","description":"Returns a submit button, with provided text and appropriate class."},"ƒ: convert_to_screen":{"prefix":["convert_to_screen","cts"],"body":"convert_to_screen( ${1:\\$hook_name:string} )","description":"Converts a screen string to a screen object."},"ƒ: wp_star_rating":{"prefix":["wp_star_rating","wsr"],"body":"wp_star_rating( ${1:\\$args:array} )","description":"Outputs a HTML element with a star rating for a given rating."},"ƒ: install_themes_feature_list":{"prefix":["install_themes_feature_list","itfl"],"body":"install_themes_feature_list(  )","description":"Retrieves the list of WordPress theme features (aka theme tags)."},"ƒ: install_theme_search_form":{"prefix":["install_theme_search_form","itsf"],"body":"install_theme_search_form( ${1:\\$type_selector:bool} )","description":"Displays search form for searching themes."},"ƒ: install_themes_dashboard":{"prefix":["install_themes_dashboard","itd"],"body":"install_themes_dashboard(  )","description":"Displays tags filter for themes."},"ƒ: install_themes_upload":{"prefix":["install_themes_upload","itu"],"body":"install_themes_upload(  )","description":"Displays a form to upload themes from zip files."},"ƒ: display_theme":{"prefix":["display_theme","dt"],"body":"display_theme( ${1:\\$theme:object} )","description":"Prints a theme on the Install Themes pages."},"ƒ: display_themes":{"prefix":["display_themes","dt"],"body":"display_themes(  )","description":"Displays theme content based on theme list."},"ƒ: install_theme_information":{"prefix":["install_theme_information","iti"],"body":"install_theme_information(  )","description":"Displays theme information in dialog box form."},"ƒ: delete_theme":{"prefix":["delete_theme","dt"],"body":"delete_theme( ${1:\\$stylesheet:string}, ${2:\\$redirect:string} )","description":"Removes a theme."},"ƒ: get_page_templates":{"prefix":["get_page_templates","gpt"],"body":"get_page_templates( ${1:\\$post:WP_Post|null|null}, ${2:\\$post_type:string} )","description":"Gets the page templates available in this theme."},"ƒ: theme_update_available":{"prefix":["theme_update_available","tua"],"body":"theme_update_available( ${1:\\$theme:WP_Theme} )","description":"Check if there is an update for a theme available."},"ƒ: get_theme_update_available":{"prefix":["get_theme_update_available","gtua"],"body":"get_theme_update_available( ${1:\\$theme:WP_Theme} )","description":"Retrieves the update link if there is a theme update available."},"ƒ: get_theme_feature_list":{"prefix":["get_theme_feature_list","gtfl"],"body":"get_theme_feature_list( ${1:\\$api:bool} )","description":"Retrieves list of WordPress theme features (aka theme tags)."},"ƒ: themes_api":{"prefix":["themes_api","ta"],"body":"themes_api( ${1:\\$action:string}, ${2:\\$args:array|object} )","description":"Retrieves theme installer pages from the WordPress.org Themes API."},"ƒ: wp_prepare_themes_for_js":{"prefix":["wp_prepare_themes_for_js","wptfj"],"body":"wp_prepare_themes_for_js( ${1:\\$themes:WP_Theme[]|null} )","description":"Prepares themes for JavaScript."},"ƒ: customize_themes_print_templates":{"prefix":["customize_themes_print_templates","ctpt"],"body":"customize_themes_print_templates(  )","description":"Prints JS templates for the theme-browsing UI in the Customizer."},"ƒ: is_theme_paused":{"prefix":["is_theme_paused","itp"],"body":"is_theme_paused( ${1:\\$theme:string} )","description":"Determines whether a theme is technically active but was paused while loading."},"ƒ: wp_get_theme_error":{"prefix":["wp_get_theme_error","wgte"],"body":"wp_get_theme_error( ${1:\\$theme:string} )","description":"Gets the error that was recorded for a paused theme."},"ƒ: resume_theme":{"prefix":["resume_theme","rt"],"body":"resume_theme( ${1:\\$theme:string}, ${2:\\$redirect:string} )","description":"Tries to resume a single theme."},"ƒ: paused_themes_notice":{"prefix":["paused_themes_notice","ptn"],"body":"paused_themes_notice(  )","description":"Renders an admin notice in case some themes have been paused due to errors."},"ƒ: translations_api":{"prefix":["translations_api","ta"],"body":"translations_api( ${1:\\$type:string}, ${2:\\$args:array|object|null} )","description":"Retrieve translations from WordPress Translation API."},"ƒ: wp_get_available_translations":{"prefix":["wp_get_available_translations","wgat"],"body":"wp_get_available_translations(  )","description":"Get available translations from the WordPress.org API."},"ƒ: wp_install_language_form":{"prefix":["wp_install_language_form","wilf"],"body":"wp_install_language_form( ${1:\\$languages:array[]} )","description":"Output the select form for the language selection on the installation screen."},"ƒ: wp_download_language_pack":{"prefix":["wp_download_language_pack","wdlp"],"body":"wp_download_language_pack( ${1:\\$download:string} )","description":"Download a language pack."},"ƒ: wp_can_install_language_pack":{"prefix":["wp_can_install_language_pack","wcilp"],"body":"wp_can_install_language_pack(  )","description":"Check if WordPress has access to the filesystem without asking for credentials."},"ƒ: update_core":{"prefix":["update_core","uc"],"body":"update_core( ${1:\\$from:string}, ${2:\\$to:string} )","description":"Upgrades the core of WordPress."},"ƒ: get_preferred_from_update_core":{"prefix":["get_preferred_from_update_core","gpfuc"],"body":"get_preferred_from_update_core(  )","description":"Selects the first update version from the update_core option."},"ƒ: get_core_updates":{"prefix":["get_core_updates","gcu"],"body":"get_core_updates( ${1:\\$options:array} )","description":"Gets available core updates."},"ƒ: find_core_auto_update":{"prefix":["find_core_auto_update","fcau"],"body":"find_core_auto_update(  )","description":"Gets the best available (and enabled) Auto-Update for WordPress core."},"ƒ: get_core_checksums":{"prefix":["get_core_checksums","gcc"],"body":"get_core_checksums( ${1:\\$version:string}, ${2:\\$locale:string} )","description":"Gets and caches the checksums for the given version of WordPress."},"ƒ: dismiss_core_update":{"prefix":["dismiss_core_update","dcu"],"body":"dismiss_core_update( ${1:\\$update:object} )","description":"Dismisses core update."},"ƒ: undismiss_core_update":{"prefix":["undismiss_core_update","ucu"],"body":"undismiss_core_update( ${1:\\$version:string}, ${2:\\$locale:string} )","description":"Undismisses core update."},"ƒ: find_core_update":{"prefix":["find_core_update","fcu"],"body":"find_core_update( ${1:\\$version:string}, ${2:\\$locale:string} )","description":"Finds the available update for WordPress core."},"ƒ: core_update_footer":{"prefix":["core_update_footer","cuf"],"body":"core_update_footer( ${1:\\$msg:string} )","description":"Returns core update footer message."},"ƒ: update_nag":{"prefix":["update_nag","un"],"body":"update_nag(  )","description":"Returns core update notification message."},"ƒ: update_right_now_message":{"prefix":["update_right_now_message","urnm"],"body":"update_right_now_message(  )","description":"Displays WordPress version and active theme in the 'At a Glance' dashboard widget."},"ƒ: get_plugin_updates":{"prefix":["get_plugin_updates","gpu"],"body":"get_plugin_updates(  )","description":"Retrieves plugins with updates available."},"ƒ: wp_plugin_update_rows":{"prefix":["wp_plugin_update_rows","wpur"],"body":"wp_plugin_update_rows(  )","description":"Adds a callback to display update information for plugins with updates available."},"ƒ: wp_plugin_update_row":{"prefix":["wp_plugin_update_row","wpur"],"body":"wp_plugin_update_row( ${1:\\$file:string}, ${2:\\$plugin_data:array} )","description":"Displays update information for a plugin."},"ƒ: get_theme_updates":{"prefix":["get_theme_updates","gtu"],"body":"get_theme_updates(  )","description":"Retrieves themes with updates available."},"ƒ: wp_theme_update_rows":{"prefix":["wp_theme_update_rows","wtur"],"body":"wp_theme_update_rows(  )","description":"Adds a callback to display update information for themes with updates available."},"ƒ: wp_theme_update_row":{"prefix":["wp_theme_update_row","wtur"],"body":"wp_theme_update_row( ${1:\\$theme_key:string}, ${2:\\$theme:WP_Theme} )","description":"Displays update information for a theme."},"ƒ: maintenance_nag":{"prefix":["maintenance_nag","mn"],"body":"maintenance_nag(  )","description":"Displays maintenance nag HTML message."},"ƒ: wp_print_admin_notice_templates":{"prefix":["wp_print_admin_notice_templates","wpant"],"body":"wp_print_admin_notice_templates(  )","description":"Prints the JavaScript templates for update admin notices."},"ƒ: wp_print_update_row_templates":{"prefix":["wp_print_update_row_templates","wpurt"],"body":"wp_print_update_row_templates(  )","description":"Prints the JavaScript templates for update and deletion rows in list tables."},"ƒ: wp_recovery_mode_nag":{"prefix":["wp_recovery_mode_nag","wrmn"],"body":"wp_recovery_mode_nag(  )","description":"Displays a notice when the user is in recovery mode."},"ƒ: wp_is_auto_update_enabled_for_type":{"prefix":["wp_is_auto_update_enabled_for_type","wiaueft"],"body":"wp_is_auto_update_enabled_for_type( ${1:\\$type:string} )","description":"Checks whether auto-updates are enabled."},"ƒ: wp_is_auto_update_forced_for_item":{"prefix":["wp_is_auto_update_forced_for_item","wiauffi"],"body":"wp_is_auto_update_forced_for_item( ${1:\\$type:string}, ${2:\\$update:bool|null}, ${3:\\$item:object} )","description":"Checks whether auto-updates are forced for an item."},"ƒ: wp_get_auto_update_message":{"prefix":["wp_get_auto_update_message","wgaum"],"body":"wp_get_auto_update_message(  )","description":"Determines the appropriate auto-update message to be displayed."},"ƒ: wp_install":{"prefix":["wp_install","wi"],"body":"wp_install( ${1:\\$blog_title:string}, ${2:\\$user_name:string}, ${3:\\$user_email:string}, ${4:\\$is_public:bool}, ${5:\\$deprecated:string}, ${6:\\$user_password:string}, ${7:\\$language:string} )","description":"Installs the site."},"ƒ: wp_install_defaults":{"prefix":["wp_install_defaults","wid"],"body":"wp_install_defaults( ${1:\\$user_id:int} )","description":"Creates the initial content for a newly-installed site."},"ƒ: wp_install_maybe_enable_pretty_permalinks":{"prefix":["wp_install_maybe_enable_pretty_permalinks","wimepp"],"body":"wp_install_maybe_enable_pretty_permalinks(  )","description":"Maybe enable pretty permalinks on installation."},"ƒ: wp_new_blog_notification":{"prefix":["wp_new_blog_notification","wnbn"],"body":"wp_new_blog_notification( ${1:\\$blog_title:string}, ${2:\\$blog_url:string}, ${3:\\$user_id:int}, ${4:\\$password:string} )","description":"Notifies the site admin that the installation of WordPress is complete."},"ƒ: wp_upgrade":{"prefix":["wp_upgrade","wu"],"body":"wp_upgrade(  )","description":"Runs WordPress Upgrade functions."},"ƒ: upgrade_network":{"prefix":["upgrade_network","un"],"body":"upgrade_network(  )","description":"Executes network-level upgrade routines."},"ƒ: maybe_create_table":{"prefix":["maybe_create_table","mct"],"body":"maybe_create_table( ${1:\\$table_name:string}, ${2:\\$create_ddl:string} )","description":"Creates a table in the database, if it doesn't already exist."},"ƒ: drop_index":{"prefix":["drop_index","di"],"body":"drop_index( ${1:\\$table:string}, ${2:\\$index:string} )","description":"Drops a specified index from a table."},"ƒ: add_clean_index":{"prefix":["add_clean_index","aci"],"body":"add_clean_index( ${1:\\$table:string}, ${2:\\$index:string} )","description":"Adds an index to a specified table."},"ƒ: maybe_add_column":{"prefix":["maybe_add_column","mac"],"body":"maybe_add_column( ${1:\\$table_name:string}, ${2:\\$column_name:string}, ${3:\\$create_ddl:string} )","description":"Adds column to a database table, if it doesn't already exist."},"ƒ: maybe_convert_table_to_utf8mb4":{"prefix":["maybe_convert_table_to_utf8mb4","mcttu"],"body":"maybe_convert_table_to_utf8mb4( ${1:\\$table:string} )","description":"If a table only contains utf8 or utf8mb4 columns, convert it to utf8mb4."},"ƒ: get_alloptions_110":{"prefix":["get_alloptions_110","ga1"],"body":"get_alloptions_110(  )","description":"Retrieve all options as it was for 1.2."},"ƒ: deslash":{"prefix":["deslash"],"body":"deslash( ${1:\\$content:string} )","description":"Filters for content to remove unnecessary slashes."},"ƒ: dbDelta":{"prefix":["dbDelta"],"body":"dbDelta( ${1:\\$queries:string[]|string}, ${2:\\$execute:bool} )","description":"Modifies the database based on specified SQL statements."},"ƒ: make_db_current":{"prefix":["make_db_current","mdc"],"body":"make_db_current( ${1:\\$tables:string} )","description":"Updates the database tables to a new schema."},"ƒ: make_db_current_silent":{"prefix":["make_db_current_silent","mdcs"],"body":"make_db_current_silent( ${1:\\$tables:string} )","description":"Updates the database tables to a new schema, but without displaying results."},"ƒ: make_site_theme_from_oldschool":{"prefix":["make_site_theme_from_oldschool","mstfo"],"body":"make_site_theme_from_oldschool( ${1:\\$theme_name:string}, ${2:\\$template:string} )","description":"Creates a site theme from an existing theme."},"ƒ: make_site_theme_from_default":{"prefix":["make_site_theme_from_default","mstfd"],"body":"make_site_theme_from_default( ${1:\\$theme_name:string}, ${2:\\$template:string} )","description":"Creates a site theme from the default theme."},"ƒ: make_site_theme":{"prefix":["make_site_theme","mst"],"body":"make_site_theme(  )","description":"Creates a site theme."},"ƒ: translate_level_to_role":{"prefix":["translate_level_to_role","tltr"],"body":"translate_level_to_role( ${1:\\$level:int} )","description":"Translate user level to user role name."},"ƒ: wp_check_mysql_version":{"prefix":["wp_check_mysql_version","wcmv"],"body":"wp_check_mysql_version(  )","description":"Checks the version of the installed MySQL binary."},"ƒ: maybe_disable_automattic_widgets":{"prefix":["maybe_disable_automattic_widgets","mdaw"],"body":"maybe_disable_automattic_widgets(  )","description":"Disables the Automattic widgets plugin, which was merged into core."},"ƒ: maybe_disable_link_manager":{"prefix":["maybe_disable_link_manager","mdlm"],"body":"maybe_disable_link_manager(  )","description":"Disables the Link Manager on upgrade if, at the time of upgrade, no links exist in the DB."},"ƒ: pre_schema_upgrade":{"prefix":["pre_schema_upgrade","psu"],"body":"pre_schema_upgrade(  )","description":"Runs before the schema is upgraded."},"ƒ: wp_should_upgrade_global_tables":{"prefix":["wp_should_upgrade_global_tables","wsugt"],"body":"wp_should_upgrade_global_tables(  )","description":"Determine if global tables should be upgraded."},"ƒ: add_user":{"prefix":["add_user","au"],"body":"add_user(  )","description":"Creates a new user from the \"Users\" form using $_POST information."},"ƒ: edit_user":{"prefix":["edit_user","eu"],"body":"edit_user( ${1:\\$user_id:int} )","description":"Edit user settings based on contents of $_POST"},"ƒ: get_editable_roles":{"prefix":["get_editable_roles","ger"],"body":"get_editable_roles(  )","description":"Fetch a filtered list of user roles that the current user is allowed to edit."},"ƒ: get_user_to_edit":{"prefix":["get_user_to_edit","gute"],"body":"get_user_to_edit( ${1:\\$user_id:int} )","description":"Retrieve user data and filter it."},"ƒ: get_users_drafts":{"prefix":["get_users_drafts","gud"],"body":"get_users_drafts( ${1:\\$user_id:int} )","description":"Retrieve the user's drafts."},"ƒ: wp_delete_user":{"prefix":["wp_delete_user","wdu"],"body":"wp_delete_user( ${1:\\$id:int}, ${2:\\$reassign:int|null} )","description":"Delete user and optionally reassign posts and links to another user."},"ƒ: wp_revoke_user":{"prefix":["wp_revoke_user","wru"],"body":"wp_revoke_user( ${1:\\$id:int} )","description":"Remove all capabilities from user."},"ƒ: default_password_nag_handler":{"prefix":["default_password_nag_handler","dpnh"],"body":"default_password_nag_handler( ${1:\\$errors:false} )","description":""},"ƒ: default_password_nag_edit_user":{"prefix":["default_password_nag_edit_user","dpneu"],"body":"default_password_nag_edit_user( ${1:\\$user_ID:int}, ${2:\\$old_data:WP_User} )","description":""},"ƒ: default_password_nag":{"prefix":["default_password_nag","dpn"],"body":"default_password_nag(  )","description":""},"ƒ: use_ssl_preference":{"prefix":["use_ssl_preference","usp"],"body":"use_ssl_preference( ${1:\\$user:WP_User} )","description":"Optional SSL preference that can be turned on by hooking to the 'personal_options' action."},"ƒ: admin_created_user_email":{"prefix":["admin_created_user_email","acue"],"body":"admin_created_user_email( ${1:\\$text:string} )","description":""},"ƒ: wp_is_authorize_application_password_request_valid":{"prefix":["wp_is_authorize_application_password_request_valid","wiaaprv"],"body":"wp_is_authorize_application_password_request_valid( ${1:\\$request:array}, ${2:\\$user:WP_User} )","description":"Checks if the Authorize Application Password request is valid."},"ƒ: wp_is_authorize_application_redirect_url_valid":{"prefix":["wp_is_authorize_application_redirect_url_valid","wiaaruv"],"body":"wp_is_authorize_application_redirect_url_valid( ${1:\\$url:string} )","description":"Validates the redirect URL protocol scheme. The protocol can be anything except `http` and `javascript`."},"ƒ: wp_list_widgets":{"prefix":["wp_list_widgets","wlw"],"body":"wp_list_widgets(  )","description":"Display list of the available widgets."},"ƒ: wp_list_widget_controls":{"prefix":["wp_list_widget_controls","wlwc"],"body":"wp_list_widget_controls( ${1:\\$sidebar:string}, ${2:\\$sidebar_name:string} )","description":"Show the widgets and their settings for a sidebar."},"ƒ: wp_list_widget_controls_dynamic_sidebar":{"prefix":["wp_list_widget_controls_dynamic_sidebar","wlwcds"],"body":"wp_list_widget_controls_dynamic_sidebar( ${1:\\$params:array} )","description":"Retrieves the widget control arguments."},"ƒ: next_widget_id_number":{"prefix":["next_widget_id_number","nwin"],"body":"next_widget_id_number( ${1:\\$id_base:string} )","description":""},"ƒ: wp_widget_control":{"prefix":["wp_widget_control","wwc"],"body":"wp_widget_control( ${1:\\$sidebar_args:array} )","description":"Meta widget used to display the control form for a widget."},"ƒ: wp_widgets_access_body_class":{"prefix":["wp_widgets_access_body_class","wwabc"],"body":"wp_widgets_access_body_class( ${1:\\$classes:string} )","description":""},"ƒ: wp_admin_bar_render":{"prefix":["wp_admin_bar_render","wabr"],"body":"wp_admin_bar_render(  )","description":"Renders the admin bar to the page based on the $wp_admin_bar->menu member var."},"ƒ: wp_admin_bar_wp_menu":{"prefix":["wp_admin_bar_wp_menu","wabwm"],"body":"wp_admin_bar_wp_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the WordPress logo menu."},"ƒ: wp_admin_bar_sidebar_toggle":{"prefix":["wp_admin_bar_sidebar_toggle","wabst"],"body":"wp_admin_bar_sidebar_toggle( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the sidebar toggle button."},"ƒ: wp_admin_bar_my_account_item":{"prefix":["wp_admin_bar_my_account_item","wabmai"],"body":"wp_admin_bar_my_account_item( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"My Account\" item."},"ƒ: wp_admin_bar_my_account_menu":{"prefix":["wp_admin_bar_my_account_menu","wabmam"],"body":"wp_admin_bar_my_account_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"My Account\" submenu items."},"ƒ: wp_admin_bar_site_menu":{"prefix":["wp_admin_bar_site_menu","wabsm"],"body":"wp_admin_bar_site_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"Site Name\" menu."},"ƒ: wp_admin_bar_edit_site_menu":{"prefix":["wp_admin_bar_edit_site_menu","wabesm"],"body":"wp_admin_bar_edit_site_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"Edit Site\" link to the Toolbar."},"ƒ: wp_admin_bar_customize_menu":{"prefix":["wp_admin_bar_customize_menu","wabcm"],"body":"wp_admin_bar_customize_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"Customize\" link to the Toolbar."},"ƒ: wp_admin_bar_my_sites_menu":{"prefix":["wp_admin_bar_my_sites_menu","wabmsm"],"body":"wp_admin_bar_my_sites_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds the \"My Sites/[Site Name]\" menu and all submenus."},"ƒ: wp_admin_bar_shortlink_menu":{"prefix":["wp_admin_bar_shortlink_menu","wabsm"],"body":"wp_admin_bar_shortlink_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Provides a shortlink."},"ƒ: wp_admin_bar_edit_menu":{"prefix":["wp_admin_bar_edit_menu","wabem"],"body":"wp_admin_bar_edit_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Provides an edit link for posts and terms."},"ƒ: wp_admin_bar_new_content_menu":{"prefix":["wp_admin_bar_new_content_menu","wabncm"],"body":"wp_admin_bar_new_content_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds \"Add New\" menu."},"ƒ: wp_admin_bar_comments_menu":{"prefix":["wp_admin_bar_comments_menu","wabcm"],"body":"wp_admin_bar_comments_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds edit comments link with awaiting moderation count bubble."},"ƒ: wp_admin_bar_appearance_menu":{"prefix":["wp_admin_bar_appearance_menu","wabam"],"body":"wp_admin_bar_appearance_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds appearance submenu items to the \"Site Name\" menu."},"ƒ: wp_admin_bar_updates_menu":{"prefix":["wp_admin_bar_updates_menu","wabum"],"body":"wp_admin_bar_updates_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Provides an update link if theme/plugin/core updates are available."},"ƒ: wp_admin_bar_search_menu":{"prefix":["wp_admin_bar_search_menu","wabsm"],"body":"wp_admin_bar_search_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds search form."},"ƒ: wp_admin_bar_recovery_mode_menu":{"prefix":["wp_admin_bar_recovery_mode_menu","wabrmm"],"body":"wp_admin_bar_recovery_mode_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds a link to exit recovery mode when Recovery Mode is active."},"ƒ: wp_admin_bar_add_secondary_groups":{"prefix":["wp_admin_bar_add_secondary_groups","wabasg"],"body":"wp_admin_bar_add_secondary_groups( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Adds secondary menus."},"ƒ: wp_enqueue_admin_bar_header_styles":{"prefix":["wp_enqueue_admin_bar_header_styles","weabhs"],"body":"wp_enqueue_admin_bar_header_styles(  )","description":"Enqueues inline style to hide the admin bar when printing."},"ƒ: wp_enqueue_admin_bar_bump_styles":{"prefix":["wp_enqueue_admin_bar_bump_styles","weabbs"],"body":"wp_enqueue_admin_bar_bump_styles(  )","description":"Enqueues inline bump styles to make room for the admin bar."},"ƒ: show_admin_bar":{"prefix":["show_admin_bar","sab"],"body":"show_admin_bar( ${1:\\$show:bool} )","description":"Sets the display status of the admin bar."},"ƒ: is_admin_bar_showing":{"prefix":["is_admin_bar_showing","iabs"],"body":"is_admin_bar_showing(  )","description":"Determines whether the admin bar should be showing."},"ƒ: get_the_author":{"prefix":["get_the_author","gta"],"body":"get_the_author( ${1:\\$deprecated:string} )","description":"Retrieves the author of the current post."},"ƒ: the_author":{"prefix":["the_author","ta"],"body":"the_author( ${1:\\$deprecated:string}, ${2:\\$deprecated_echo:bool} )","description":"Displays the name of the author of the current post."},"ƒ: get_the_modified_author":{"prefix":["get_the_modified_author","gtma"],"body":"get_the_modified_author(  )","description":"Retrieves the author who last edited the current post."},"ƒ: the_modified_author":{"prefix":["the_modified_author","tma"],"body":"the_modified_author(  )","description":"Displays the name of the author who last edited the current post, if the author's ID is available."},"ƒ: get_the_author_meta":{"prefix":["get_the_author_meta","gtam"],"body":"get_the_author_meta( ${1:\\$field:string}, ${2:\\$user_id:int|false} )","description":"Retrieves the requested data of the author of the current post."},"ƒ: the_author_meta":{"prefix":["the_author_meta","tam"],"body":"the_author_meta( ${1:\\$field:string}, ${2:\\$user_id:int|false} )","description":"Outputs the field from the user's DB object. Defaults to current post's author."},"ƒ: get_the_author_link":{"prefix":["get_the_author_link","gtal"],"body":"get_the_author_link(  )","description":"Retrieves either author's link or author's name."},"ƒ: the_author_link":{"prefix":["the_author_link","tal"],"body":"the_author_link(  )","description":"Displays either author's link or author's name."},"ƒ: get_the_author_posts":{"prefix":["get_the_author_posts","gtap"],"body":"get_the_author_posts(  )","description":"Retrieves the number of posts by the author of the current post."},"ƒ: the_author_posts":{"prefix":["the_author_posts","tap"],"body":"the_author_posts(  )","description":"Displays the number of posts by the author of the current post."},"ƒ: get_the_author_posts_link":{"prefix":["get_the_author_posts_link","gtapl"],"body":"get_the_author_posts_link(  )","description":"Retrieves an HTML link to the author page of the current post's author."},"ƒ: the_author_posts_link":{"prefix":["the_author_posts_link","tapl"],"body":"the_author_posts_link( ${1:\\$deprecated:string} )","description":"Displays an HTML link to the author page of the current post's author."},"ƒ: get_author_posts_url":{"prefix":["get_author_posts_url","gapu"],"body":"get_author_posts_url( ${1:\\$author_id:int}, ${2:\\$author_nicename:string} )","description":"Retrieves the URL to the author page for the user with the ID provided."},"ƒ: wp_list_authors":{"prefix":["wp_list_authors","wla"],"body":"wp_list_authors( ${1:\\$args:string|array} )","description":"Lists all the authors of the site, with several options available."},"ƒ: is_multi_author":{"prefix":["is_multi_author","ima"],"body":"is_multi_author(  )","description":"Determines whether this site has more than one author."},"ƒ: register_block_bindings_source":{"prefix":["register_block_bindings_source","rbbs"],"body":"register_block_bindings_source( ${1:\\$source_name:string}, ${2:\\$source_properties:array} )","description":"Registers a new block bindings source."},"ƒ: unregister_block_bindings_source":{"prefix":["unregister_block_bindings_source","ubbs"],"body":"unregister_block_bindings_source( ${1:\\$source_name:string} )","description":"Unregisters a block bindings source."},"ƒ: get_all_registered_block_bindings_sources":{"prefix":["get_all_registered_block_bindings_sources","garbbs"],"body":"get_all_registered_block_bindings_sources(  )","description":"Retrieves the list of all registered block bindings sources."},"ƒ: get_block_bindings_source":{"prefix":["get_block_bindings_source","gbbs"],"body":"get_block_bindings_source( ${1:\\$source_name:string} )","description":"Retrieves a registered block bindings source."},"ƒ: get_default_block_categories":{"prefix":["get_default_block_categories","gdbc"],"body":"get_default_block_categories(  )","description":"Returns the list of default categories for block types."},"ƒ: get_block_categories":{"prefix":["get_block_categories","gbc"],"body":"get_block_categories( ${1:\\$post_or_block_editor_context:WP_Post|WP_Block_Editor_Context} )","description":"Returns all the categories for block types that will be shown in the block editor."},"ƒ: get_allowed_block_types":{"prefix":["get_allowed_block_types","gabt"],"body":"get_allowed_block_types( ${1:\\$block_editor_context:WP_Block_Editor_Context} )","description":"Gets the list of allowed block types to use in the block editor."},"ƒ: get_default_block_editor_settings":{"prefix":["get_default_block_editor_settings","gdbes"],"body":"get_default_block_editor_settings(  )","description":"Returns the default block editor settings."},"ƒ: get_legacy_widget_block_editor_settings":{"prefix":["get_legacy_widget_block_editor_settings","glwbes"],"body":"get_legacy_widget_block_editor_settings(  )","description":"Returns the block editor settings needed to use the Legacy Widget block which is not registered by default."},"ƒ: wp_get_first_block":{"prefix":["wp_get_first_block","wgfb"],"body":"wp_get_first_block( ${1:\\$blocks:array}, ${2:\\$block_name:string} )","description":"Finds the first occurrence of a specific block in an array of blocks."},"ƒ: get_block_editor_settings":{"prefix":["get_block_editor_settings","gbes"],"body":"get_block_editor_settings( ${1:\\$custom_settings:array}, ${2:\\$block_editor_context:WP_Block_Editor_Context} )","description":"Returns the contextualized block editor settings for a selected editor context."},"ƒ: block_editor_rest_api_preload":{"prefix":["block_editor_rest_api_preload","berap"],"body":"block_editor_rest_api_preload( ${1:\\$preload_paths:(string|string[])[]}, ${2:\\$block_editor_context:WP_Block_Editor_Context} )","description":"Preloads common data used with the block editor by specifying an array of REST API paths that will be preloaded for a given block editor context."},"ƒ: get_block_editor_theme_styles":{"prefix":["get_block_editor_theme_styles","gbets"],"body":"get_block_editor_theme_styles(  )","description":"Creates an array of theme styles to load into the block editor."},"ƒ: get_classic_theme_supports_block_editor_settings":{"prefix":["get_classic_theme_supports_block_editor_settings","gctsbes"],"body":"get_classic_theme_supports_block_editor_settings(  )","description":"Returns the classic theme supports settings for block editor."},"ƒ: wp_initialize_site_preview_hooks":{"prefix":["wp_initialize_site_preview_hooks","wisph"],"body":"wp_initialize_site_preview_hooks(  )","description":"Initialize site preview."},"ƒ: wp_get_block_style_variation_name_from_class":{"prefix":["wp_get_block_style_variation_name_from_class","wgbsvnfc"],"body":"wp_get_block_style_variation_name_from_class( ${1:\\$class_string:string} )","description":"Determines the block style variation names within a CSS class string."},"ƒ: wp_render_elements_class_name":{"prefix":["wp_render_elements_class_name","wrecn"],"body":"wp_render_elements_class_name( ${1:\\$block_content:string}, ${2:\\$block:array} )","description":"Ensure the elements block support class name generated, and added to block attributes, in the `render_block_data` filter gets applied to the block's markup."},"ƒ: wp_typography_get_preset_inline_style_value":{"prefix":["wp_typography_get_preset_inline_style_value","wtgpisv"],"body":"wp_typography_get_preset_inline_style_value( ${1:\\$style_value:string}, ${2:\\$css_property:string} )","description":"Generates an inline style value for a typography feature e.g. text decoration, text transform, and font style."},"ƒ: wp_render_typography_support":{"prefix":["wp_render_typography_support","wrts"],"body":"wp_render_typography_support( ${1:\\$block_content:string}, ${2:\\$block:array} )","description":"Renders typography styles/content to the block wrapper."},"ƒ: wp_get_typography_value_and_unit":{"prefix":["wp_get_typography_value_and_unit","wgtvau"],"body":"wp_get_typography_value_and_unit( ${1:\\$raw_value:string|int|float}, ${2:\\$options:array} )","description":"Checks a string for a unit and value and returns an array consisting of `'value'` and `'unit'`, e.g. array( '42', 'rem' )."},"ƒ: wp_get_typography_font_size_value":{"prefix":["wp_get_typography_font_size_value","wgtfsv"],"body":"wp_get_typography_font_size_value( ${1:\\$preset:array}, ${2:\\$settings:bool|array} )","description":"Returns a font-size value based on a given font-size preset."},"ƒ: get_block_theme_folders":{"prefix":["get_block_theme_folders","gbtf"],"body":"get_block_theme_folders( ${1:\\$theme_stylesheet:string|null} )","description":"For backward compatibility reasons, block themes might be using block-templates or block-template-parts, this function ensures we fallback to these folders properly."},"ƒ: get_allowed_block_template_part_areas":{"prefix":["get_allowed_block_template_part_areas","gabtpa"],"body":"get_allowed_block_template_part_areas(  )","description":"Returns a filtered list of allowed area values for template parts."},"ƒ: get_default_block_template_types":{"prefix":["get_default_block_template_types","gdbtt"],"body":"get_default_block_template_types(  )","description":"Returns a filtered list of default template types, containing their localized titles and descriptions."},"ƒ: get_block_templates":{"prefix":["get_block_templates","gbt"],"body":"get_block_templates( ${1:\\$query:array}, ${2:\\$template_type:string} )","description":"Retrieves a list of unified template objects based on a query."},"ƒ: get_block_template":{"prefix":["get_block_template","gbt"],"body":"get_block_template( ${1:\\$id:string}, ${2:\\$template_type:string} )","description":"Retrieves a single unified template object using its id."},"ƒ: get_block_file_template":{"prefix":["get_block_file_template","gbft"],"body":"get_block_file_template( ${1:\\$id:string}, ${2:\\$template_type:string} )","description":"Retrieves a unified template object based on a theme file."},"ƒ: block_template_part":{"prefix":["block_template_part","btp"],"body":"block_template_part( ${1:\\$part:string} )","description":"Prints a block template part."},"ƒ: block_header_area":{"prefix":["block_header_area","bha"],"body":"block_header_area(  )","description":"Prints the header block template part."},"ƒ: block_footer_area":{"prefix":["block_footer_area","bfa"],"body":"block_footer_area(  )","description":"Prints the footer block template part."},"ƒ: wp_is_theme_directory_ignored":{"prefix":["wp_is_theme_directory_ignored","witdi"],"body":"wp_is_theme_directory_ignored( ${1:\\$path:string} )","description":"Determines whether a theme directory should be ignored during export."},"ƒ: wp_generate_block_templates_export_file":{"prefix":["wp_generate_block_templates_export_file","wgbtef"],"body":"wp_generate_block_templates_export_file(  )","description":"Creates an export of the current templates and template parts from the site editor at the specified path in a ZIP file."},"ƒ: get_template_hierarchy":{"prefix":["get_template_hierarchy","gth"],"body":"get_template_hierarchy( ${1:\\$slug:string}, ${2:\\$is_custom:bool}, ${3:\\$template_prefix:string} )","description":"Gets the template hierarchy for the given template slug to be created."},"ƒ: wp_render_empty_block_template_warning":{"prefix":["wp_render_empty_block_template_warning","wrebtw"],"body":"wp_render_empty_block_template_warning( ${1:\\$block_template:WP_Block_Template} )","description":"Renders a warning screen for empty block templates."},"ƒ: locate_block_template":{"prefix":["locate_block_template","lbt"],"body":"locate_block_template( ${1:\\$template:string}, ${2:\\$type:string}, ${3:\\$templates:string[]} )","description":"Finds a block template with equal or higher specificity than a given PHP template file."},"ƒ: register_block_template":{"prefix":["register_block_template","rbt"],"body":"register_block_template( ${1:\\$template_name:string}, ${2:\\$args:array|string} )","description":"Register a block template."},"ƒ: unregister_block_template":{"prefix":["unregister_block_template","ubt"],"body":"unregister_block_template( ${1:\\$template_name:string} )","description":"Unregister a block template."},"ƒ: render_block_core_archives":{"prefix":["render_block_core_archives","rbca"],"body":"render_block_core_archives( ${1:\\$attributes:array} )","description":"Renders the `core/archives` block on server."},"ƒ: register_block_core_archives":{"prefix":["register_block_core_archives","rbca"],"body":"register_block_core_archives(  )","description":"Register archives block."},"ƒ: render_block_core_avatar":{"prefix":["render_block_core_avatar","rbca"],"body":"render_block_core_avatar( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/avatar` block on the server."},"ƒ: get_block_core_avatar_border_attributes":{"prefix":["get_block_core_avatar_border_attributes","gbcaba"],"body":"get_block_core_avatar_border_attributes( ${1:\\$attributes:array} )","description":"Generates class names and styles to apply the border support styles for the Avatar block."},"ƒ: register_block_core_avatar":{"prefix":["register_block_core_avatar","rbca"],"body":"register_block_core_avatar(  )","description":"Registers the `core/avatar` block on the server."},"ƒ: render_block_core_block":{"prefix":["render_block_core_block","rbcb"],"body":"render_block_core_block( ${1:\\$attributes:array} )","description":"Renders the `core/block` block on server."},"ƒ: register_block_core_block":{"prefix":["register_block_core_block","rbcb"],"body":"register_block_core_block(  )","description":"Registers the `core/block` block."},"ƒ: render_block_core_button":{"prefix":["render_block_core_button","rbcb"],"body":"render_block_core_button( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/button` block on the server,"},"ƒ: register_block_core_button":{"prefix":["register_block_core_button","rbcb"],"body":"register_block_core_button(  )","description":"Registers the `core/button` block on server."},"ƒ: render_block_core_calendar":{"prefix":["render_block_core_calendar","rbcc"],"body":"render_block_core_calendar( ${1:\\$attributes:array} )","description":"Renders the `core/calendar` block on server."},"ƒ: register_block_core_calendar":{"prefix":["register_block_core_calendar","rbcc"],"body":"register_block_core_calendar(  )","description":"Registers the `core/calendar` block on server."},"ƒ: block_core_calendar_has_published_posts":{"prefix":["block_core_calendar_has_published_posts","bcchpp"],"body":"block_core_calendar_has_published_posts(  )","description":"Returns whether or not there are any published posts."},"ƒ: block_core_calendar_update_has_published_posts":{"prefix":["block_core_calendar_update_has_published_posts","bccuhpp"],"body":"block_core_calendar_update_has_published_posts(  )","description":"Queries the database for any published post and saves a flag whether any published post exists or not."},"ƒ: block_core_calendar_update_has_published_post_on_delete":{"prefix":["block_core_calendar_update_has_published_post_on_delete","bccuhppod"],"body":"block_core_calendar_update_has_published_post_on_delete( ${1:\\$post_id:int} )","description":"Handler for updating the has published posts flag when a post is deleted."},"ƒ: block_core_calendar_update_has_published_post_on_transition_post_status":{"prefix":["block_core_calendar_update_has_published_post_on_transition_post_status","bccuhppotps"],"body":"block_core_calendar_update_has_published_post_on_transition_post_status( ${1:\\$new_status:string}, ${2:\\$old_status:string}, ${3:\\$post:WP_Post} )","description":"Handler for updating the has published posts flag when a post status changes."},"ƒ: render_block_core_categories":{"prefix":["render_block_core_categories","rbcc"],"body":"render_block_core_categories( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/categories` block on server."},"ƒ: build_dropdown_script_block_core_categories":{"prefix":["build_dropdown_script_block_core_categories","bdsbcc"],"body":"build_dropdown_script_block_core_categories( ${1:\\$dropdown_id:string} )","description":"Generates the inline script for a categories dropdown field."},"ƒ: register_block_core_categories":{"prefix":["register_block_core_categories","rbcc"],"body":"register_block_core_categories(  )","description":"Registers the `core/categories` block on server."},"ƒ: render_block_core_comment_author_name":{"prefix":["render_block_core_comment_author_name","rbccan"],"body":"render_block_core_comment_author_name( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-author-name` block on the server."},"ƒ: register_block_core_comment_author_name":{"prefix":["register_block_core_comment_author_name","rbccan"],"body":"register_block_core_comment_author_name(  )","description":"Registers the `core/comment-author-name` block on the server."},"ƒ: render_block_core_comment_content":{"prefix":["render_block_core_comment_content","rbccc"],"body":"render_block_core_comment_content( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-content` block on the server."},"ƒ: register_block_core_comment_content":{"prefix":["register_block_core_comment_content","rbccc"],"body":"register_block_core_comment_content(  )","description":"Registers the `core/comment-content` block on the server."},"ƒ: render_block_core_comment_date":{"prefix":["render_block_core_comment_date","rbccd"],"body":"render_block_core_comment_date( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-date` block on the server."},"ƒ: register_block_core_comment_date":{"prefix":["register_block_core_comment_date","rbccd"],"body":"register_block_core_comment_date(  )","description":"Registers the `core/comment-date` block on the server."},"ƒ: render_block_core_comment_edit_link":{"prefix":["render_block_core_comment_edit_link","rbccel"],"body":"render_block_core_comment_edit_link( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-edit-link` block on the server."},"ƒ: register_block_core_comment_edit_link":{"prefix":["register_block_core_comment_edit_link","rbccel"],"body":"register_block_core_comment_edit_link(  )","description":"Registers the `core/comment-edit-link` block on the server."},"ƒ: render_block_core_comment_reply_link":{"prefix":["render_block_core_comment_reply_link","rbccrl"],"body":"render_block_core_comment_reply_link( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-reply-link` block on the server."},"ƒ: register_block_core_comment_reply_link":{"prefix":["register_block_core_comment_reply_link","rbccrl"],"body":"register_block_core_comment_reply_link(  )","description":"Registers the `core/comment-reply-link` block on the server."},"ƒ: block_core_comment_template_render_comments":{"prefix":["block_core_comment_template_render_comments","bcctrc"],"body":"block_core_comment_template_render_comments( ${1:\\$comments:WP_Comment[]}, ${2:\\$block:WP_Block} )","description":"Function that recursively renders a list of nested comments."},"ƒ: render_block_core_comment_template":{"prefix":["render_block_core_comment_template","rbcct"],"body":"render_block_core_comment_template( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comment-template` block on the server."},"ƒ: register_block_core_comment_template":{"prefix":["register_block_core_comment_template","rbcct"],"body":"register_block_core_comment_template(  )","description":"Registers the `core/comment-template` block on the server."},"ƒ: render_block_core_comments_pagination_next":{"prefix":["render_block_core_comments_pagination_next","rbccpn"],"body":"render_block_core_comments_pagination_next( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comments-pagination-next` block on the server."},"ƒ: register_block_core_comments_pagination_next":{"prefix":["register_block_core_comments_pagination_next","rbccpn"],"body":"register_block_core_comments_pagination_next(  )","description":"Registers the `core/comments-pagination-next` block on the server."},"ƒ: render_block_core_comments_pagination_numbers":{"prefix":["render_block_core_comments_pagination_numbers","rbccpn"],"body":"render_block_core_comments_pagination_numbers( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comments-pagination-numbers` block on the server."},"ƒ: register_block_core_comments_pagination_numbers":{"prefix":["register_block_core_comments_pagination_numbers","rbccpn"],"body":"register_block_core_comments_pagination_numbers(  )","description":"Registers the `core/comments-pagination-numbers` block on the server."},"ƒ: render_block_core_comments_pagination_previous":{"prefix":["render_block_core_comments_pagination_previous","rbccpp"],"body":"render_block_core_comments_pagination_previous( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comments-pagination-previous` block on the server."},"ƒ: register_block_core_comments_pagination_previous":{"prefix":["register_block_core_comments_pagination_previous","rbccpp"],"body":"register_block_core_comments_pagination_previous(  )","description":"Registers the `core/comments-pagination-previous` block on the server."},"ƒ: render_block_core_comments_pagination":{"prefix":["render_block_core_comments_pagination","rbccp"],"body":"render_block_core_comments_pagination( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/comments-pagination` block on the server."},"ƒ: register_block_core_comments_pagination":{"prefix":["register_block_core_comments_pagination","rbccp"],"body":"register_block_core_comments_pagination(  )","description":"Registers the `core/comments-pagination` block on the server."},"ƒ: render_block_core_comments_title":{"prefix":["render_block_core_comments_title","rbcct"],"body":"render_block_core_comments_title( ${1:\\$attributes:array} )","description":"Renders the `core/comments-title` block on the server."},"ƒ: register_block_core_comments_title":{"prefix":["register_block_core_comments_title","rbcct"],"body":"register_block_core_comments_title(  )","description":"Registers the `core/comments-title` block on the server."},"ƒ: render_block_core_comments":{"prefix":["render_block_core_comments","rbcc"],"body":"render_block_core_comments( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/comments` block on the server."},"ƒ: register_block_core_comments":{"prefix":["register_block_core_comments","rbcc"],"body":"register_block_core_comments(  )","description":"Registers the `core/comments` block on the server."},"ƒ: comments_block_form_defaults":{"prefix":["comments_block_form_defaults","cbfd"],"body":"comments_block_form_defaults( ${1:\\$fields:array} )","description":"Use the button block classes for the form-submit button."},"ƒ: enqueue_legacy_post_comments_block_styles":{"prefix":["enqueue_legacy_post_comments_block_styles","elpcbs"],"body":"enqueue_legacy_post_comments_block_styles( ${1:\\$block_name:string} )","description":"Enqueues styles from the legacy `core/post-comments` block. These styles are required only by the block's fallback."},"ƒ: register_legacy_post_comments_block":{"prefix":["register_legacy_post_comments_block","rlpcb"],"body":"register_legacy_post_comments_block(  )","description":"Ensures backwards compatibility for any users running the Gutenberg plugin who have used Post Comments before it was merged into Comments Query Loop."},"ƒ: render_block_core_cover":{"prefix":["render_block_core_cover","rbcc"],"body":"render_block_core_cover( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/cover` block on server."},"ƒ: register_block_core_cover":{"prefix":["register_block_core_cover","rbcc"],"body":"register_block_core_cover(  )","description":"Registers the `core/cover` block renderer on server."},"ƒ: render_block_core_file":{"prefix":["render_block_core_file","rbcf"],"body":"render_block_core_file( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"When the `core/file` block is rendering, check if we need to enqueue the `wp-block-file-view` script."},"ƒ: register_block_core_file":{"prefix":["register_block_core_file","rbcf"],"body":"register_block_core_file(  )","description":"Registers the `core/file` block on server."},"ƒ: render_block_core_footnotes":{"prefix":["render_block_core_footnotes","rbcf"],"body":"render_block_core_footnotes( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/footnotes` block on the server."},"ƒ: register_block_core_footnotes":{"prefix":["register_block_core_footnotes","rbcf"],"body":"register_block_core_footnotes(  )","description":"Registers the `core/footnotes` block on the server."},"ƒ: register_block_core_footnotes_post_meta":{"prefix":["register_block_core_footnotes_post_meta","rbcfpm"],"body":"register_block_core_footnotes_post_meta(  )","description":"Registers the footnotes meta field required for footnotes to work."},"ƒ: wp_add_footnotes_to_revision":{"prefix":["wp_add_footnotes_to_revision","waftr"],"body":"wp_add_footnotes_to_revision( ${1:\\$fields:array} )","description":"Adds the footnotes field to the revisions display."},"ƒ: wp_get_footnotes_from_revision":{"prefix":["wp_get_footnotes_from_revision","wgffr"],"body":"wp_get_footnotes_from_revision( ${1:\\$revision_field:string}, ${2:\\$field:string}, ${3:\\$revision:object} )","description":"Gets the footnotes field from the revision for the revisions screen."},"ƒ: block_core_gallery_data_id_backcompatibility":{"prefix":["block_core_gallery_data_id_backcompatibility","bcgdib"],"body":"block_core_gallery_data_id_backcompatibility( ${1:\\$parsed_block:array} )","description":"Handles backwards compatibility for Gallery Blocks, whose images feature a `data-id` attribute."},"ƒ: block_core_gallery_render":{"prefix":["block_core_gallery_render","bcgr"],"body":"block_core_gallery_render( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/gallery` block on the server."},"ƒ: register_block_core_gallery":{"prefix":["register_block_core_gallery","rbcg"],"body":"register_block_core_gallery(  )","description":"Registers the `core/gallery` block on server."},"ƒ: block_core_heading_render":{"prefix":["block_core_heading_render","bchr"],"body":"block_core_heading_render( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Adds a wp-block-heading class to the heading block content."},"ƒ: register_block_core_heading":{"prefix":["register_block_core_heading","rbch"],"body":"register_block_core_heading(  )","description":"Registers the `core/heading` block on server."},"ƒ: block_core_home_link_build_css_colors":{"prefix":["block_core_home_link_build_css_colors","bchlbcc"],"body":"block_core_home_link_build_css_colors( ${1:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the colors which will be applied to the home link markup in the front-end."},"ƒ: block_core_home_link_build_css_font_sizes":{"prefix":["block_core_home_link_build_css_font_sizes","bchlbcfs"],"body":"block_core_home_link_build_css_font_sizes( ${1:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the font sizes which will be applied to the home link markup in the front-end."},"ƒ: block_core_home_link_build_li_wrapper_attributes":{"prefix":["block_core_home_link_build_li_wrapper_attributes","bchlblwa"],"body":"block_core_home_link_build_li_wrapper_attributes( ${1:\\$context:array} )","description":"Builds an array with classes and style for the li wrapper"},"ƒ: render_block_core_home_link":{"prefix":["render_block_core_home_link","rbchl"],"body":"render_block_core_home_link( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/home-link` block."},"ƒ: register_block_core_home_link":{"prefix":["register_block_core_home_link","rbchl"],"body":"register_block_core_home_link(  )","description":"Register the home block"},"ƒ: render_block_core_image":{"prefix":["render_block_core_image","rbci"],"body":"render_block_core_image( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/image` block on the server, adding a data-id attribute to the element if core/gallery has added on pre-render."},"ƒ: block_core_image_get_lightbox_settings":{"prefix":["block_core_image_get_lightbox_settings","bcigls"],"body":"block_core_image_get_lightbox_settings( ${1:\\$block:array} )","description":"Adds the lightboxEnabled flag to the block data."},"ƒ: block_core_image_render_lightbox":{"prefix":["block_core_image_render_lightbox","bcirl"],"body":"block_core_image_render_lightbox( ${1:\\$block_content:string}, ${2:\\$block:array} )","description":"Adds the directives and layout needed for the lightbox behavior."},"ƒ: block_core_image_print_lightbox_overlay":{"prefix":["block_core_image_print_lightbox_overlay","bciplo"],"body":"block_core_image_print_lightbox_overlay(  )","description":""},"ƒ: register_block_core_image":{"prefix":["register_block_core_image","rbci"],"body":"register_block_core_image(  )","description":"Registers the `core/image` block on server."},"ƒ: register_core_block_style_handles":{"prefix":["register_core_block_style_handles","rcbsh"],"body":"register_core_block_style_handles(  )","description":"Registers core block style handles."},"ƒ: register_core_block_types_from_metadata":{"prefix":["register_core_block_types_from_metadata","rcbtfm"],"body":"register_core_block_types_from_metadata(  )","description":"Registers core block types using metadata files."},"ƒ: wp_register_core_block_metadata_collection":{"prefix":["wp_register_core_block_metadata_collection","wrcbmc"],"body":"wp_register_core_block_metadata_collection(  )","description":"Registers the core block metadata collection."},"ƒ: wp_latest_comments_draft_or_post_title":{"prefix":["wp_latest_comments_draft_or_post_title","wlcdopt"],"body":"wp_latest_comments_draft_or_post_title( ${1:\\$post:int|WP_Post} )","description":"Get the post title."},"ƒ: render_block_core_latest_comments":{"prefix":["render_block_core_latest_comments","rbclc"],"body":"render_block_core_latest_comments( ${1:\\$attributes:array} )","description":"Renders the `core/latest-comments` block on server."},"ƒ: register_block_core_latest_comments":{"prefix":["register_block_core_latest_comments","rbclc"],"body":"register_block_core_latest_comments(  )","description":"Registers the `core/latest-comments` block."},"ƒ: block_core_latest_posts_get_excerpt_length":{"prefix":["block_core_latest_posts_get_excerpt_length","bclpgel"],"body":"block_core_latest_posts_get_excerpt_length(  )","description":"Callback for the excerpt_length filter used by the Latest Posts block at render time."},"ƒ: render_block_core_latest_posts":{"prefix":["render_block_core_latest_posts","rbclp"],"body":"render_block_core_latest_posts( ${1:\\$attributes:array} )","description":"Renders the `core/latest-posts` block on server."},"ƒ: register_block_core_latest_posts":{"prefix":["register_block_core_latest_posts","rbclp"],"body":"register_block_core_latest_posts(  )","description":"Registers the `core/latest-posts` block on server."},"ƒ: block_core_latest_posts_migrate_categories":{"prefix":["block_core_latest_posts_migrate_categories","bclpmc"],"body":"block_core_latest_posts_migrate_categories( ${1:\\$block:array} )","description":"Handles outdated versions of the `core/latest-posts` block by converting attribute `categories` from a numeric string to an array with key `id`."},"ƒ: render_block_core_legacy_widget":{"prefix":["render_block_core_legacy_widget","rbclw"],"body":"render_block_core_legacy_widget( ${1:\\$attributes:array} )","description":"Renders the 'core/legacy-widget' block."},"ƒ: register_block_core_legacy_widget":{"prefix":["register_block_core_legacy_widget","rbclw"],"body":"register_block_core_legacy_widget(  )","description":"Registers the 'core/legacy-widget' block."},"ƒ: handle_legacy_widget_preview_iframe":{"prefix":["handle_legacy_widget_preview_iframe","hlwpi"],"body":"handle_legacy_widget_preview_iframe(  )","description":"Intercepts any request with legacy-widget-preview in the query param and, if set, renders a page containing a preview of the requested Legacy Widget block."},"ƒ: block_core_list_render":{"prefix":["block_core_list_render","bclr"],"body":"block_core_list_render( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Adds the wp-block-list class to the rendered list block."},"ƒ: register_block_core_list":{"prefix":["register_block_core_list","rbcl"],"body":"register_block_core_list(  )","description":"Registers the `core/list` block on server."},"ƒ: render_block_core_loginout":{"prefix":["render_block_core_loginout","rbcl"],"body":"render_block_core_loginout( ${1:\\$attributes:array} )","description":"Renders the `core/loginout` block on server."},"ƒ: register_block_core_loginout":{"prefix":["register_block_core_loginout","rbcl"],"body":"register_block_core_loginout(  )","description":"Registers the `core/loginout` block on server."},"ƒ: render_block_core_media_text":{"prefix":["render_block_core_media_text","rbcmt"],"body":"render_block_core_media_text( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/media-text` block on server."},"ƒ: register_block_core_media_text":{"prefix":["register_block_core_media_text","rbcmt"],"body":"register_block_core_media_text(  )","description":"Registers the `core/media-text` block renderer on server."},"ƒ: block_core_navigation_link_build_css_colors":{"prefix":["block_core_navigation_link_build_css_colors","bcnlbcc"],"body":"block_core_navigation_link_build_css_colors( ${1:\\$context:array}, ${2:\\$attributes:array}, ${3:\\$is_sub_menu:bool} )","description":"Build an array with CSS classes and inline styles defining the colors which will be applied to the navigation markup in the front-end."},"ƒ: block_core_navigation_link_build_css_font_sizes":{"prefix":["block_core_navigation_link_build_css_font_sizes","bcnlbcfs"],"body":"block_core_navigation_link_build_css_font_sizes( ${1:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the font sizes which will be applied to the navigation markup in the front-end."},"ƒ: block_core_navigation_link_render_submenu_icon":{"prefix":["block_core_navigation_link_render_submenu_icon","bcnlrsi"],"body":"block_core_navigation_link_render_submenu_icon(  )","description":"Returns the top-level submenu SVG chevron icon."},"ƒ: block_core_navigation_link_maybe_urldecode":{"prefix":["block_core_navigation_link_maybe_urldecode","bcnlmu"],"body":"block_core_navigation_link_maybe_urldecode( ${1:\\$url:string} )","description":"Decodes a url if it's encoded, returning the same url if not."},"ƒ: render_block_core_navigation_link":{"prefix":["render_block_core_navigation_link","rbcnl"],"body":"render_block_core_navigation_link( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/navigation-link` block."},"ƒ: build_variation_for_navigation_link":{"prefix":["build_variation_for_navigation_link","bvfnl"],"body":"build_variation_for_navigation_link( ${1:\\$entity:WP_Taxonomy|WP_Post_Type}, ${2:\\$kind:string} )","description":"Returns a navigation link variation"},"ƒ: block_core_navigation_link_filter_variations":{"prefix":["block_core_navigation_link_filter_variations","bcnlfv"],"body":"block_core_navigation_link_filter_variations( ${1:\\$variations:array}, ${2:\\$block_type:WP_Block_Type} )","description":"Filters the registered variations for a block type."},"ƒ: block_core_navigation_link_build_variations":{"prefix":["block_core_navigation_link_build_variations","bcnlbv"],"body":"block_core_navigation_link_build_variations(  )","description":"Returns an array of variations for the navigation link block."},"ƒ: register_block_core_navigation_link":{"prefix":["register_block_core_navigation_link","rbcnl"],"body":"register_block_core_navigation_link(  )","description":"Registers the navigation link block."},"ƒ: block_core_navigation_submenu_build_css_font_sizes":{"prefix":["block_core_navigation_submenu_build_css_font_sizes","bcnsbcfs"],"body":"block_core_navigation_submenu_build_css_font_sizes( ${1:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the font sizes which will be applied to the navigation markup in the front-end."},"ƒ: block_core_navigation_submenu_render_submenu_icon":{"prefix":["block_core_navigation_submenu_render_submenu_icon","bcnsrsi"],"body":"block_core_navigation_submenu_render_submenu_icon(  )","description":"Returns the top-level submenu SVG chevron icon."},"ƒ: render_block_core_navigation_submenu":{"prefix":["render_block_core_navigation_submenu","rbcns"],"body":"render_block_core_navigation_submenu( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/navigation-submenu` block."},"ƒ: register_block_core_navigation_submenu":{"prefix":["register_block_core_navigation_submenu","rbcns"],"body":"register_block_core_navigation_submenu(  )","description":"Register the navigation submenu block."},"ƒ: block_core_navigation_get_menu_items_at_location":{"prefix":["block_core_navigation_get_menu_items_at_location","bcngmial"],"body":"block_core_navigation_get_menu_items_at_location( ${1:\\$location:string} )","description":"Returns the menu items for a WordPress menu location."},"ƒ: block_core_navigation_sort_menu_items_by_parent_id":{"prefix":["block_core_navigation_sort_menu_items_by_parent_id","bcnsmibpi"],"body":"block_core_navigation_sort_menu_items_by_parent_id( ${1:\\$menu_items:array} )","description":"Sorts a standard array of menu items into a nested structure keyed by the id of the parent menu."},"ƒ: block_core_navigation_get_inner_blocks_from_unstable_location":{"prefix":["block_core_navigation_get_inner_blocks_from_unstable_location","bcngibful"],"body":"block_core_navigation_get_inner_blocks_from_unstable_location( ${1:\\$attributes:array} )","description":"Gets the inner blocks for the navigation block from the unstable location attribute."},"ƒ: block_core_navigation_add_directives_to_submenu":{"prefix":["block_core_navigation_add_directives_to_submenu","bcnadts"],"body":"block_core_navigation_add_directives_to_submenu( ${1:\\$tags:WP_HTML_Tag_Processor}, ${2:\\$block_attributes:array} )","description":"Add Interactivity API directives to the navigation-submenu and page-list blocks markup using the Tag Processor."},"ƒ: block_core_navigation_build_css_colors":{"prefix":["block_core_navigation_build_css_colors","bcnbcc"],"body":"block_core_navigation_build_css_colors( ${1:\\$attributes:array} )","description":"Build an array with CSS classes and inline styles defining the colors which will be applied to the navigation markup in the front-end."},"ƒ: block_core_navigation_build_css_font_sizes":{"prefix":["block_core_navigation_build_css_font_sizes","bcnbcfs"],"body":"block_core_navigation_build_css_font_sizes( ${1:\\$attributes:array} )","description":"Build an array with CSS classes and inline styles defining the font sizes which will be applied to the navigation markup in the front-end."},"ƒ: block_core_navigation_render_submenu_icon":{"prefix":["block_core_navigation_render_submenu_icon","bcnrsi"],"body":"block_core_navigation_render_submenu_icon(  )","description":"Returns the top-level submenu SVG chevron icon."},"ƒ: block_core_navigation_filter_out_empty_blocks":{"prefix":["block_core_navigation_filter_out_empty_blocks","bcnfoeb"],"body":"block_core_navigation_filter_out_empty_blocks( ${1:\\$parsed_blocks:array} )","description":"Filter out empty \"null\" blocks from the block list."},"ƒ: block_core_navigation_block_contains_core_navigation":{"prefix":["block_core_navigation_block_contains_core_navigation","bcnbccn"],"body":"block_core_navigation_block_contains_core_navigation( ${1:\\$inner_blocks:WP_Block_List} )","description":"Returns true if the navigation block contains a nested navigation block."},"ƒ: block_core_navigation_get_fallback_blocks":{"prefix":["block_core_navigation_get_fallback_blocks","bcngfb"],"body":"block_core_navigation_get_fallback_blocks(  )","description":"Retrieves the appropriate fallback to be used on the front of the site when there is no menu assigned to the Nav block."},"ƒ: block_core_navigation_get_post_ids":{"prefix":["block_core_navigation_get_post_ids","bcngpi"],"body":"block_core_navigation_get_post_ids( ${1:\\$inner_blocks:WP_Block_List} )","description":"Iterate through all inner blocks recursively and get navigation link block's post IDs."},"ƒ: block_core_navigation_from_block_get_post_ids":{"prefix":["block_core_navigation_from_block_get_post_ids","bcnfbgpi"],"body":"block_core_navigation_from_block_get_post_ids( ${1:\\$block:WP_Block} )","description":"Get post IDs from a navigation link block instance."},"ƒ: render_block_core_navigation":{"prefix":["render_block_core_navigation","rbcn"],"body":"render_block_core_navigation( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/navigation` block on server."},"ƒ: register_block_core_navigation":{"prefix":["register_block_core_navigation","rbcn"],"body":"register_block_core_navigation(  )","description":"Register the navigation block."},"ƒ: block_core_navigation_typographic_presets_backcompatibility":{"prefix":["block_core_navigation_typographic_presets_backcompatibility","bcntpb"],"body":"block_core_navigation_typographic_presets_backcompatibility( ${1:\\$parsed_block:array} )","description":"Filter that changes the parsed attribute values of navigation blocks contain typographic presets to contain the values directly."},"ƒ: block_core_navigation_parse_blocks_from_menu_items":{"prefix":["block_core_navigation_parse_blocks_from_menu_items","bcnpbfmi"],"body":"block_core_navigation_parse_blocks_from_menu_items( ${1:\\$menu_items:array}, ${2:\\$menu_items_by_parent_id:array} )","description":"Turns menu item data into a nested array of parsed blocks"},"ƒ: block_core_navigation_get_classic_menu_fallback":{"prefix":["block_core_navigation_get_classic_menu_fallback","bcngcmf"],"body":"block_core_navigation_get_classic_menu_fallback(  )","description":"Get the classic navigation menu to use as a fallback."},"ƒ: block_core_navigation_get_classic_menu_fallback_blocks":{"prefix":["block_core_navigation_get_classic_menu_fallback_blocks","bcngcmfb"],"body":"block_core_navigation_get_classic_menu_fallback_blocks( ${1:\\$classic_nav_menu:object} )","description":"Converts a classic navigation to blocks."},"ƒ: block_core_navigation_maybe_use_classic_menu_fallback":{"prefix":["block_core_navigation_maybe_use_classic_menu_fallback","bcnmucmf"],"body":"block_core_navigation_maybe_use_classic_menu_fallback(  )","description":"If there's a classic menu then use it as a fallback."},"ƒ: block_core_navigation_get_most_recently_published_navigation":{"prefix":["block_core_navigation_get_most_recently_published_navigation","bcngmrpn"],"body":"block_core_navigation_get_most_recently_published_navigation(  )","description":"Finds the most recently published `wp_navigation` Post."},"ƒ: register_block_core_page_list_item":{"prefix":["register_block_core_page_list_item","rbcpli"],"body":"register_block_core_page_list_item(  )","description":"Registers the `core/page-list-item` block on server."},"ƒ: block_core_page_list_build_css_colors":{"prefix":["block_core_page_list_build_css_colors","bcplbcc"],"body":"block_core_page_list_build_css_colors( ${1:\\$attributes:array}, ${2:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the colors which will be applied to the pages markup in the front-end when it is a descendant of navigation."},"ƒ: block_core_page_list_build_css_font_sizes":{"prefix":["block_core_page_list_build_css_font_sizes","bcplbcfs"],"body":"block_core_page_list_build_css_font_sizes( ${1:\\$context:array} )","description":"Build an array with CSS classes and inline styles defining the font sizes which will be applied to the pages markup in the front-end when it is a descendant of navigation."},"ƒ: block_core_page_list_render_nested_page_list":{"prefix":["block_core_page_list_render_nested_page_list","bcplrnpl"],"body":"block_core_page_list_render_nested_page_list( ${1:\\$open_submenus_on_click:bool}, ${2:\\$show_submenu_icons:bool}, ${3:\\$is_navigation_child:bool}, ${4:\\$nested_pages:array}, ${5:\\$is_nested:bool}, ${6:\\$active_page_ancestor_ids:array}, ${7:\\$colors:array}, ${8:\\$depth:int} )","description":"Outputs Page list markup from an array of pages with nested children."},"ƒ: block_core_page_list_nest_pages":{"prefix":["block_core_page_list_nest_pages","bcplnp"],"body":"block_core_page_list_nest_pages( ${1:\\$current_level:array}, ${2:\\$children:array} )","description":"Outputs nested array of pages"},"ƒ: render_block_core_page_list":{"prefix":["render_block_core_page_list","rbcpl"],"body":"render_block_core_page_list( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/page-list` block on server."},"ƒ: register_block_core_page_list":{"prefix":["register_block_core_page_list","rbcpl"],"body":"register_block_core_page_list(  )","description":"Registers the `core/pages` block on server."},"ƒ: register_block_core_pattern":{"prefix":["register_block_core_pattern","rbcp"],"body":"register_block_core_pattern(  )","description":"Registers the `core/pattern` block on the server."},"ƒ: render_block_core_pattern":{"prefix":["render_block_core_pattern","rbcp"],"body":"render_block_core_pattern( ${1:\\$attributes:array} )","description":"Renders the `core/pattern` block on the server."},"ƒ: render_block_core_post_author_biography":{"prefix":["render_block_core_post_author_biography","rbcpab"],"body":"render_block_core_post_author_biography( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-author-biography` block on the server."},"ƒ: register_block_core_post_author_biography":{"prefix":["register_block_core_post_author_biography","rbcpab"],"body":"register_block_core_post_author_biography(  )","description":"Registers the `core/post-author-biography` block on the server."},"ƒ: render_block_core_post_author_name":{"prefix":["render_block_core_post_author_name","rbcpan"],"body":"render_block_core_post_author_name( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-author-name` block on the server."},"ƒ: register_block_core_post_author_name":{"prefix":["register_block_core_post_author_name","rbcpan"],"body":"register_block_core_post_author_name(  )","description":"Registers the `core/post-author-name` block on the server."},"ƒ: render_block_core_post_author":{"prefix":["render_block_core_post_author","rbcpa"],"body":"render_block_core_post_author( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-author` block on the server."},"ƒ: register_block_core_post_author":{"prefix":["register_block_core_post_author","rbcpa"],"body":"register_block_core_post_author(  )","description":"Registers the `core/post-author` block on the server."},"ƒ: render_block_core_post_comments_form":{"prefix":["render_block_core_post_comments_form","rbcpcf"],"body":"render_block_core_post_comments_form( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-comments-form` block on the server."},"ƒ: register_block_core_post_comments_form":{"prefix":["register_block_core_post_comments_form","rbcpcf"],"body":"register_block_core_post_comments_form(  )","description":"Registers the `core/post-comments-form` block on the server."},"ƒ: post_comments_form_block_form_defaults":{"prefix":["post_comments_form_block_form_defaults","pcfbfd"],"body":"post_comments_form_block_form_defaults( ${1:\\$fields:array} )","description":"Use the button block classes for the form-submit button."},"ƒ: render_block_core_post_content":{"prefix":["render_block_core_post_content","rbcpc"],"body":"render_block_core_post_content( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-content` block on the server."},"ƒ: register_block_core_post_content":{"prefix":["register_block_core_post_content","rbcpc"],"body":"register_block_core_post_content(  )","description":"Registers the `core/post-content` block on the server."},"ƒ: render_block_core_post_date":{"prefix":["render_block_core_post_date","rbcpd"],"body":"render_block_core_post_date( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-date` block on the server."},"ƒ: register_block_core_post_date":{"prefix":["register_block_core_post_date","rbcpd"],"body":"register_block_core_post_date(  )","description":"Registers the `core/post-date` block on the server."},"ƒ: render_block_core_post_excerpt":{"prefix":["render_block_core_post_excerpt","rbcpe"],"body":"render_block_core_post_excerpt( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-excerpt` block on the server."},"ƒ: register_block_core_post_excerpt":{"prefix":["register_block_core_post_excerpt","rbcpe"],"body":"register_block_core_post_excerpt(  )","description":"Registers the `core/post-excerpt` block on the server."},"ƒ: render_block_core_post_featured_image":{"prefix":["render_block_core_post_featured_image","rbcpfi"],"body":"render_block_core_post_featured_image( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-featured-image` block on the server."},"ƒ: get_block_core_post_featured_image_overlay_element_markup":{"prefix":["get_block_core_post_featured_image_overlay_element_markup","gbcpfioem"],"body":"get_block_core_post_featured_image_overlay_element_markup( ${1:\\$attributes:array} )","description":"Generate markup for the HTML element that will be used for the overlay."},"ƒ: get_block_core_post_featured_image_border_attributes":{"prefix":["get_block_core_post_featured_image_border_attributes","gbcpfiba"],"body":"get_block_core_post_featured_image_border_attributes( ${1:\\$attributes:array} )","description":"Generates class names and styles to apply the border support styles for the Post Featured Image block."},"ƒ: register_block_core_post_featured_image":{"prefix":["register_block_core_post_featured_image","rbcpfi"],"body":"register_block_core_post_featured_image(  )","description":"Registers the `core/post-featured-image` block on the server."},"ƒ: render_block_core_post_navigation_link":{"prefix":["render_block_core_post_navigation_link","rbcpnl"],"body":"render_block_core_post_navigation_link( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/post-navigation-link` block on the server."},"ƒ: register_block_core_post_navigation_link":{"prefix":["register_block_core_post_navigation_link","rbcpnl"],"body":"register_block_core_post_navigation_link(  )","description":"Registers the `core/post-navigation-link` block on the server."},"ƒ: block_core_post_template_uses_featured_image":{"prefix":["block_core_post_template_uses_featured_image","bcptufi"],"body":"block_core_post_template_uses_featured_image( ${1:\\$inner_blocks:WP_Block_List} )","description":"Determines whether a block list contains a block that uses the featured image."},"ƒ: render_block_core_post_template":{"prefix":["render_block_core_post_template","rbcpt"],"body":"render_block_core_post_template( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-template` block on the server."},"ƒ: register_block_core_post_template":{"prefix":["register_block_core_post_template","rbcpt"],"body":"register_block_core_post_template(  )","description":"Registers the `core/post-template` block on the server."},"ƒ: render_block_core_post_terms":{"prefix":["render_block_core_post_terms","rbcpt"],"body":"render_block_core_post_terms( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-terms` block on the server."},"ƒ: block_core_post_terms_build_variations":{"prefix":["block_core_post_terms_build_variations","bcptbv"],"body":"block_core_post_terms_build_variations(  )","description":"Returns the available variations for the `core/post-terms` block."},"ƒ: register_block_core_post_terms":{"prefix":["register_block_core_post_terms","rbcpt"],"body":"register_block_core_post_terms(  )","description":"Registers the `core/post-terms` block on the server."},"ƒ: render_block_core_post_title":{"prefix":["render_block_core_post_title","rbcpt"],"body":"render_block_core_post_title( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/post-title` block on the server."},"ƒ: register_block_core_post_title":{"prefix":["register_block_core_post_title","rbcpt"],"body":"register_block_core_post_title(  )","description":"Registers the `core/post-title` block on the server."},"ƒ: render_block_core_query_no_results":{"prefix":["render_block_core_query_no_results","rbcqnr"],"body":"render_block_core_query_no_results( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/query-no-results` block on the server."},"ƒ: register_block_core_query_no_results":{"prefix":["register_block_core_query_no_results","rbcqnr"],"body":"register_block_core_query_no_results(  )","description":"Registers the `core/query-no-results` block on the server."},"ƒ: render_block_core_query_pagination_next":{"prefix":["render_block_core_query_pagination_next","rbcqpn"],"body":"render_block_core_query_pagination_next( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/query-pagination-next` block on the server."},"ƒ: register_block_core_query_pagination_next":{"prefix":["register_block_core_query_pagination_next","rbcqpn"],"body":"register_block_core_query_pagination_next(  )","description":"Registers the `core/query-pagination-next` block on the server."},"ƒ: render_block_core_query_pagination_numbers":{"prefix":["render_block_core_query_pagination_numbers","rbcqpn"],"body":"render_block_core_query_pagination_numbers( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/query-pagination-numbers` block on the server."},"ƒ: register_block_core_query_pagination_numbers":{"prefix":["register_block_core_query_pagination_numbers","rbcqpn"],"body":"register_block_core_query_pagination_numbers(  )","description":"Registers the `core/query-pagination-numbers` block on the server."},"ƒ: render_block_core_query_pagination_previous":{"prefix":["render_block_core_query_pagination_previous","rbcqpp"],"body":"render_block_core_query_pagination_previous( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/query-pagination-previous` block on the server."},"ƒ: register_block_core_query_pagination_previous":{"prefix":["register_block_core_query_pagination_previous","rbcqpp"],"body":"register_block_core_query_pagination_previous(  )","description":"Registers the `core/query-pagination-previous` block on the server."},"ƒ: render_block_core_query_pagination":{"prefix":["render_block_core_query_pagination","rbcqp"],"body":"render_block_core_query_pagination( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Renders the `core/query-pagination` block on the server."},"ƒ: register_block_core_query_pagination":{"prefix":["register_block_core_query_pagination","rbcqp"],"body":"register_block_core_query_pagination(  )","description":"Registers the `core/query-pagination` block on the server."},"ƒ: render_block_core_query_title":{"prefix":["render_block_core_query_title","rbcqt"],"body":"render_block_core_query_title( ${1:\\$attributes:array} )","description":"Renders the `core/query-title` block on the server."},"ƒ: register_block_core_query_title":{"prefix":["register_block_core_query_title","rbcqt"],"body":"register_block_core_query_title(  )","description":"Registers the `core/query-title` block on the server."},"ƒ: render_block_core_query_total":{"prefix":["render_block_core_query_total","rbcqt"],"body":"render_block_core_query_total( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `query-total` block on the server."},"ƒ: register_block_core_query_total":{"prefix":["register_block_core_query_total","rbcqt"],"body":"register_block_core_query_total(  )","description":"Registers the `query-total` block."},"ƒ: render_block_core_query":{"prefix":["render_block_core_query","rbcq"],"body":"render_block_core_query( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Modifies the static `core/query` block on the server."},"ƒ: register_block_core_query":{"prefix":["register_block_core_query","rbcq"],"body":"register_block_core_query(  )","description":"Registers the `core/query` block on the server."},"ƒ: block_core_query_disable_enhanced_pagination":{"prefix":["block_core_query_disable_enhanced_pagination","bcqdep"],"body":"block_core_query_disable_enhanced_pagination( ${1:\\$parsed_block:array} )","description":"Traverse the tree of blocks looking for any plugin block (i.e., a block from an installed plugin) inside a Query block with the enhanced pagination enabled. If at least one is found, the enhanced pagination is effectively disabled to prevent any potential incompatibilities."},"ƒ: render_block_core_read_more":{"prefix":["render_block_core_read_more","rbcrm"],"body":"render_block_core_read_more( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/read-more` block on the server."},"ƒ: register_block_core_read_more":{"prefix":["register_block_core_read_more","rbcrm"],"body":"register_block_core_read_more(  )","description":"Registers the `core/read-more` block on the server."},"ƒ: render_block_core_rss":{"prefix":["render_block_core_rss","rbcr"],"body":"render_block_core_rss( ${1:\\$attributes:array} )","description":"Renders the `core/rss` block on server."},"ƒ: register_block_core_rss":{"prefix":["register_block_core_rss","rbcr"],"body":"register_block_core_rss(  )","description":"Registers the `core/rss` block on server."},"ƒ: render_block_core_search":{"prefix":["render_block_core_search","rbcs"],"body":"render_block_core_search( ${1:\\$attributes:array} )","description":"Dynamically renders the `core/search` block."},"ƒ: register_block_core_search":{"prefix":["register_block_core_search","rbcs"],"body":"register_block_core_search(  )","description":"Registers the `core/search` block on the server."},"ƒ: classnames_for_block_core_search":{"prefix":["classnames_for_block_core_search","cfbcs"],"body":"classnames_for_block_core_search( ${1:\\$attributes:array} )","description":"Builds the correct top level classnames for the 'core/search' block."},"ƒ: apply_block_core_search_border_style":{"prefix":["apply_block_core_search_border_style","abcsbs"],"body":"apply_block_core_search_border_style( ${1:\\$attributes:array}, ${2:\\$property:string}, ${3:\\$side:string}, ${4:\\$wrapper_styles:array}, ${5:\\$button_styles:array}, ${6:\\$input_styles:array} )","description":"This generates a CSS rule for the given border property and side if provided."},"ƒ: apply_block_core_search_border_styles":{"prefix":["apply_block_core_search_border_styles","abcsbs"],"body":"apply_block_core_search_border_styles( ${1:\\$attributes:array}, ${2:\\$property:string}, ${3:\\$wrapper_styles:array}, ${4:\\$button_styles:array}, ${5:\\$input_styles:array} )","description":"This adds CSS rules for a given border property e.g. width or color. It injects rules into the provided wrapper, button and input style arrays for uniform \"flat\" borders or those with individual sides configured."},"ƒ: styles_for_block_core_search":{"prefix":["styles_for_block_core_search","sfbcs"],"body":"styles_for_block_core_search( ${1:\\$attributes:array} )","description":"Builds an array of inline styles for the search block."},"ƒ: get_typography_classes_for_block_core_search":{"prefix":["get_typography_classes_for_block_core_search","gtcfbcs"],"body":"get_typography_classes_for_block_core_search( ${1:\\$attributes:array} )","description":"Returns typography classnames depending on whether there are named font sizes/families."},"ƒ: get_typography_styles_for_block_core_search":{"prefix":["get_typography_styles_for_block_core_search","gtsfbcs"],"body":"get_typography_styles_for_block_core_search( ${1:\\$attributes:array} )","description":"Returns typography styles to be included in an HTML style tag."},"ƒ: get_border_color_classes_for_block_core_search":{"prefix":["get_border_color_classes_for_block_core_search","gbccfbcs"],"body":"get_border_color_classes_for_block_core_search( ${1:\\$attributes:array} )","description":"Returns border color classnames depending on whether there are named or custom border colors."},"ƒ: get_color_classes_for_block_core_search":{"prefix":["get_color_classes_for_block_core_search","gccfbcs"],"body":"get_color_classes_for_block_core_search( ${1:\\$attributes:array} )","description":"Returns color classnames depending on whether there are named or custom text and background colors."},"ƒ: render_block_core_shortcode":{"prefix":["render_block_core_shortcode","rbcs"],"body":"render_block_core_shortcode( ${1:\\$attributes:array}, ${2:\\$content:string} )","description":"Performs wpautop() on the shortcode block content."},"ƒ: register_block_core_shortcode":{"prefix":["register_block_core_shortcode","rbcs"],"body":"register_block_core_shortcode(  )","description":"Registers the `core/shortcode` block on server."},"ƒ: render_block_core_site_logo":{"prefix":["render_block_core_site_logo","rbcsl"],"body":"render_block_core_site_logo( ${1:\\$attributes:array} )","description":"Renders the `core/site-logo` block on the server."},"ƒ: register_block_core_site_logo_setting":{"prefix":["register_block_core_site_logo_setting","rbcsls"],"body":"register_block_core_site_logo_setting(  )","description":"Register a core site setting for a site logo"},"ƒ: register_block_core_site_icon_setting":{"prefix":["register_block_core_site_icon_setting","rbcsis"],"body":"register_block_core_site_icon_setting(  )","description":"Register a core site setting for a site icon"},"ƒ: register_block_core_site_logo":{"prefix":["register_block_core_site_logo","rbcsl"],"body":"register_block_core_site_logo(  )","description":"Registers the `core/site-logo` block on the server."},"ƒ: render_block_core_site_tagline":{"prefix":["render_block_core_site_tagline","rbcst"],"body":"render_block_core_site_tagline( ${1:\\$attributes:array} )","description":"Renders the `core/site-tagline` block on the server."},"ƒ: register_block_core_site_tagline":{"prefix":["register_block_core_site_tagline","rbcst"],"body":"register_block_core_site_tagline(  )","description":"Registers the `core/site-tagline` block on the server."},"ƒ: render_block_core_site_title":{"prefix":["render_block_core_site_title","rbcst"],"body":"render_block_core_site_title( ${1:\\$attributes:array} )","description":"Renders the `core/site-title` block on the server."},"ƒ: register_block_core_site_title":{"prefix":["register_block_core_site_title","rbcst"],"body":"register_block_core_site_title(  )","description":"Registers the `core/site-title` block on the server."},"ƒ: render_block_core_social_link":{"prefix":["render_block_core_social_link","rbcsl"],"body":"render_block_core_social_link( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the `core/social-link` block on server."},"ƒ: register_block_core_social_link":{"prefix":["register_block_core_social_link","rbcsl"],"body":"register_block_core_social_link(  )","description":"Registers the `core/social-link` blocks."},"ƒ: block_core_social_link_get_icon":{"prefix":["block_core_social_link_get_icon","bcslgi"],"body":"block_core_social_link_get_icon( ${1:\\$service:string} )","description":"Returns the SVG for social link."},"ƒ: block_core_social_link_get_name":{"prefix":["block_core_social_link_get_name","bcslgn"],"body":"block_core_social_link_get_name( ${1:\\$service:string} )","description":"Returns the brand name for social link."},"ƒ: block_core_social_link_services":{"prefix":["block_core_social_link_services","bcsls"],"body":"block_core_social_link_services( ${1:\\$service:string}, ${2:\\$field:string} )","description":"Returns the SVG for social link."},"ƒ: block_core_social_link_get_color_styles":{"prefix":["block_core_social_link_get_color_styles","bcslgcs"],"body":"block_core_social_link_get_color_styles( ${1:\\$context:array} )","description":"Returns CSS styles for icon and icon background colors."},"ƒ: block_core_social_link_get_color_classes":{"prefix":["block_core_social_link_get_color_classes","bcslgcc"],"body":"block_core_social_link_get_color_classes( ${1:\\$context:array} )","description":"Returns CSS classes for icon and icon background colors."},"ƒ: render_block_core_tag_cloud":{"prefix":["render_block_core_tag_cloud","rbctc"],"body":"render_block_core_tag_cloud( ${1:\\$attributes:array} )","description":"Renders the `core/tag-cloud` block on server."},"ƒ: register_block_core_tag_cloud":{"prefix":["register_block_core_tag_cloud","rbctc"],"body":"register_block_core_tag_cloud(  )","description":"Registers the `core/tag-cloud` block on server."},"ƒ: render_block_core_template_part":{"prefix":["render_block_core_template_part","rbctp"],"body":"render_block_core_template_part( ${1:\\$attributes:array} )","description":"Renders the `core/template-part` block on the server."},"ƒ: build_template_part_block_area_variations":{"prefix":["build_template_part_block_area_variations","btpbav"],"body":"build_template_part_block_area_variations( ${1:\\$instance_variations:array} )","description":"Returns an array of area variation objects for the template part block."},"ƒ: build_template_part_block_instance_variations":{"prefix":["build_template_part_block_instance_variations","btpbiv"],"body":"build_template_part_block_instance_variations(  )","description":"Returns an array of instance variation objects for the template part block"},"ƒ: build_template_part_block_variations":{"prefix":["build_template_part_block_variations","btpbv"],"body":"build_template_part_block_variations(  )","description":"Returns an array of all template part block variations."},"ƒ: register_block_core_template_part":{"prefix":["register_block_core_template_part","rbctp"],"body":"register_block_core_template_part(  )","description":"Registers the `core/template-part` block on the server."},"ƒ: render_block_core_term_description":{"prefix":["render_block_core_term_description","rbctd"],"body":"render_block_core_term_description( ${1:\\$attributes:array} )","description":"Renders the `core/term-description` block on the server."},"ƒ: register_block_core_term_description":{"prefix":["register_block_core_term_description","rbctd"],"body":"register_block_core_term_description(  )","description":"Registers the `core/term-description` block on the server."},"ƒ: render_block_core_widget_group":{"prefix":["render_block_core_widget_group","rbcwg"],"body":"render_block_core_widget_group( ${1:\\$attributes:array}, ${2:\\$content:string}, ${3:\\$block:WP_Block} )","description":"Renders the 'core/widget-group' block."},"ƒ: register_block_core_widget_group":{"prefix":["register_block_core_widget_group","rbcwg"],"body":"register_block_core_widget_group(  )","description":"Registers the 'core/widget-group' block."},"ƒ: note_sidebar_being_rendered":{"prefix":["note_sidebar_being_rendered","nsbr"],"body":"note_sidebar_being_rendered( ${1:\\$index:int|string} )","description":"Make a note of the sidebar being rendered before WordPress starts rendering it. This lets us get to the current sidebar in render_block_core_widget_group()."},"ƒ: discard_sidebar_being_rendered":{"prefix":["discard_sidebar_being_rendered","dsbr"],"body":"discard_sidebar_being_rendered(  )","description":"Clear whatever we set in note_sidebar_being_rendered() after WordPress finishes rendering a sidebar."},"ƒ: remove_block_asset_path_prefix":{"prefix":["remove_block_asset_path_prefix","rbapp"],"body":"remove_block_asset_path_prefix( ${1:\\$asset_handle_or_path:string} )","description":"Removes the block asset's path prefix if provided."},"ƒ: generate_block_asset_handle":{"prefix":["generate_block_asset_handle","gbah"],"body":"generate_block_asset_handle( ${1:\\$block_name:string}, ${2:\\$field_name:string}, ${3:\\$index:int} )","description":"Generates the name for an asset based on the name of the block and the field name provided."},"ƒ: get_block_asset_url":{"prefix":["get_block_asset_url","gbau"],"body":"get_block_asset_url( ${1:\\$path:string} )","description":"Gets the URL to a block asset."},"ƒ: register_block_script_module_id":{"prefix":["register_block_script_module_id","rbsmi"],"body":"register_block_script_module_id( ${1:\\$metadata:array}, ${2:\\$field_name:string}, ${3:\\$index:int} )","description":"Finds a script module ID for the selected block metadata field. It detects when a path to file was provided and optionally finds a corresponding asset file with details necessary to register the script module under with an automatically generated module ID. It returns unprocessed script module ID otherwise."},"ƒ: register_block_script_handle":{"prefix":["register_block_script_handle","rbsh"],"body":"register_block_script_handle( ${1:\\$metadata:array}, ${2:\\$field_name:string}, ${3:\\$index:int} )","description":"Finds a script handle for the selected block metadata field. It detects when a path to file was provided and optionally finds a corresponding asset file with details necessary to register the script under automatically generated handle name. It returns unprocessed script handle otherwise."},"ƒ: register_block_style_handle":{"prefix":["register_block_style_handle","rbsh"],"body":"register_block_style_handle( ${1:\\$metadata:array}, ${2:\\$field_name:string}, ${3:\\$index:int} )","description":"Finds a style handle for the block metadata field. It detects when a path to file was provided and registers the style under automatically generated handle name. It returns unprocessed style handle otherwise."},"ƒ: get_block_metadata_i18n_schema":{"prefix":["get_block_metadata_i18n_schema","gbmis"],"body":"get_block_metadata_i18n_schema(  )","description":"Gets i18n schema for block's metadata read from `block.json` file."},"ƒ: wp_register_block_types_from_metadata_collection":{"prefix":["wp_register_block_types_from_metadata_collection","wrbtfmc"],"body":"wp_register_block_types_from_metadata_collection( ${1:\\$path:string}, ${2:\\$manifest:string} )","description":"Registers all block types from a block metadata collection."},"ƒ: wp_register_block_metadata_collection":{"prefix":["wp_register_block_metadata_collection","wrbmc"],"body":"wp_register_block_metadata_collection( ${1:\\$path:string}, ${2:\\$manifest:string} )","description":"Registers a block metadata collection."},"ƒ: register_block_type_from_metadata":{"prefix":["register_block_type_from_metadata","rbtfm"],"body":"register_block_type_from_metadata( ${1:\\$file_or_folder:string}, ${2:\\$args:array} )","description":"Registers a block type from the metadata stored in the `block.json` file."},"ƒ: register_block_type":{"prefix":["register_block_type","rbt"],"body":"register_block_type( ${1:\\$block_type:string|WP_Block_Type}, ${2:\\$args:array} )","description":"Registers a block type. The recommended way is to register a block type using the metadata stored in the `block.json` file."},"ƒ: unregister_block_type":{"prefix":["unregister_block_type","ubt"],"body":"unregister_block_type( ${1:\\$name:string|WP_Block_Type} )","description":"Unregisters a block type."},"ƒ: has_blocks":{"prefix":["has_blocks","hb"],"body":"has_blocks( ${1:\\$post:int|string|WP_Post|null|null} )","description":"Determines whether a post or content string has blocks."},"ƒ: has_block":{"prefix":["has_block","hb"],"body":"has_block( ${1:\\$block_name:string}, ${2:\\$post:int|string|WP_Post|null|null} )","description":"Determines whether a $post or a string contains a specific block type."},"ƒ: get_dynamic_block_names":{"prefix":["get_dynamic_block_names","gdbn"],"body":"get_dynamic_block_names(  )","description":"Returns an array of the names of all registered dynamic block types."},"ƒ: get_hooked_blocks":{"prefix":["get_hooked_blocks","ghb"],"body":"get_hooked_blocks(  )","description":"Retrieves block types hooked into the given block, grouped by anchor block type and the relative position."},"ƒ: insert_hooked_blocks_into_rest_response":{"prefix":["insert_hooked_blocks_into_rest_response","ihbirr"],"body":"insert_hooked_blocks_into_rest_response( ${1:\\$response:WP_REST_Response}, ${2:\\$post:WP_Post} )","description":"Hooks into the REST API response for the Posts endpoint and adds the first and last inner blocks."},"ƒ: serialize_block_attributes":{"prefix":["serialize_block_attributes","sba"],"body":"serialize_block_attributes( ${1:\\$block_attributes:array} )","description":"Given an array of attributes, returns a string in the serialized attributes format prepared for post content."},"ƒ: strip_core_block_namespace":{"prefix":["strip_core_block_namespace","scbn"],"body":"strip_core_block_namespace( ${1:\\$block_name:string|null|null} )","description":"Returns the block name to use for serialization. This will remove the default \"core/\" namespace from a block name."},"ƒ: get_comment_delimited_block_content":{"prefix":["get_comment_delimited_block_content","gcdbc"],"body":"get_comment_delimited_block_content( ${1:\\$block_name:string|null}, ${2:\\$block_attributes:array}, ${3:\\$block_content:string} )","description":"Returns the content of a block, including comment delimiters."},"ƒ: serialize_block":{"prefix":["serialize_block","sb"],"body":"serialize_block( ${1:\\$block:array} )","description":"Returns the content of a block, including comment delimiters, serializing all attributes from the given parsed block."},"ƒ: serialize_blocks":{"prefix":["serialize_blocks","sb"],"body":"serialize_blocks( ${1:\\$blocks:array[]} )","description":"Returns a joined string of the aggregate serialization of the given parsed blocks."},"ƒ: resolve_pattern_blocks":{"prefix":["resolve_pattern_blocks","rpb"],"body":"resolve_pattern_blocks( ${1:\\$blocks:array} )","description":"Replaces patterns in a block tree with their content."},"ƒ: filter_block_content":{"prefix":["filter_block_content","fbc"],"body":"filter_block_content( ${1:\\$text:string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"Filters and sanitizes block content to remove non-allowable HTML from parsed block attribute values."},"ƒ: filter_block_kses":{"prefix":["filter_block_kses","fbk"],"body":"filter_block_kses( ${1:\\$block:WP_Block_Parser_Block}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"Filters and sanitizes a parsed block to remove non-allowable HTML from block attribute values."},"ƒ: filter_block_kses_value":{"prefix":["filter_block_kses_value","fbkv"],"body":"filter_block_kses_value( ${1:\\$value:string[]|string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]}, ${4:\\$block_context:array|null} )","description":"Filters and sanitizes a parsed block attribute value to remove non-allowable HTML."},"ƒ: filter_block_core_template_part_attributes":{"prefix":["filter_block_core_template_part_attributes","fbctpa"],"body":"filter_block_core_template_part_attributes( ${1:\\$attribute_value:string}, ${2:\\$attribute_name:string}, ${3:\\$allowed_html:array[]|string} )","description":"Sanitizes the value of the Template Part block's `tagName` attribute."},"ƒ: excerpt_remove_blocks":{"prefix":["excerpt_remove_blocks","erb"],"body":"excerpt_remove_blocks( ${1:\\$content:string} )","description":"Parses blocks out of a content string, and renders those appropriate for the excerpt."},"ƒ: excerpt_remove_footnotes":{"prefix":["excerpt_remove_footnotes","erf"],"body":"excerpt_remove_footnotes( ${1:\\$content:string} )","description":"Parses footnotes markup out of a content string, and renders those appropriate for the excerpt."},"ƒ: render_block":{"prefix":["render_block","rb"],"body":"render_block( ${1:\\$parsed_block:array} )","description":"Renders a single block into a HTML string."},"ƒ: parse_blocks":{"prefix":["parse_blocks","pb"],"body":"parse_blocks( ${1:\\$content:string} )","description":"Parses blocks out of a content string."},"ƒ: do_blocks":{"prefix":["do_blocks","db"],"body":"do_blocks( ${1:\\$content:string} )","description":"Parses dynamic blocks out of `post_content` and re-renders them."},"ƒ: block_version":{"prefix":["block_version","bv"],"body":"block_version( ${1:\\$content:string} )","description":"Returns the current version of the block format that the content string is using."},"ƒ: register_block_style":{"prefix":["register_block_style","rbs"],"body":"register_block_style( ${1:\\$block_name:string|string[]}, ${2:\\$style_properties:array} )","description":"Registers a new block style."},"ƒ: unregister_block_style":{"prefix":["unregister_block_style","ubs"],"body":"unregister_block_style( ${1:\\$block_name:string}, ${2:\\$block_style_name:string} )","description":"Unregisters a block style."},"ƒ: block_has_support":{"prefix":["block_has_support","bhs"],"body":"block_has_support( ${1:\\$block_type:WP_Block_Type}, ${2:\\$feature:string|array}, ${3:\\$default_value:mixed} )","description":"Checks whether the current block type supports the feature requested."},"ƒ: wp_migrate_old_typography_shape":{"prefix":["wp_migrate_old_typography_shape","wmots"],"body":"wp_migrate_old_typography_shape( ${1:\\$metadata:array} )","description":"Converts typography keys declared under `supports.*` to `supports.typography.*`."},"ƒ: build_query_vars_from_query_block":{"prefix":["build_query_vars_from_query_block","bqvfqb"],"body":"build_query_vars_from_query_block( ${1:\\$block:WP_Block}, ${2:\\$page:int} )","description":"Helper function that constructs a WP_Query args array from a `Query` block properties."},"ƒ: get_query_pagination_arrow":{"prefix":["get_query_pagination_arrow","gqpa"],"body":"get_query_pagination_arrow( ${1:\\$block:WP_Block}, ${2:\\$is_next:bool} )","description":"Helper function that returns the proper pagination arrow HTML for `QueryPaginationNext` and `QueryPaginationPrevious` blocks based on the provided `paginationArrow` from `QueryPagination` context."},"ƒ: build_comment_query_vars_from_block":{"prefix":["build_comment_query_vars_from_block","bcqvfb"],"body":"build_comment_query_vars_from_block( ${1:\\$block:WP_Block} )","description":"Helper function that constructs a comment query vars array from the passed block properties."},"ƒ: get_comments_pagination_arrow":{"prefix":["get_comments_pagination_arrow","gcpa"],"body":"get_comments_pagination_arrow( ${1:\\$block:WP_Block}, ${2:\\$pagination_type:string} )","description":"Helper function that returns the proper pagination arrow HTML for `CommentsPaginationNext` and `CommentsPaginationPrevious` blocks based on the provided `paginationArrow` from `CommentsPagination` context."},"ƒ: wp_list_bookmarks":{"prefix":["wp_list_bookmarks","wlb"],"body":"wp_list_bookmarks( ${1:\\$args:string|array} )","description":"Retrieves or echoes all of the bookmarks."},"ƒ: get_bookmark":{"prefix":["get_bookmark","gb"],"body":"get_bookmark( ${1:\\$bookmark:int|stdClass}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves bookmark data."},"ƒ: get_bookmark_field":{"prefix":["get_bookmark_field","gbf"],"body":"get_bookmark_field( ${1:\\$field:string}, ${2:\\$bookmark:int}, ${3:\\$context:string} )","description":"Retrieves single bookmark data item or field."},"ƒ: get_bookmarks":{"prefix":["get_bookmarks","gb"],"body":"get_bookmarks( ${1:\\$args:string|array} )","description":"Retrieves the list of bookmarks."},"ƒ: sanitize_bookmark":{"prefix":["sanitize_bookmark","sb"],"body":"sanitize_bookmark( ${1:\\$bookmark:stdClass|array}, ${2:\\$context:string} )","description":"Sanitizes all bookmark fields."},"ƒ: sanitize_bookmark_field":{"prefix":["sanitize_bookmark_field","sbf"],"body":"sanitize_bookmark_field( ${1:\\$field:string}, ${2:\\$value:mixed}, ${3:\\$bookmark_id:int}, ${4:\\$context:string} )","description":"Sanitizes a bookmark field."},"ƒ: clean_bookmark_cache":{"prefix":["clean_bookmark_cache","cbc"],"body":"clean_bookmark_cache( ${1:\\$bookmark_id:int} )","description":"Deletes the bookmark cache."},"ƒ: wp_cache_flush_group":{"prefix":["wp_cache_flush_group","wcfg"],"body":"wp_cache_flush_group( ${1:\\$group:string} )","description":"Removes all cache items in a group, if the object cache implementation supports it."},"ƒ: wp_cache_supports":{"prefix":["wp_cache_supports","wcs"],"body":"wp_cache_supports( ${1:\\$feature:string} )","description":"Determines whether the object cache implementation supports a particular feature."},"ƒ: wp_cache_init":{"prefix":["wp_cache_init","wci"],"body":"wp_cache_init(  )","description":"Sets up Object Cache Global and assigns it."},"ƒ: wp_cache_add":{"prefix":["wp_cache_add","wca"],"body":"wp_cache_add( ${1:\\$key:int|string}, ${2:\\$data:mixed}, ${3:\\$group:string}, ${4:\\$expire:int} )","description":"Adds data to the cache, if the cache key doesn't already exist."},"ƒ: wp_cache_add_multiple":{"prefix":["wp_cache_add_multiple","wcam"],"body":"wp_cache_add_multiple( ${1:\\$data:array}, ${2:\\$group:string}, ${3:\\$expire:int} )","description":"Adds multiple values to the cache in one call."},"ƒ: wp_cache_replace":{"prefix":["wp_cache_replace","wcr"],"body":"wp_cache_replace( ${1:\\$key:int|string}, ${2:\\$data:mixed}, ${3:\\$group:string}, ${4:\\$expire:int} )","description":"Replaces the contents of the cache with new data."},"ƒ: wp_cache_set":{"prefix":["wp_cache_set","wcs"],"body":"wp_cache_set( ${1:\\$key:int|string}, ${2:\\$data:mixed}, ${3:\\$group:string}, ${4:\\$expire:int} )","description":"Saves the data to the cache."},"ƒ: wp_cache_set_multiple":{"prefix":["wp_cache_set_multiple","wcsm"],"body":"wp_cache_set_multiple( ${1:\\$data:array}, ${2:\\$group:string}, ${3:\\$expire:int} )","description":"Sets multiple values to the cache in one call."},"ƒ: wp_cache_get":{"prefix":["wp_cache_get","wcg"],"body":"wp_cache_get( ${1:\\$key:int|string}, ${2:\\$group:string}, ${3:\\$force:bool}, ${4:\\$found:bool|null} )","description":"Retrieves the cache contents from the cache by key and group."},"ƒ: wp_cache_get_multiple":{"prefix":["wp_cache_get_multiple","wcgm"],"body":"wp_cache_get_multiple( ${1:\\$keys:array}, ${2:\\$group:string}, ${3:\\$force:bool} )","description":"Retrieves multiple values from the cache in one call."},"ƒ: wp_cache_delete":{"prefix":["wp_cache_delete","wcd"],"body":"wp_cache_delete( ${1:\\$key:int|string}, ${2:\\$group:string} )","description":"Removes the cache contents matching key and group."},"ƒ: wp_cache_delete_multiple":{"prefix":["wp_cache_delete_multiple","wcdm"],"body":"wp_cache_delete_multiple( ${1:\\$keys:array}, ${2:\\$group:string} )","description":"Deletes multiple values from the cache in one call."},"ƒ: wp_cache_incr":{"prefix":["wp_cache_incr","wci"],"body":"wp_cache_incr( ${1:\\$key:int|string}, ${2:\\$offset:int}, ${3:\\$group:string} )","description":"Increments numeric cache item's value."},"ƒ: wp_cache_decr":{"prefix":["wp_cache_decr","wcd"],"body":"wp_cache_decr( ${1:\\$key:int|string}, ${2:\\$offset:int}, ${3:\\$group:string} )","description":"Decrements numeric cache item's value."},"ƒ: wp_cache_flush":{"prefix":["wp_cache_flush","wcf"],"body":"wp_cache_flush(  )","description":"Removes all cache items."},"ƒ: wp_cache_flush_runtime":{"prefix":["wp_cache_flush_runtime","wcfr"],"body":"wp_cache_flush_runtime(  )","description":"Removes all cache items from the in-memory runtime cache."},"ƒ: wp_cache_close":{"prefix":["wp_cache_close","wcc"],"body":"wp_cache_close(  )","description":"Closes the cache."},"ƒ: wp_cache_add_global_groups":{"prefix":["wp_cache_add_global_groups","wcagg"],"body":"wp_cache_add_global_groups( ${1:\\$groups:string|string[]} )","description":"Adds a group or set of groups to the list of global groups."},"ƒ: wp_cache_add_non_persistent_groups":{"prefix":["wp_cache_add_non_persistent_groups","wcanpg"],"body":"wp_cache_add_non_persistent_groups( ${1:\\$groups:string|string[]} )","description":"Adds a group or set of groups to the list of non-persistent groups."},"ƒ: wp_cache_switch_to_blog":{"prefix":["wp_cache_switch_to_blog","wcstb"],"body":"wp_cache_switch_to_blog( ${1:\\$blog_id:int} )","description":"Switches the internal blog ID."},"ƒ: wp_cache_reset":{"prefix":["wp_cache_reset","wcr"],"body":"wp_cache_reset(  )","description":"Resets internal cache keys and structures."},"ƒ: redirect_canonical":{"prefix":["redirect_canonical","rc"],"body":"redirect_canonical( ${1:\\$requested_url:string|null}, ${2:\\$do_redirect:bool} )","description":"Redirects incoming links to the proper URL based on the site url."},"ƒ: strip_fragment_from_url":{"prefix":["strip_fragment_from_url","sffu"],"body":"strip_fragment_from_url( ${1:\\$url:string} )","description":"Strips the #fragment from a URL, if one is present."},"ƒ: redirect_guess_404_permalink":{"prefix":["redirect_guess_404_permalink","rg4p"],"body":"redirect_guess_404_permalink(  )","description":"Attempts to guess the correct URL for a 404 request based on query vars."},"ƒ: wp_redirect_admin_locations":{"prefix":["wp_redirect_admin_locations","wral"],"body":"wp_redirect_admin_locations(  )","description":"Redirects a variety of shorthand URLs to the admin."},"ƒ: map_meta_cap":{"prefix":["map_meta_cap","mmc"],"body":"map_meta_cap( ${1:\\$cap:string}, ${2:\\$user_id:int}, ${3:\\$args:mixed} )","description":"Maps a capability to the primitive capabilities required of the given user to satisfy the capability being checked."},"ƒ: current_user_can":{"prefix":["current_user_can","cuc"],"body":"current_user_can( ${1:\\$capability:string}, ${2:\\$args:mixed} )","description":"Returns whether the current user has the specified capability."},"ƒ: current_user_can_for_site":{"prefix":["current_user_can_for_site","cucfs"],"body":"current_user_can_for_site( ${1:\\$site_id:int}, ${2:\\$capability:string}, ${3:\\$args:mixed} )","description":"Returns whether the current user has the specified capability for a given site."},"ƒ: author_can":{"prefix":["author_can","ac"],"body":"author_can( ${1:\\$post:int|WP_Post}, ${2:\\$capability:string}, ${3:\\$args:mixed} )","description":"Returns whether the author of the supplied post has the specified capability."},"ƒ: user_can":{"prefix":["user_can","uc"],"body":"user_can( ${1:\\$user:int|WP_User}, ${2:\\$capability:string}, ${3:\\$args:mixed} )","description":"Returns whether a particular user has the specified capability."},"ƒ: user_can_for_site":{"prefix":["user_can_for_site","ucfs"],"body":"user_can_for_site( ${1:\\$user:int|WP_User}, ${2:\\$site_id:int}, ${3:\\$capability:string}, ${4:\\$args:mixed} )","description":"Returns whether a particular user has the specified capability for a given site."},"ƒ: wp_roles":{"prefix":["wp_roles","wr"],"body":"wp_roles(  )","description":"Retrieves the global WP_Roles instance and instantiates it if necessary."},"ƒ: get_role":{"prefix":["get_role","gr"],"body":"get_role( ${1:\\$role:string} )","description":"Retrieves role object."},"ƒ: add_role":{"prefix":["add_role","ar"],"body":"add_role( ${1:\\$role:string}, ${2:\\$display_name:string}, ${3:\\$capabilities:bool[]} )","description":"Adds a role, if it does not exist."},"ƒ: remove_role":{"prefix":["remove_role","rr"],"body":"remove_role( ${1:\\$role:string} )","description":"Removes a role, if it exists."},"ƒ: get_super_admins":{"prefix":["get_super_admins","gsa"],"body":"get_super_admins(  )","description":"Retrieves a list of super admins."},"ƒ: is_super_admin":{"prefix":["is_super_admin","isa"],"body":"is_super_admin( ${1:\\$user_id:int|false} )","description":"Determines whether user is a site admin."},"ƒ: grant_super_admin":{"prefix":["grant_super_admin","gsa"],"body":"grant_super_admin( ${1:\\$user_id:int} )","description":"Grants Super Admin privileges."},"ƒ: revoke_super_admin":{"prefix":["revoke_super_admin","rsa"],"body":"revoke_super_admin( ${1:\\$user_id:int} )","description":"Revokes Super Admin privileges."},"ƒ: wp_maybe_grant_install_languages_cap":{"prefix":["wp_maybe_grant_install_languages_cap","wmgilc"],"body":"wp_maybe_grant_install_languages_cap( ${1:\\$allcaps:bool[]} )","description":"Filters the user capabilities to grant the 'install_languages' capability as necessary."},"ƒ: wp_maybe_grant_resume_extensions_caps":{"prefix":["wp_maybe_grant_resume_extensions_caps","wmgrec"],"body":"wp_maybe_grant_resume_extensions_caps( ${1:\\$allcaps:bool[]} )","description":"Filters the user capabilities to grant the 'resume_plugins' and 'resume_themes' capabilities as necessary."},"ƒ: wp_maybe_grant_site_health_caps":{"prefix":["wp_maybe_grant_site_health_caps","wmgshc"],"body":"wp_maybe_grant_site_health_caps( ${1:\\$allcaps:bool[]}, ${2:\\$caps:string[]}, ${3:\\$args:array}, ${4:\\$user:WP_User} )","description":"Filters the user capabilities to grant the 'view_site_health_checks' capabilities as necessary."},"ƒ: get_category_link":{"prefix":["get_category_link","gcl"],"body":"get_category_link( ${1:\\$category:int|object} )","description":"Retrieves category link URL."},"ƒ: get_category_parents":{"prefix":["get_category_parents","gcp"],"body":"get_category_parents( ${1:\\$category_id:int}, ${2:\\$link:bool}, ${3:\\$separator:string}, ${4:\\$nicename:bool}, ${5:\\$deprecated:array} )","description":"Retrieves category parents with separator."},"ƒ: get_the_category":{"prefix":["get_the_category","gtc"],"body":"get_the_category( ${1:\\$post_id:int} )","description":"Retrieves post categories."},"ƒ: get_the_category_by_ID":{"prefix":["get_the_category_by_ID","gtcbI"],"body":"get_the_category_by_ID( ${1:\\$cat_id:int} )","description":"Retrieves category name based on category ID."},"ƒ: get_the_category_list":{"prefix":["get_the_category_list","gtcl"],"body":"get_the_category_list( ${1:\\$separator:string}, ${2:\\$parents:string}, ${3:\\$post_id:int} )","description":"Retrieves category list for a post in either HTML list or custom format."},"ƒ: in_category":{"prefix":["in_category","ic"],"body":"in_category( ${1:\\$category:int|string|int[]|string[]}, ${2:\\$post:int|WP_Post|null} )","description":"Checks if the current post is within any of the given categories."},"ƒ: the_category":{"prefix":["the_category","tc"],"body":"the_category( ${1:\\$separator:string}, ${2:\\$parents:string}, ${3:\\$post_id:int} )","description":"Displays category list for a post in either HTML list or custom format."},"ƒ: category_description":{"prefix":["category_description","cd"],"body":"category_description( ${1:\\$category:int} )","description":"Retrieves category description."},"ƒ: wp_dropdown_categories":{"prefix":["wp_dropdown_categories","wdc"],"body":"wp_dropdown_categories( ${1:\\$args:array|string} )","description":"Displays or retrieves the HTML dropdown list of categories."},"ƒ: wp_list_categories":{"prefix":["wp_list_categories","wlc"],"body":"wp_list_categories( ${1:\\$args:array|string} )","description":"Displays or retrieves the HTML list of categories."},"ƒ: wp_tag_cloud":{"prefix":["wp_tag_cloud","wtc"],"body":"wp_tag_cloud( ${1:\\$args:array|string} )","description":"Displays a tag cloud."},"ƒ: default_topic_count_scale":{"prefix":["default_topic_count_scale","dtcs"],"body":"default_topic_count_scale( ${1:\\$count:int} )","description":"Default topic count scaling for tag links."},"ƒ: wp_generate_tag_cloud":{"prefix":["wp_generate_tag_cloud","wgtc"],"body":"wp_generate_tag_cloud( ${1:\\$tags:WP_Term[]}, ${2:\\$args:string|array} )","description":"Generates a tag cloud (heatmap) from provided data."},"ƒ: walk_category_tree":{"prefix":["walk_category_tree","wct"],"body":"walk_category_tree( ${1:\\$args:mixed} )","description":"Retrieves HTML list content for category list."},"ƒ: walk_category_dropdown_tree":{"prefix":["walk_category_dropdown_tree","wcdt"],"body":"walk_category_dropdown_tree( ${1:\\$args:mixed} )","description":"Retrieves HTML dropdown (select) content for category list."},"ƒ: get_tag_link":{"prefix":["get_tag_link","gtl"],"body":"get_tag_link( ${1:\\$tag:int|object} )","description":"Retrieves the link to the tag."},"ƒ: get_the_tags":{"prefix":["get_the_tags","gtt"],"body":"get_the_tags( ${1:\\$post:int|WP_Post} )","description":"Retrieves the tags for a post."},"ƒ: get_the_tag_list":{"prefix":["get_the_tag_list","gttl"],"body":"get_the_tag_list( ${1:\\$before:string}, ${2:\\$sep:string}, ${3:\\$after:string}, ${4:\\$post_id:int} )","description":"Retrieves the tags for a post formatted as a string."},"ƒ: the_tags":{"prefix":["the_tags","tt"],"body":"the_tags( ${1:\\$before:string|null}, ${2:\\$sep:string}, ${3:\\$after:string} )","description":"Displays the tags for a post."},"ƒ: tag_description":{"prefix":["tag_description","td"],"body":"tag_description( ${1:\\$tag:int} )","description":"Retrieves tag description."},"ƒ: term_description":{"prefix":["term_description","td"],"body":"term_description( ${1:\\$term:int}, ${2:\\$deprecated:null} )","description":"Retrieves term description."},"ƒ: get_the_terms":{"prefix":["get_the_terms","gtt"],"body":"get_the_terms( ${1:\\$post:int|WP_Post}, ${2:\\$taxonomy:string} )","description":"Retrieves the terms of the taxonomy that are attached to the post."},"ƒ: get_the_term_list":{"prefix":["get_the_term_list","gttl"],"body":"get_the_term_list( ${1:\\$post_id:int}, ${2:\\$taxonomy:string}, ${3:\\$before:string}, ${4:\\$sep:string}, ${5:\\$after:string} )","description":"Retrieves a post's terms as a list with specified format."},"ƒ: get_term_parents_list":{"prefix":["get_term_parents_list","gtpl"],"body":"get_term_parents_list( ${1:\\$term_id:int}, ${2:\\$taxonomy:string}, ${3:\\$args:string|array} )","description":"Retrieves term parents with separator."},"ƒ: the_terms":{"prefix":["the_terms","tt"],"body":"the_terms( ${1:\\$post_id:int}, ${2:\\$taxonomy:string}, ${3:\\$before:string}, ${4:\\$sep:string}, ${5:\\$after:string} )","description":"Displays the terms for a post in a list."},"ƒ: has_category":{"prefix":["has_category","hc"],"body":"has_category( ${1:\\$category:string|int|array}, ${2:\\$post:int|WP_Post|null} )","description":"Checks if the current post has any of given category."},"ƒ: has_tag":{"prefix":["has_tag","ht"],"body":"has_tag( ${1:\\$tag:string|int|array}, ${2:\\$post:int|WP_Post|null} )","description":"Checks if the current post has any of given tags."},"ƒ: has_term":{"prefix":["has_term","ht"],"body":"has_term( ${1:\\$term:string|int|array}, ${2:\\$taxonomy:string}, ${3:\\$post:int|WP_Post|null} )","description":"Checks if the current post has any of given terms."},"ƒ: get_categories":{"prefix":["get_categories","gc"],"body":"get_categories( ${1:\\$args:string|array} )","description":"Retrieves a list of category objects."},"ƒ: get_category":{"prefix":["get_category","gc"],"body":"get_category( ${1:\\$category:int|object}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves category data given a category ID or category object."},"ƒ: get_category_by_path":{"prefix":["get_category_by_path","gcbp"],"body":"get_category_by_path( ${1:\\$category_path:string}, ${2:\\$full_match:bool}, ${3:\\$output:string} )","description":"Retrieves a category based on URL containing the category slug."},"ƒ: get_category_by_slug":{"prefix":["get_category_by_slug","gcbs"],"body":"get_category_by_slug( ${1:\\$slug:string} )","description":"Retrieves a category object by category slug."},"ƒ: get_cat_ID":{"prefix":["get_cat_ID","gcI"],"body":"get_cat_ID( ${1:\\$cat_name:string} )","description":"Retrieves the ID of a category from its name."},"ƒ: get_cat_name":{"prefix":["get_cat_name","gcn"],"body":"get_cat_name( ${1:\\$cat_id:int} )","description":"Retrieves the name of a category from its ID."},"ƒ: cat_is_ancestor_of":{"prefix":["cat_is_ancestor_of","ciao"],"body":"cat_is_ancestor_of( ${1:\\$cat1:int|object}, ${2:\\$cat2:int|object} )","description":"Checks if a category is an ancestor of another category."},"ƒ: sanitize_category":{"prefix":["sanitize_category","sc"],"body":"sanitize_category( ${1:\\$category:object|array}, ${2:\\$context:string} )","description":"Sanitizes category data based on context."},"ƒ: sanitize_category_field":{"prefix":["sanitize_category_field","scf"],"body":"sanitize_category_field( ${1:\\$field:string}, ${2:\\$value:mixed}, ${3:\\$cat_id:int}, ${4:\\$context:string} )","description":"Sanitizes data in single category key field."},"ƒ: get_tags":{"prefix":["get_tags","gt"],"body":"get_tags( ${1:\\$args:string|array} )","description":"Retrieves all post tags."},"ƒ: get_tag":{"prefix":["get_tag","gt"],"body":"get_tag( ${1:\\$tag:int|WP_Term|object}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves a post tag by tag ID or tag object."},"ƒ: clean_category_cache":{"prefix":["clean_category_cache","ccc"],"body":"clean_category_cache( ${1:\\$id:int} )","description":"Removes the category cache data based on ID."},"ƒ: read_big_endian":{"prefix":["read_big_endian","rbe"],"body":"read_big_endian( ${1:\\$input:mixed}, ${2:\\$num_bytes:int} )","description":"Reads an unsigned integer with most significant bits first."},"ƒ: read":{"prefix":["read"],"body":"read( ${1:\\$handle:Avifinfostream}, ${2:\\$num_bytes:int} )","description":"Reads bytes and advances the stream position by the same count."},"ƒ: skip":{"prefix":["skip"],"body":"skip( ${1:\\$handle:Avifinfostream}, ${2:\\$num_bytes:int} )","description":"Advances the stream position by the given offset."},"ƒ: stripos":{"prefix":["stripos"],"body":"stripos( ${1:\\$haystack:mixed}, ${2:\\$needle:mixed} )","description":""},"ƒ: wp_simplepie_autoload":{"prefix":["wp_simplepie_autoload","wsa"],"body":"wp_simplepie_autoload( ${1:\\$class:string} )","description":"WordPress autoloader for SimplePie."},"ƒ: register_block_pattern_category":{"prefix":["register_block_pattern_category","rbpc"],"body":"register_block_pattern_category( ${1:\\$category_name:string}, ${2:\\$category_properties:array} )","description":"Registers a new pattern category."},"ƒ: unregister_block_pattern_category":{"prefix":["unregister_block_pattern_category","ubpc"],"body":"unregister_block_pattern_category( ${1:\\$category_name:string} )","description":"Unregisters a pattern category."},"ƒ: register_block_pattern":{"prefix":["register_block_pattern","rbp"],"body":"register_block_pattern( ${1:\\$pattern_name:string}, ${2:\\$pattern_properties:array} )","description":"Registers a new block pattern."},"ƒ: unregister_block_pattern":{"prefix":["unregister_block_pattern","ubp"],"body":"unregister_block_pattern( ${1:\\$pattern_name:string} )","description":"Unregisters a block pattern."},"ƒ: get_block_wrapper_attributes":{"prefix":["get_block_wrapper_attributes","gbwa"],"body":"get_block_wrapper_attributes( ${1:\\$extra_attributes:string[]} )","description":"Generates a string of attributes by applying to the current block being rendered all of the features that the block supports."},"ƒ: get_comment_author":{"prefix":["get_comment_author","gca"],"body":"get_comment_author( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the author of the current comment."},"ƒ: comment_author":{"prefix":["comment_author","ca"],"body":"comment_author( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the author of the current comment."},"ƒ: get_comment_author_email":{"prefix":["get_comment_author_email","gcae"],"body":"get_comment_author_email( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the email of the author of the current comment."},"ƒ: comment_author_email":{"prefix":["comment_author_email","cae"],"body":"comment_author_email( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the email of the author of the current global $comment."},"ƒ: comment_author_email_link":{"prefix":["comment_author_email_link","cael"],"body":"comment_author_email_link( ${1:\\$link_text:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$comment:int|WP_Comment|null} )","description":"Displays the HTML email link to the author of the current comment."},"ƒ: get_comment_author_email_link":{"prefix":["get_comment_author_email_link","gcael"],"body":"get_comment_author_email_link( ${1:\\$link_text:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$comment:int|WP_Comment|null} )","description":"Returns the HTML email link to the author of the current comment."},"ƒ: get_comment_author_link":{"prefix":["get_comment_author_link","gcal"],"body":"get_comment_author_link( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the HTML link to the URL of the author of the current comment."},"ƒ: comment_author_link":{"prefix":["comment_author_link","cal"],"body":"comment_author_link( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the HTML link to the URL of the author of the current comment."},"ƒ: get_comment_author_IP":{"prefix":["get_comment_author_IP","gcaI"],"body":"get_comment_author_IP( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the IP address of the author of the current comment."},"ƒ: comment_author_IP":{"prefix":["comment_author_IP","caI"],"body":"comment_author_IP( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the IP address of the author of the current comment."},"ƒ: get_comment_author_url":{"prefix":["get_comment_author_url","gcau"],"body":"get_comment_author_url( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the URL of the author of the current comment, not linked."},"ƒ: comment_author_url":{"prefix":["comment_author_url","cau"],"body":"comment_author_url( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the URL of the author of the current comment, not linked."},"ƒ: get_comment_author_url_link":{"prefix":["get_comment_author_url_link","gcaul"],"body":"get_comment_author_url_link( ${1:\\$link_text:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$comment:int|WP_Comment} )","description":"Retrieves the HTML link of the URL of the author of the current comment."},"ƒ: comment_author_url_link":{"prefix":["comment_author_url_link","caul"],"body":"comment_author_url_link( ${1:\\$link_text:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$comment:int|WP_Comment} )","description":"Displays the HTML link of the URL of the author of the current comment."},"ƒ: comment_class":{"prefix":["comment_class","cc"],"body":"comment_class( ${1:\\$css_class:string|string[]}, ${2:\\$comment:int|WP_Comment|null}, ${3:\\$post:int|WP_Post|null}, ${4:\\$display:bool} )","description":"Generates semantic classes for each comment element."},"ƒ: get_comment_class":{"prefix":["get_comment_class","gcc"],"body":"get_comment_class( ${1:\\$css_class:string|string[]}, ${2:\\$comment_id:int|WP_Comment|null}, ${3:\\$post:int|WP_Post|null} )","description":"Returns the classes for the comment div as an array."},"ƒ: get_comment_date":{"prefix":["get_comment_date","gcd"],"body":"get_comment_date( ${1:\\$format:string}, ${2:\\$comment_id:int|WP_Comment} )","description":"Retrieves the comment date of the current comment."},"ƒ: comment_date":{"prefix":["comment_date","cd"],"body":"comment_date( ${1:\\$format:string}, ${2:\\$comment_id:int|WP_Comment} )","description":"Displays the comment date of the current comment."},"ƒ: get_comment_excerpt":{"prefix":["get_comment_excerpt","gce"],"body":"get_comment_excerpt( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the excerpt of the given comment."},"ƒ: comment_excerpt":{"prefix":["comment_excerpt","ce"],"body":"comment_excerpt( ${1:\\$comment_id:int|WP_Comment} )","description":"Displays the excerpt of the current comment."},"ƒ: get_comment_ID":{"prefix":["get_comment_ID","gcI"],"body":"get_comment_ID(  )","description":"Retrieves the comment ID of the current comment."},"ƒ: comment_ID":{"prefix":["comment_ID","cI"],"body":"comment_ID(  )","description":"Displays the comment ID of the current comment."},"ƒ: get_comment_link":{"prefix":["get_comment_link","gcl"],"body":"get_comment_link( ${1:\\$comment:WP_Comment|int|null|null}, ${2:\\$args:array} )","description":"Retrieves the link to a given comment."},"ƒ: get_comments_link":{"prefix":["get_comments_link","gcl"],"body":"get_comments_link( ${1:\\$post:int|WP_Post} )","description":"Retrieves the link to the current post comments."},"ƒ: comments_link":{"prefix":["comments_link","cl"],"body":"comments_link( ${1:\\$deprecated:string}, ${2:\\$deprecated_2:string} )","description":"Displays the link to the current post comments."},"ƒ: get_comments_number":{"prefix":["get_comments_number","gcn"],"body":"get_comments_number( ${1:\\$post:int|WP_Post} )","description":"Retrieves the amount of comments a post has."},"ƒ: comments_number":{"prefix":["comments_number","cn"],"body":"comments_number( ${1:\\$zero:string|false}, ${2:\\$one:string|false}, ${3:\\$more:string|false}, ${4:\\$post:int|WP_Post} )","description":"Displays the language string for the number of comments the current post has."},"ƒ: get_comments_number_text":{"prefix":["get_comments_number_text","gcnt"],"body":"get_comments_number_text( ${1:\\$zero:string}, ${2:\\$one:string}, ${3:\\$more:string}, ${4:\\$post:int|WP_Post} )","description":"Displays the language string for the number of comments the current post has."},"ƒ: get_comment_text":{"prefix":["get_comment_text","gct"],"body":"get_comment_text( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$args:array} )","description":"Retrieves the text of the current comment."},"ƒ: comment_text":{"prefix":["comment_text","ct"],"body":"comment_text( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$args:array} )","description":"Displays the text of the current comment."},"ƒ: get_comment_time":{"prefix":["get_comment_time","gct"],"body":"get_comment_time( ${1:\\$format:string}, ${2:\\$gmt:bool}, ${3:\\$translate:bool}, ${4:\\$comment_id:int|WP_Comment} )","description":"Retrieves the comment time of the current comment."},"ƒ: comment_time":{"prefix":["comment_time","ct"],"body":"comment_time( ${1:\\$format:string}, ${2:\\$comment_id:int|WP_Comment} )","description":"Displays the comment time of the current comment."},"ƒ: get_comment_type":{"prefix":["get_comment_type","gct"],"body":"get_comment_type( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the comment type of the current comment."},"ƒ: comment_type":{"prefix":["comment_type","ct"],"body":"comment_type( ${1:\\$commenttxt:string|false}, ${2:\\$trackbacktxt:string|false}, ${3:\\$pingbacktxt:string|false} )","description":"Displays the comment type of the current comment."},"ƒ: get_trackback_url":{"prefix":["get_trackback_url","gtu"],"body":"get_trackback_url(  )","description":"Retrieves the current post's trackback URL."},"ƒ: trackback_url":{"prefix":["trackback_url","tu"],"body":"trackback_url( ${1:\\$deprecated_echo:bool} )","description":"Displays the current post's trackback URL."},"ƒ: trackback_rdf":{"prefix":["trackback_rdf","tr"],"body":"trackback_rdf( ${1:\\$deprecated:int|string} )","description":"Generates and displays the RDF for the trackback information of current post."},"ƒ: comments_open":{"prefix":["comments_open","co"],"body":"comments_open( ${1:\\$post:int|WP_Post|null} )","description":"Determines whether the current post is open for comments."},"ƒ: pings_open":{"prefix":["pings_open","po"],"body":"pings_open( ${1:\\$post:int|WP_Post|null} )","description":"Determines whether the current post is open for pings."},"ƒ: wp_comment_form_unfiltered_html_nonce":{"prefix":["wp_comment_form_unfiltered_html_nonce","wcfuhn"],"body":"wp_comment_form_unfiltered_html_nonce(  )","description":"Displays form token for unfiltered comments."},"ƒ: comments_template":{"prefix":["comments_template","ct"],"body":"comments_template( ${1:\\$file:string}, ${2:\\$separate_comments:bool} )","description":"Loads the comment template specified in $file."},"ƒ: comments_popup_link":{"prefix":["comments_popup_link","cpl"],"body":"comments_popup_link( ${1:\\$zero:false|string}, ${2:\\$one:false|string}, ${3:\\$more:false|string}, ${4:\\$css_class:string}, ${5:\\$none:false|string} )","description":"Displays the link to the comments for the current post ID."},"ƒ: get_comment_reply_link":{"prefix":["get_comment_reply_link","gcrl"],"body":"get_comment_reply_link( ${1:\\$args:array}, ${2:\\$comment:int|WP_Comment|null}, ${3:\\$post:int|WP_Post|null} )","description":"Retrieves HTML content for reply to comment link."},"ƒ: comment_reply_link":{"prefix":["comment_reply_link","crl"],"body":"comment_reply_link( ${1:\\$args:array}, ${2:\\$comment:int|WP_Comment|null}, ${3:\\$post:int|WP_Post|null} )","description":"Displays the HTML content for reply to comment link."},"ƒ: get_post_reply_link":{"prefix":["get_post_reply_link","gprl"],"body":"get_post_reply_link( ${1:\\$args:array}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves HTML content for reply to post link."},"ƒ: post_reply_link":{"prefix":["post_reply_link","prl"],"body":"post_reply_link( ${1:\\$args:array}, ${2:\\$post:int|WP_Post|null} )","description":"Displays the HTML content for reply to post link."},"ƒ: get_cancel_comment_reply_link":{"prefix":["get_cancel_comment_reply_link","gccrl"],"body":"get_cancel_comment_reply_link( ${1:\\$link_text:string}, ${2:\\$post:int|WP_Post|null|null} )","description":"Retrieves HTML content for cancel comment reply link."},"ƒ: cancel_comment_reply_link":{"prefix":["cancel_comment_reply_link","ccrl"],"body":"cancel_comment_reply_link( ${1:\\$link_text:string} )","description":"Displays HTML content for cancel comment reply link."},"ƒ: get_comment_id_fields":{"prefix":["get_comment_id_fields","gcif"],"body":"get_comment_id_fields( ${1:\\$post:int|WP_Post|null|null} )","description":"Retrieves hidden input HTML for replying to comments."},"ƒ: comment_id_fields":{"prefix":["comment_id_fields","cif"],"body":"comment_id_fields( ${1:\\$post:int|WP_Post|null|null} )","description":"Outputs hidden input HTML for replying to comments."},"ƒ: wp_list_comments":{"prefix":["wp_list_comments","wlc"],"body":"wp_list_comments( ${1:\\$args:string|array}, ${2:\\$comments:WP_Comment[]|null} )","description":"Displays a list of comments."},"ƒ: comment_form":{"prefix":["comment_form","cf"],"body":"comment_form( ${1:\\$args:array}, ${2:\\$post:int|WP_Post|null} )","description":"Outputs a complete commenting form for use within a template."},"ƒ: check_comment":{"prefix":["check_comment","cc"],"body":"check_comment( ${1:\\$author:string}, ${2:\\$email:string}, ${3:\\$url:string}, ${4:\\$comment:string}, ${5:\\$user_ip:string}, ${6:\\$user_agent:string}, ${7:\\$comment_type:string} )","description":"Checks whether a comment passes internal checks to be allowed to add."},"ƒ: get_approved_comments":{"prefix":["get_approved_comments","gac"],"body":"get_approved_comments( ${1:\\$post_id:int}, ${2:\\$args:array} )","description":"Retrieves the approved comments for a post."},"ƒ: get_comment":{"prefix":["get_comment","gc"],"body":"get_comment( ${1:\\$comment:WP_Comment|string|int|null}, ${2:\\$output:string} )","description":"Retrieves comment data given a comment ID or comment object."},"ƒ: get_comments":{"prefix":["get_comments","gc"],"body":"get_comments( ${1:\\$args:string|array} )","description":"Retrieves a list of comments."},"ƒ: get_comment_statuses":{"prefix":["get_comment_statuses","gcs"],"body":"get_comment_statuses(  )","description":"Retrieves all of the WordPress supported comment statuses."},"ƒ: get_default_comment_status":{"prefix":["get_default_comment_status","gdcs"],"body":"get_default_comment_status( ${1:\\$post_type:string}, ${2:\\$comment_type:string} )","description":"Gets the default comment status for a post type."},"ƒ: get_lastcommentmodified":{"prefix":["get_lastcommentmodified","gl"],"body":"get_lastcommentmodified( ${1:\\$timezone:string} )","description":"Retrieves the date the last comment was modified."},"ƒ: get_comment_count":{"prefix":["get_comment_count","gcc"],"body":"get_comment_count( ${1:\\$post_id:int} )","description":"Retrieves the total comment counts for the whole site or a single post."},"ƒ: add_comment_meta":{"prefix":["add_comment_meta","acm"],"body":"add_comment_meta( ${1:\\$comment_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$unique:bool} )","description":"Adds meta data field to a comment."},"ƒ: delete_comment_meta":{"prefix":["delete_comment_meta","dcm"],"body":"delete_comment_meta( ${1:\\$comment_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Removes metadata matching criteria from a comment."},"ƒ: get_comment_meta":{"prefix":["get_comment_meta","gcm"],"body":"get_comment_meta( ${1:\\$comment_id:int}, ${2:\\$key:string}, ${3:\\$single:bool} )","description":"Retrieves comment meta field for a comment."},"ƒ: wp_lazyload_comment_meta":{"prefix":["wp_lazyload_comment_meta","wlcm"],"body":"wp_lazyload_comment_meta( ${1:\\$comment_ids:array} )","description":"Queue comment meta for lazy-loading."},"ƒ: update_comment_meta":{"prefix":["update_comment_meta","ucm"],"body":"update_comment_meta( ${1:\\$comment_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$prev_value:mixed} )","description":"Updates comment meta field based on comment ID."},"ƒ: wp_set_comment_cookies":{"prefix":["wp_set_comment_cookies","wscc"],"body":"wp_set_comment_cookies( ${1:\\$comment:WP_Comment}, ${2:\\$user:WP_User}, ${3:\\$cookies_consent:bool} )","description":"Sets the cookies used to store an unauthenticated commentator's identity. Typically used to recall previous comments by this commentator that are still held in moderation."},"ƒ: sanitize_comment_cookies":{"prefix":["sanitize_comment_cookies","scc"],"body":"sanitize_comment_cookies(  )","description":"Sanitizes the cookies sent to the user already."},"ƒ: wp_allow_comment":{"prefix":["wp_allow_comment","wac"],"body":"wp_allow_comment( ${1:\\$commentdata:array}, ${2:\\$wp_error:bool} )","description":"Validates whether this comment is allowed to be made."},"ƒ: check_comment_flood_db":{"prefix":["check_comment_flood_db","ccfd"],"body":"check_comment_flood_db(  )","description":"Hooks WP's native database-based comment-flood check."},"ƒ: wp_check_comment_flood":{"prefix":["wp_check_comment_flood","wccf"],"body":"wp_check_comment_flood( ${1:\\$is_flood:bool}, ${2:\\$ip:string}, ${3:\\$email:string}, ${4:\\$date:string}, ${5:\\$avoid_die:bool} )","description":"Checks whether comment flooding is occurring."},"ƒ: separate_comments":{"prefix":["separate_comments","sc"],"body":"separate_comments( ${1:\\$comments:WP_Comment[]} )","description":"Separates an array of comments into an array keyed by comment_type."},"ƒ: get_comment_pages_count":{"prefix":["get_comment_pages_count","gcpc"],"body":"get_comment_pages_count( ${1:\\$comments:WP_Comment[]|null}, ${2:\\$per_page:int|null}, ${3:\\$threaded:bool|null} )","description":"Calculates the total number of comment pages."},"ƒ: get_page_of_comment":{"prefix":["get_page_of_comment","gpoc"],"body":"get_page_of_comment( ${1:\\$comment_id:int}, ${2:\\$args:array} )","description":"Calculates what page number a comment will appear on for comment paging."},"ƒ: wp_get_comment_fields_max_lengths":{"prefix":["wp_get_comment_fields_max_lengths","wgcfml"],"body":"wp_get_comment_fields_max_lengths(  )","description":"Retrieves the maximum character lengths for the comment form fields."},"ƒ: wp_check_comment_data_max_lengths":{"prefix":["wp_check_comment_data_max_lengths","wccdml"],"body":"wp_check_comment_data_max_lengths( ${1:\\$comment_data:array} )","description":"Compares the lengths of comment data against the maximum character limits."},"ƒ: wp_check_comment_data":{"prefix":["wp_check_comment_data","wccd"],"body":"wp_check_comment_data( ${1:\\$comment_data:array} )","description":"Checks whether comment data passes internal checks or has disallowed content."},"ƒ: wp_check_comment_disallowed_list":{"prefix":["wp_check_comment_disallowed_list","wccdl"],"body":"wp_check_comment_disallowed_list( ${1:\\$author:string}, ${2:\\$email:string}, ${3:\\$url:string}, ${4:\\$comment:string}, ${5:\\$user_ip:string}, ${6:\\$user_agent:string} )","description":"Checks if a comment contains disallowed characters or words."},"ƒ: wp_count_comments":{"prefix":["wp_count_comments","wcc"],"body":"wp_count_comments( ${1:\\$post_id:int} )","description":"Retrieves the total comment counts for the whole site or a single post."},"ƒ: wp_delete_comment":{"prefix":["wp_delete_comment","wdc"],"body":"wp_delete_comment( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$force_delete:bool} )","description":"Trashes or deletes a comment."},"ƒ: wp_trash_comment":{"prefix":["wp_trash_comment","wtc"],"body":"wp_trash_comment( ${1:\\$comment_id:int|WP_Comment} )","description":"Moves a comment to the Trash"},"ƒ: wp_untrash_comment":{"prefix":["wp_untrash_comment","wuc"],"body":"wp_untrash_comment( ${1:\\$comment_id:int|WP_Comment} )","description":"Removes a comment from the Trash"},"ƒ: wp_spam_comment":{"prefix":["wp_spam_comment","wsc"],"body":"wp_spam_comment( ${1:\\$comment_id:int|WP_Comment} )","description":"Marks a comment as Spam."},"ƒ: wp_unspam_comment":{"prefix":["wp_unspam_comment","wuc"],"body":"wp_unspam_comment( ${1:\\$comment_id:int|WP_Comment} )","description":"Removes a comment from the Spam."},"ƒ: wp_get_comment_status":{"prefix":["wp_get_comment_status","wgcs"],"body":"wp_get_comment_status( ${1:\\$comment_id:int|WP_Comment} )","description":"Retrieves the status of a comment by comment ID."},"ƒ: wp_transition_comment_status":{"prefix":["wp_transition_comment_status","wtcs"],"body":"wp_transition_comment_status( ${1:\\$new_status:string}, ${2:\\$old_status:string}, ${3:\\$comment:WP_Comment} )","description":"Calls hooks for when a comment status transition occurs."},"ƒ: wp_get_current_commenter":{"prefix":["wp_get_current_commenter","wgcc"],"body":"wp_get_current_commenter(  )","description":"Gets current commenter's name, email, and URL."},"ƒ: wp_get_unapproved_comment_author_email":{"prefix":["wp_get_unapproved_comment_author_email","wgucae"],"body":"wp_get_unapproved_comment_author_email(  )","description":"Gets unapproved comment author's email."},"ƒ: wp_insert_comment":{"prefix":["wp_insert_comment","wic"],"body":"wp_insert_comment( ${1:\\$commentdata:array} )","description":"Inserts a comment into the database."},"ƒ: wp_filter_comment":{"prefix":["wp_filter_comment","wfc"],"body":"wp_filter_comment( ${1:\\$commentdata:array} )","description":"Filters and sanitizes comment data."},"ƒ: wp_throttle_comment_flood":{"prefix":["wp_throttle_comment_flood","wtcf"],"body":"wp_throttle_comment_flood( ${1:\\$block:bool}, ${2:\\$time_lastcomment:int}, ${3:\\$time_newcomment:int} )","description":"Determines whether a comment should be blocked because of comment flood."},"ƒ: wp_new_comment":{"prefix":["wp_new_comment","wnc"],"body":"wp_new_comment( ${1:\\$commentdata:array}, ${2:\\$wp_error:bool} )","description":"Adds a new comment to the database."},"ƒ: wp_new_comment_notify_moderator":{"prefix":["wp_new_comment_notify_moderator","wncnm"],"body":"wp_new_comment_notify_moderator( ${1:\\$comment_id:int} )","description":"Sends a comment moderation notification to the comment moderator."},"ƒ: wp_new_comment_notify_postauthor":{"prefix":["wp_new_comment_notify_postauthor","wncnp"],"body":"wp_new_comment_notify_postauthor( ${1:\\$comment_id:int} )","description":"Sends a notification of a new comment to the post author."},"ƒ: wp_set_comment_status":{"prefix":["wp_set_comment_status","wscs"],"body":"wp_set_comment_status( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$comment_status:string}, ${3:\\$wp_error:bool} )","description":"Sets the status of a comment."},"ƒ: wp_update_comment":{"prefix":["wp_update_comment","wuc"],"body":"wp_update_comment( ${1:\\$commentarr:array}, ${2:\\$wp_error:bool} )","description":"Updates an existing comment in the database."},"ƒ: wp_defer_comment_counting":{"prefix":["wp_defer_comment_counting","wdcc"],"body":"wp_defer_comment_counting( ${1:\\$defer:bool|null} )","description":"Determines whether to defer comment counting."},"ƒ: wp_update_comment_count":{"prefix":["wp_update_comment_count","wucc"],"body":"wp_update_comment_count( ${1:\\$post_id:int|null}, ${2:\\$do_deferred:bool} )","description":"Updates the comment count for post(s)."},"ƒ: wp_update_comment_count_now":{"prefix":["wp_update_comment_count_now","wuccn"],"body":"wp_update_comment_count_now( ${1:\\$post_id:int} )","description":"Updates the comment count for the post."},"ƒ: discover_pingback_server_uri":{"prefix":["discover_pingback_server_uri","dpsu"],"body":"discover_pingback_server_uri( ${1:\\$url:string}, ${2:\\$deprecated:string} )","description":"Finds a pingback server URI based on the given URL."},"ƒ: do_all_pings":{"prefix":["do_all_pings","dap"],"body":"do_all_pings(  )","description":"Performs all pingbacks, enclosures, trackbacks, and sends to pingback services."},"ƒ: do_all_pingbacks":{"prefix":["do_all_pingbacks","dap"],"body":"do_all_pingbacks(  )","description":"Performs all pingbacks."},"ƒ: do_all_enclosures":{"prefix":["do_all_enclosures","dae"],"body":"do_all_enclosures(  )","description":"Performs all enclosures."},"ƒ: do_all_trackbacks":{"prefix":["do_all_trackbacks","dat"],"body":"do_all_trackbacks(  )","description":"Performs all trackbacks."},"ƒ: do_trackbacks":{"prefix":["do_trackbacks","dt"],"body":"do_trackbacks( ${1:\\$post:int|WP_Post} )","description":"Performs trackbacks."},"ƒ: generic_ping":{"prefix":["generic_ping","gp"],"body":"generic_ping( ${1:\\$post_id:int} )","description":"Sends pings to all of the ping site services."},"ƒ: pingback":{"prefix":["pingback"],"body":"pingback( ${1:\\$content:string}, ${2:\\$post:int|WP_Post} )","description":"Pings back the links found in a post."},"ƒ: privacy_ping_filter":{"prefix":["privacy_ping_filter","ppf"],"body":"privacy_ping_filter( ${1:\\$sites:mixed} )","description":"Checks whether blog is public before returning sites."},"ƒ: trackback":{"prefix":["trackback"],"body":"trackback( ${1:\\$trackback_url:string}, ${2:\\$title:string}, ${3:\\$excerpt:string}, ${4:\\$post_id:int} )","description":"Sends a Trackback."},"ƒ: weblog_ping":{"prefix":["weblog_ping","wp"],"body":"weblog_ping( ${1:\\$server:string}, ${2:\\$path:string} )","description":"Sends a pingback."},"ƒ: pingback_ping_source_uri":{"prefix":["pingback_ping_source_uri","ppsu"],"body":"pingback_ping_source_uri( ${1:\\$source_uri:string} )","description":"Default filter attached to pingback_ping_source_uri to validate the pingback's Source URI."},"ƒ: xmlrpc_pingback_error":{"prefix":["xmlrpc_pingback_error","xpe"],"body":"xmlrpc_pingback_error( ${1:\\$ixr_error:IXR_Error} )","description":"Default filter attached to xmlrpc_pingback_error."},"ƒ: clean_comment_cache":{"prefix":["clean_comment_cache","ccc"],"body":"clean_comment_cache( ${1:\\$ids:int|array} )","description":"Removes a comment from the object cache."},"ƒ: update_comment_cache":{"prefix":["update_comment_cache","ucc"],"body":"update_comment_cache( ${1:\\$comments:WP_Comment[]}, ${2:\\$update_meta_cache:bool} )","description":"Updates the comment cache of given comments."},"ƒ: wp_handle_comment_submission":{"prefix":["wp_handle_comment_submission","whcs"],"body":"wp_handle_comment_submission( ${1:\\$comment_data:array} )","description":"Handles the submission of a comment, usually posted to wp-comments-post.php via a comment form."},"ƒ: wp_register_comment_personal_data_exporter":{"prefix":["wp_register_comment_personal_data_exporter","wrcpde"],"body":"wp_register_comment_personal_data_exporter( ${1:\\$exporters:array[]} )","description":"Registers the personal data exporter for comments."},"ƒ: wp_comments_personal_data_exporter":{"prefix":["wp_comments_personal_data_exporter","wcpde"],"body":"wp_comments_personal_data_exporter( ${1:\\$email_address:string}, ${2:\\$page:int} )","description":"Finds and exports personal data associated with an email address from the comments table."},"ƒ: wp_register_comment_personal_data_eraser":{"prefix":["wp_register_comment_personal_data_eraser","wrcpde"],"body":"wp_register_comment_personal_data_eraser( ${1:\\$erasers:array} )","description":"Registers the personal data eraser for comments."},"ƒ: wp_comments_personal_data_eraser":{"prefix":["wp_comments_personal_data_eraser","wcpde"],"body":"wp_comments_personal_data_eraser( ${1:\\$email_address:string}, ${2:\\$page:int} )","description":"Erases personal data associated with an email address from the comments table."},"ƒ: wp_cache_set_comments_last_changed":{"prefix":["wp_cache_set_comments_last_changed","wcsclc"],"body":"wp_cache_set_comments_last_changed(  )","description":"Sets the last changed time for the 'comment' cache group."},"ƒ: is_countable":{"prefix":["is_countable","ic"],"body":"is_countable( ${1:\\$value:mixed} )","description":"Polyfill for is_countable() function added in PHP 7.3."},"ƒ: array_key_first":{"prefix":["array_key_first","akf"],"body":"array_key_first( ${1:\\$array:array} )","description":"Polyfill for array_key_first() function added in PHP 7.3."},"ƒ: array_key_last":{"prefix":["array_key_last","akl"],"body":"array_key_last( ${1:\\$array:array} )","description":"Polyfill for `array_key_last()` function added in PHP 7.3."},"ƒ: array_is_list":{"prefix":["array_is_list","ail"],"body":"array_is_list( ${1:\\$arr:array} )","description":"Polyfill for `array_is_list()` function added in PHP 8.1."},"ƒ: str_contains":{"prefix":["str_contains","sc"],"body":"str_contains( ${1:\\$haystack:string}, ${2:\\$needle:string} )","description":"Polyfill for `str_contains()` function added in PHP 8.0."},"ƒ: str_starts_with":{"prefix":["str_starts_with","ssw"],"body":"str_starts_with( ${1:\\$haystack:string}, ${2:\\$needle:string} )","description":"Polyfill for `str_starts_with()` function added in PHP 8.0."},"ƒ: str_ends_with":{"prefix":["str_ends_with","sew"],"body":"str_ends_with( ${1:\\$haystack:string}, ${2:\\$needle:string} )","description":"Polyfill for `str_ends_with()` function added in PHP 8.0."},"ƒ: array_find":{"prefix":["array_find","af"],"body":"array_find( ${1:\\$array:array}, ${2:\\$callback:callable} )","description":"Polyfill for `array_find()` function added in PHP 8.4."},"ƒ: array_find_key":{"prefix":["array_find_key","afk"],"body":"array_find_key( ${1:\\$array:array}, ${2:\\$callback:callable} )","description":"Polyfill for `array_find_key()` function added in PHP 8.4."},"ƒ: array_any":{"prefix":["array_any","aa"],"body":"array_any( ${1:\\$array:array}, ${2:\\$callback:callable} )","description":"Polyfill for `array_any()` function added in PHP 8.4."},"ƒ: array_all":{"prefix":["array_all","aa"],"body":"array_all( ${1:\\$array:array}, ${2:\\$callback:callable} )","description":"Polyfill for `array_all()` function added in PHP 8.4."},"ƒ: wp_schedule_single_event":{"prefix":["wp_schedule_single_event","wsse"],"body":"wp_schedule_single_event( ${1:\\$timestamp:int}, ${2:\\$hook:string}, ${3:\\$args:array}, ${4:\\$wp_error:bool} )","description":"Schedules an event to run only once."},"ƒ: wp_schedule_event":{"prefix":["wp_schedule_event","wse"],"body":"wp_schedule_event( ${1:\\$timestamp:int}, ${2:\\$recurrence:string}, ${3:\\$hook:string}, ${4:\\$args:array}, ${5:\\$wp_error:bool} )","description":"Schedules a recurring event."},"ƒ: wp_reschedule_event":{"prefix":["wp_reschedule_event","wre"],"body":"wp_reschedule_event( ${1:\\$timestamp:int}, ${2:\\$recurrence:string}, ${3:\\$hook:string}, ${4:\\$args:array}, ${5:\\$wp_error:bool} )","description":"Reschedules a recurring event."},"ƒ: wp_unschedule_event":{"prefix":["wp_unschedule_event","wue"],"body":"wp_unschedule_event( ${1:\\$timestamp:int}, ${2:\\$hook:string}, ${3:\\$args:array}, ${4:\\$wp_error:bool} )","description":"Unschedules a previously scheduled event."},"ƒ: wp_clear_scheduled_hook":{"prefix":["wp_clear_scheduled_hook","wcsh"],"body":"wp_clear_scheduled_hook( ${1:\\$hook:string}, ${2:\\$args:array}, ${3:\\$wp_error:bool} )","description":"Unschedules all events attached to the hook with the specified arguments."},"ƒ: wp_unschedule_hook":{"prefix":["wp_unschedule_hook","wuh"],"body":"wp_unschedule_hook( ${1:\\$hook:string}, ${2:\\$wp_error:bool} )","description":"Unschedules all events attached to the hook."},"ƒ: wp_get_scheduled_event":{"prefix":["wp_get_scheduled_event","wgse"],"body":"wp_get_scheduled_event( ${1:\\$hook:string}, ${2:\\$args:array}, ${3:\\$timestamp:int|null|null} )","description":"Retrieves a scheduled event."},"ƒ: wp_next_scheduled":{"prefix":["wp_next_scheduled","wns"],"body":"wp_next_scheduled( ${1:\\$hook:string}, ${2:\\$args:array} )","description":"Retrieves the timestamp of the next scheduled event for the given hook."},"ƒ: spawn_cron":{"prefix":["spawn_cron","sc"],"body":"spawn_cron( ${1:\\$gmt_time:int} )","description":"Sends a request to run cron through HTTP request that doesn't halt page loading."},"ƒ: wp_cron":{"prefix":["wp_cron","wc"],"body":"wp_cron(  )","description":"Registers _wp_cron() to run on the {@see 'wp_loaded'} action."},"ƒ: wp_get_schedules":{"prefix":["wp_get_schedules","wgs"],"body":"wp_get_schedules(  )","description":"Retrieves supported event recurrence schedules."},"ƒ: wp_get_schedule":{"prefix":["wp_get_schedule","wgs"],"body":"wp_get_schedule( ${1:\\$hook:string}, ${2:\\$args:array} )","description":"Retrieves the name of the recurrence schedule for an event."},"ƒ: wp_get_ready_cron_jobs":{"prefix":["wp_get_ready_cron_jobs","wgrcj"],"body":"wp_get_ready_cron_jobs(  )","description":"Retrieves cron jobs ready to be run."},"ƒ: wp_initial_constants":{"prefix":["wp_initial_constants","wic"],"body":"wp_initial_constants(  )","description":"Defines initial WordPress constants."},"ƒ: wp_plugin_directory_constants":{"prefix":["wp_plugin_directory_constants","wpdc"],"body":"wp_plugin_directory_constants(  )","description":"Defines plugin directory WordPress constants."},"ƒ: wp_cookie_constants":{"prefix":["wp_cookie_constants","wcc"],"body":"wp_cookie_constants(  )","description":"Defines cookie-related WordPress constants."},"ƒ: wp_ssl_constants":{"prefix":["wp_ssl_constants","wsc"],"body":"wp_ssl_constants(  )","description":"Defines SSL-related WordPress constants."},"ƒ: wp_functionality_constants":{"prefix":["wp_functionality_constants","wfc"],"body":"wp_functionality_constants(  )","description":"Defines functionality-related WordPress constants."},"ƒ: wp_templating_constants":{"prefix":["wp_templating_constants","wtc"],"body":"wp_templating_constants(  )","description":"Defines templating-related WordPress constants."},"ƒ: get_postdata":{"prefix":["get_postdata","gp"],"body":"get_postdata( ${1:\\$postid:int} )","description":"Retrieves all post data for a given post."},"ƒ: start_wp":{"prefix":["start_wp","sw"],"body":"start_wp(  )","description":"Sets up the WordPress Loop."},"ƒ: the_category_ID":{"prefix":["the_category_ID","tcI"],"body":"the_category_ID( ${1:\\$display:bool} )","description":"Returns or prints a category ID."},"ƒ: the_category_head":{"prefix":["the_category_head","tch"],"body":"the_category_head( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Prints a category with optional text before and after."},"ƒ: previous_post":{"prefix":["previous_post","pp"],"body":"previous_post( ${1:\\$format:string}, ${2:\\$previous:string}, ${3:\\$title:string}, ${4:\\$in_same_cat:string}, ${5:\\$limitprev:int}, ${6:\\$excluded_categories:string} )","description":"Prints a link to the previous post."},"ƒ: next_post":{"prefix":["next_post","np"],"body":"next_post( ${1:\\$format:string}, ${2:\\$next:string}, ${3:\\$title:string}, ${4:\\$in_same_cat:string}, ${5:\\$limitnext:int}, ${6:\\$excluded_categories:string} )","description":"Prints link to the next post."},"ƒ: user_can_create_post":{"prefix":["user_can_create_post","uccp"],"body":"user_can_create_post( ${1:\\$user_id:int}, ${2:\\$blog_id:int}, ${3:\\$category_id:int} )","description":"Whether user can create a post."},"ƒ: user_can_create_draft":{"prefix":["user_can_create_draft","uccd"],"body":"user_can_create_draft( ${1:\\$user_id:int}, ${2:\\$blog_id:int}, ${3:\\$category_id:int} )","description":"Whether user can create a post."},"ƒ: user_can_edit_post":{"prefix":["user_can_edit_post","ucep"],"body":"user_can_edit_post( ${1:\\$user_id:int}, ${2:\\$post_id:int}, ${3:\\$blog_id:int} )","description":"Whether user can edit a post."},"ƒ: user_can_delete_post":{"prefix":["user_can_delete_post","ucdp"],"body":"user_can_delete_post( ${1:\\$user_id:int}, ${2:\\$post_id:int}, ${3:\\$blog_id:int} )","description":"Whether user can delete a post."},"ƒ: user_can_set_post_date":{"prefix":["user_can_set_post_date","ucspd"],"body":"user_can_set_post_date( ${1:\\$user_id:int}, ${2:\\$blog_id:int}, ${3:\\$category_id:int} )","description":"Whether user can set new posts' dates."},"ƒ: user_can_edit_post_date":{"prefix":["user_can_edit_post_date","ucepd"],"body":"user_can_edit_post_date( ${1:\\$user_id:int}, ${2:\\$post_id:int}, ${3:\\$blog_id:int} )","description":"Whether user can delete a post."},"ƒ: user_can_edit_post_comments":{"prefix":["user_can_edit_post_comments","ucepc"],"body":"user_can_edit_post_comments( ${1:\\$user_id:int}, ${2:\\$post_id:int}, ${3:\\$blog_id:int} )","description":"Whether user can delete a post."},"ƒ: user_can_delete_post_comments":{"prefix":["user_can_delete_post_comments","ucdpc"],"body":"user_can_delete_post_comments( ${1:\\$user_id:int}, ${2:\\$post_id:int}, ${3:\\$blog_id:int} )","description":"Whether user can delete a post."},"ƒ: user_can_edit_user":{"prefix":["user_can_edit_user","uceu"],"body":"user_can_edit_user( ${1:\\$user_id:int}, ${2:\\$other_user:int} )","description":"Can user can edit other user."},"ƒ: get_linksbyname":{"prefix":["get_linksbyname","gl"],"body":"get_linksbyname( ${1:\\$cat_name:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$between:string}, ${5:\\$show_images:bool}, ${6:\\$orderby:string}, ${7:\\$show_description:bool}, ${8:\\$show_rating:bool}, ${9:\\$limit:int}, ${10:\\$show_updated:int} )","description":"Gets the links associated with category $cat_name."},"ƒ: wp_get_linksbyname":{"prefix":["wp_get_linksbyname","wgl"],"body":"wp_get_linksbyname( ${1:\\$category:string}, ${2:\\$args:string} )","description":"Gets the links associated with the named category."},"ƒ: get_linkobjectsbyname":{"prefix":["get_linkobjectsbyname","gl"],"body":"get_linkobjectsbyname( ${1:\\$cat_name:string}, ${2:\\$orderby:string}, ${3:\\$limit:int} )","description":"Gets an array of link objects associated with category $cat_name."},"ƒ: get_linkobjects":{"prefix":["get_linkobjects","gl"],"body":"get_linkobjects( ${1:\\$category:int}, ${2:\\$orderby:string}, ${3:\\$limit:int} )","description":"Gets an array of link objects associated with category n."},"ƒ: get_linksbyname_withrating":{"prefix":["get_linksbyname_withrating","glw"],"body":"get_linksbyname_withrating( ${1:\\$cat_name:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$between:string}, ${5:\\$show_images:bool}, ${6:\\$orderby:string}, ${7:\\$show_description:bool}, ${8:\\$limit:int}, ${9:\\$show_updated:int} )","description":"Gets the links associated with category 'cat_name' and display rating stars/chars."},"ƒ: get_links_withrating":{"prefix":["get_links_withrating","glw"],"body":"get_links_withrating( ${1:\\$category:int}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$between:string}, ${5:\\$show_images:bool}, ${6:\\$orderby:string}, ${7:\\$show_description:bool}, ${8:\\$limit:int}, ${9:\\$show_updated:int} )","description":"Gets the links associated with category n and display rating stars/chars."},"ƒ: get_autotoggle":{"prefix":["get_autotoggle","ga"],"body":"get_autotoggle( ${1:\\$id:int} )","description":"Gets the auto_toggle setting."},"ƒ: list_cats":{"prefix":["list_cats","lc"],"body":"list_cats( ${1:\\$optionall:int}, ${2:\\$all:string}, ${3:\\$sort_column:string}, ${4:\\$sort_order:string}, ${5:\\$file:string}, ${6:\\$list:bool}, ${7:\\$optiondates:int}, ${8:\\$optioncount:int}, ${9:\\$hide_empty:int}, ${10:\\$use_desc_for_title:int}, ${11:\\$children:bool}, ${12:\\$child_of:int}, ${13:\\$categories:int}, ${14:\\$recurse:int}, ${15:\\$feed:string}, ${16:\\$feed_image:string}, ${17:\\$exclude:string}, ${18:\\$hierarchical:bool} )","description":"Lists categories."},"ƒ: wp_list_cats":{"prefix":["wp_list_cats","wlc"],"body":"wp_list_cats( ${1:\\$args:string|array} )","description":"Lists categories."},"ƒ: dropdown_cats":{"prefix":["dropdown_cats","dc"],"body":"dropdown_cats( ${1:\\$optionall:int}, ${2:\\$all:string}, ${3:\\$orderby:string}, ${4:\\$order:string}, ${5:\\$show_last_update:int}, ${6:\\$show_count:int}, ${7:\\$hide_empty:int}, ${8:\\$optionnone:bool}, ${9:\\$selected:int}, ${10:\\$exclude:int} )","description":"Deprecated method for generating a drop-down of categories."},"ƒ: list_authors":{"prefix":["list_authors","la"],"body":"list_authors( ${1:\\$optioncount:bool}, ${2:\\$exclude_admin:bool}, ${3:\\$show_fullname:bool}, ${4:\\$hide_empty:bool}, ${5:\\$feed:string}, ${6:\\$feed_image:string} )","description":"Lists authors."},"ƒ: wp_get_post_cats":{"prefix":["wp_get_post_cats","wgpc"],"body":"wp_get_post_cats( ${1:\\$blogid:int}, ${2:\\$post_id:int} )","description":"Retrieves a list of post categories."},"ƒ: wp_set_post_cats":{"prefix":["wp_set_post_cats","wspc"],"body":"wp_set_post_cats( ${1:\\$blogid:int}, ${2:\\$post_id:int}, ${3:\\$post_categories:array} )","description":"Sets the categories that the post ID belongs to."},"ƒ: get_archives":{"prefix":["get_archives","ga"],"body":"get_archives( ${1:\\$type:string}, ${2:\\$limit:string}, ${3:\\$format:string}, ${4:\\$before:string}, ${5:\\$after:string}, ${6:\\$show_post_count:bool} )","description":"Retrieves a list of archives."},"ƒ: get_author_link":{"prefix":["get_author_link","gal"],"body":"get_author_link( ${1:\\$display:bool}, ${2:\\$author_id:int}, ${3:\\$author_nicename:string} )","description":"Returns or Prints link to the author's posts."},"ƒ: link_pages":{"prefix":["link_pages","lp"],"body":"link_pages( ${1:\\$before:string}, ${2:\\$after:string}, ${3:\\$next_or_number:string}, ${4:\\$nextpagelink:string}, ${5:\\$previouspagelink:string}, ${6:\\$pagelink:string}, ${7:\\$more_file:string} )","description":"Print list of pages based on arguments."},"ƒ: get_settings":{"prefix":["get_settings","gs"],"body":"get_settings( ${1:\\$option:string} )","description":"Get value based on option."},"ƒ: permalink_link":{"prefix":["permalink_link","pl"],"body":"permalink_link(  )","description":"Print the permalink of the current post in the loop."},"ƒ: permalink_single_rss":{"prefix":["permalink_single_rss","psr"],"body":"permalink_single_rss( ${1:\\$deprecated:string} )","description":"Print the permalink to the RSS feed."},"ƒ: wp_get_links":{"prefix":["wp_get_links","wgl"],"body":"wp_get_links( ${1:\\$args:string} )","description":"Gets the links associated with category."},"ƒ: get_links":{"prefix":["get_links","gl"],"body":"get_links( ${1:\\$category:int}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$between:string}, ${5:\\$show_images:bool}, ${6:\\$orderby:string}, ${7:\\$show_description:bool}, ${8:\\$show_rating:bool}, ${9:\\$limit:int}, ${10:\\$show_updated:int}, ${11:\\$display:bool} )","description":"Gets the links associated with category by ID."},"ƒ: get_links_list":{"prefix":["get_links_list","gll"],"body":"get_links_list( ${1:\\$order:string} )","description":"Output entire list of links by category."},"ƒ: links_popup_script":{"prefix":["links_popup_script","lps"],"body":"links_popup_script( ${1:\\$text:string}, ${2:\\$width:int}, ${3:\\$height:int}, ${4:\\$file:string}, ${5:\\$count:bool} )","description":"Show the link to the links popup and the number of links."},"ƒ: get_linkrating":{"prefix":["get_linkrating","gl"],"body":"get_linkrating( ${1:\\$link:object} )","description":"Legacy function that retrieved the value of a link's link_rating field."},"ƒ: get_linkcatname":{"prefix":["get_linkcatname","gl"],"body":"get_linkcatname( ${1:\\$id:int} )","description":"Gets the name of category by ID."},"ƒ: comments_rss_link":{"prefix":["comments_rss_link","crl"],"body":"comments_rss_link( ${1:\\$link_text:string} )","description":"Print RSS comment feed link."},"ƒ: get_category_rss_link":{"prefix":["get_category_rss_link","gcrl"],"body":"get_category_rss_link( ${1:\\$display:bool}, ${2:\\$cat_id:int} )","description":"Print/Return link to category RSS2 feed."},"ƒ: get_author_rss_link":{"prefix":["get_author_rss_link","garl"],"body":"get_author_rss_link( ${1:\\$display:bool}, ${2:\\$author_id:int} )","description":"Print/Return link to author RSS feed."},"ƒ: comments_rss":{"prefix":["comments_rss","cr"],"body":"comments_rss(  )","description":"Return link to the post RSS feed."},"ƒ: create_user":{"prefix":["create_user","cu"],"body":"create_user( ${1:\\$username:string}, ${2:\\$password:string}, ${3:\\$email:string} )","description":"An alias of wp_create_user()."},"ƒ: gzip_compression":{"prefix":["gzip_compression","gc"],"body":"gzip_compression(  )","description":"Unused function."},"ƒ: get_commentdata":{"prefix":["get_commentdata","gc"],"body":"get_commentdata( ${1:\\$comment_id:int}, ${2:\\$no_cache:int}, ${3:\\$include_unapproved:bool} )","description":"Retrieve an array of comment data about comment $comment_id."},"ƒ: get_catname":{"prefix":["get_catname","gc"],"body":"get_catname( ${1:\\$cat_id:int} )","description":"Retrieve the category name by the category ID."},"ƒ: get_category_children":{"prefix":["get_category_children","gcc"],"body":"get_category_children( ${1:\\$id:int}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$visited:array} )","description":"Retrieve category children list separated before and after the term IDs."},"ƒ: get_all_category_ids":{"prefix":["get_all_category_ids","gaci"],"body":"get_all_category_ids(  )","description":"Retrieves all category IDs."},"ƒ: get_the_author_description":{"prefix":["get_the_author_description","gtad"],"body":"get_the_author_description(  )","description":"Retrieve the description of the author of the current post."},"ƒ: the_author_description":{"prefix":["the_author_description","tad"],"body":"the_author_description(  )","description":"Display the description of the author of the current post."},"ƒ: get_the_author_login":{"prefix":["get_the_author_login","gtal"],"body":"get_the_author_login(  )","description":"Retrieve the login name of the author of the current post."},"ƒ: the_author_login":{"prefix":["the_author_login","tal"],"body":"the_author_login(  )","description":"Display the login name of the author of the current post."},"ƒ: get_the_author_firstname":{"prefix":["get_the_author_firstname","gtaf"],"body":"get_the_author_firstname(  )","description":"Retrieve the first name of the author of the current post."},"ƒ: the_author_firstname":{"prefix":["the_author_firstname","taf"],"body":"the_author_firstname(  )","description":"Display the first name of the author of the current post."},"ƒ: get_the_author_lastname":{"prefix":["get_the_author_lastname","gtal"],"body":"get_the_author_lastname(  )","description":"Retrieve the last name of the author of the current post."},"ƒ: the_author_lastname":{"prefix":["the_author_lastname","tal"],"body":"the_author_lastname(  )","description":"Display the last name of the author of the current post."},"ƒ: get_the_author_nickname":{"prefix":["get_the_author_nickname","gtan"],"body":"get_the_author_nickname(  )","description":"Retrieve the nickname of the author of the current post."},"ƒ: the_author_nickname":{"prefix":["the_author_nickname","tan"],"body":"the_author_nickname(  )","description":"Display the nickname of the author of the current post."},"ƒ: get_the_author_email":{"prefix":["get_the_author_email","gtae"],"body":"get_the_author_email(  )","description":"Retrieve the email of the author of the current post."},"ƒ: the_author_email":{"prefix":["the_author_email","tae"],"body":"the_author_email(  )","description":"Display the email of the author of the current post."},"ƒ: get_the_author_icq":{"prefix":["get_the_author_icq","gtai"],"body":"get_the_author_icq(  )","description":"Retrieve the ICQ number of the author of the current post."},"ƒ: the_author_icq":{"prefix":["the_author_icq","tai"],"body":"the_author_icq(  )","description":"Display the ICQ number of the author of the current post."},"ƒ: get_the_author_yim":{"prefix":["get_the_author_yim","gtay"],"body":"get_the_author_yim(  )","description":"Retrieve the Yahoo! IM name of the author of the current post."},"ƒ: the_author_yim":{"prefix":["the_author_yim","tay"],"body":"the_author_yim(  )","description":"Display the Yahoo! IM name of the author of the current post."},"ƒ: get_the_author_msn":{"prefix":["get_the_author_msn","gtam"],"body":"get_the_author_msn(  )","description":"Retrieve the MSN address of the author of the current post."},"ƒ: the_author_msn":{"prefix":["the_author_msn","tam"],"body":"the_author_msn(  )","description":"Display the MSN address of the author of the current post."},"ƒ: get_the_author_aim":{"prefix":["get_the_author_aim","gtaa"],"body":"get_the_author_aim(  )","description":"Retrieve the AIM address of the author of the current post."},"ƒ: the_author_aim":{"prefix":["the_author_aim","taa"],"body":"the_author_aim(  )","description":"Display the AIM address of the author of the current post."},"ƒ: get_author_name":{"prefix":["get_author_name","gan"],"body":"get_author_name( ${1:\\$auth_id:int} )","description":"Retrieve the specified author's preferred display name."},"ƒ: get_the_author_url":{"prefix":["get_the_author_url","gtau"],"body":"get_the_author_url(  )","description":"Retrieve the URL to the home page of the author of the current post."},"ƒ: the_author_url":{"prefix":["the_author_url","tau"],"body":"the_author_url(  )","description":"Display the URL to the home page of the author of the current post."},"ƒ: get_the_author_ID":{"prefix":["get_the_author_ID","gtaI"],"body":"get_the_author_ID(  )","description":"Retrieve the ID of the author of the current post."},"ƒ: the_author_ID":{"prefix":["the_author_ID","taI"],"body":"the_author_ID(  )","description":"Display the ID of the author of the current post."},"ƒ: the_content_rss":{"prefix":["the_content_rss","tcr"],"body":"the_content_rss( ${1:\\$more_link_text:string}, ${2:\\$stripteaser:int}, ${3:\\$more_file:string}, ${4:\\$cut:int}, ${5:\\$encode_html:int} )","description":"Display the post content for the feed."},"ƒ: make_url_footnote":{"prefix":["make_url_footnote","muf"],"body":"make_url_footnote( ${1:\\$content:string} )","description":"Strip HTML and put links at the bottom of stripped content."},"ƒ: translate_with_context":{"prefix":["translate_with_context","twc"],"body":"translate_with_context( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Translates $text like translate(), but assumes that the text contains a context after its last vertical bar."},"ƒ: get_alloptions":{"prefix":["get_alloptions","ga"],"body":"get_alloptions(  )","description":"Retrieve all autoload options, or all options if no autoloaded ones exist."},"ƒ: get_the_attachment_link":{"prefix":["get_the_attachment_link","gtal"],"body":"get_the_attachment_link( ${1:\\$id:int}, ${2:\\$fullsize:bool}, ${3:\\$max_dims:array}, ${4:\\$permalink:bool} )","description":"Retrieve HTML content of attachment image with link."},"ƒ: get_attachment_icon_src":{"prefix":["get_attachment_icon_src","gais"],"body":"get_attachment_icon_src( ${1:\\$id:int}, ${2:\\$fullsize:bool} )","description":"Retrieve icon URL and Path."},"ƒ: get_attachment_icon":{"prefix":["get_attachment_icon","gai"],"body":"get_attachment_icon( ${1:\\$id:int}, ${2:\\$fullsize:bool}, ${3:\\$max_dims:array} )","description":"Retrieve HTML content of icon attachment image element."},"ƒ: get_attachment_innerHTML":{"prefix":["get_attachment_innerHTML","gai"],"body":"get_attachment_innerHTML( ${1:\\$id:int}, ${2:\\$fullsize:bool}, ${3:\\$max_dims:array} )","description":"Retrieve HTML content of image element."},"ƒ: get_link":{"prefix":["get_link","gl"],"body":"get_link( ${1:\\$bookmark_id:int}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves bookmark data based on ID."},"ƒ: clean_url":{"prefix":["clean_url","cu"],"body":"clean_url( ${1:\\$url:string}, ${2:\\$protocols:array|null}, ${3:\\$context:string} )","description":"Checks and cleans a URL."},"ƒ: js_escape":{"prefix":["js_escape","je"],"body":"js_escape( ${1:\\$text:string} )","description":"Escape single quotes, specialchar double quotes, and fix line endings."},"ƒ: wp_specialchars":{"prefix":["wp_specialchars","ws"],"body":"wp_specialchars( ${1:\\$text:string}, ${2:\\$quote_style:string}, ${3:\\$charset:false|string}, ${4:\\$double_encode:false} )","description":"Legacy escaping for HTML blocks."},"ƒ: attribute_escape":{"prefix":["attribute_escape","ae"],"body":"attribute_escape( ${1:\\$text:string} )","description":"Escaping for HTML attributes."},"ƒ: register_sidebar_widget":{"prefix":["register_sidebar_widget","rsw"],"body":"register_sidebar_widget( ${1:\\$name:string|int}, ${2:\\$output_callback:callable}, ${3:\\$classname:string}, ${4:\\$params:mixed} )","description":"Register widget for sidebar with backward compatibility."},"ƒ: unregister_sidebar_widget":{"prefix":["unregister_sidebar_widget","usw"],"body":"unregister_sidebar_widget( ${1:\\$id:int|string} )","description":"Serves as an alias of wp_unregister_sidebar_widget()."},"ƒ: register_widget_control":{"prefix":["register_widget_control","rwc"],"body":"register_widget_control( ${1:\\$name:int|string}, ${2:\\$control_callback:callable}, ${3:\\$width:int}, ${4:\\$height:int}, ${5:\\$params:mixed} )","description":"Registers widget control callback for customizing options."},"ƒ: unregister_widget_control":{"prefix":["unregister_widget_control","uwc"],"body":"unregister_widget_control( ${1:\\$id:int|string} )","description":"Alias of wp_unregister_widget_control()."},"ƒ: delete_usermeta":{"prefix":["delete_usermeta","du"],"body":"delete_usermeta( ${1:\\$user_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Remove user meta data."},"ƒ: get_usermeta":{"prefix":["get_usermeta","gu"],"body":"get_usermeta( ${1:\\$user_id:int}, ${2:\\$meta_key:string} )","description":"Retrieve user metadata."},"ƒ: update_usermeta":{"prefix":["update_usermeta","uu"],"body":"update_usermeta( ${1:\\$user_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Update metadata of user."},"ƒ: get_users_of_blog":{"prefix":["get_users_of_blog","guob"],"body":"get_users_of_blog( ${1:\\$id:int} )","description":"Get users for the site."},"ƒ: automatic_feed_links":{"prefix":["automatic_feed_links","afl"],"body":"automatic_feed_links( ${1:\\$add:bool} )","description":"Enable/disable automatic general feed link outputting."},"ƒ: get_profile":{"prefix":["get_profile","gp"],"body":"get_profile( ${1:\\$field:string}, ${2:\\$user:false|int} )","description":"Retrieve user data based on field."},"ƒ: get_usernumposts":{"prefix":["get_usernumposts","gu"],"body":"get_usernumposts( ${1:\\$userid:int} )","description":"Retrieves the number of posts a user has written."},"ƒ: funky_javascript_fix":{"prefix":["funky_javascript_fix","fjf"],"body":"funky_javascript_fix( ${1:\\$text:string} )","description":"Fixes JavaScript bugs in browsers."},"ƒ: is_taxonomy":{"prefix":["is_taxonomy","it"],"body":"is_taxonomy( ${1:\\$taxonomy:string} )","description":"Checks that the taxonomy name exists."},"ƒ: is_term":{"prefix":["is_term","it"],"body":"is_term( ${1:\\$term:int|string}, ${2:\\$taxonomy:string}, ${3:\\$parent:int} )","description":"Check if Term exists."},"ƒ: is_plugin_page":{"prefix":["is_plugin_page","ipp"],"body":"is_plugin_page(  )","description":"Determines whether the current admin page is generated by a plugin."},"ƒ: update_category_cache":{"prefix":["update_category_cache","ucc"],"body":"update_category_cache(  )","description":"Update the categories cache."},"ƒ: wp_timezone_supported":{"prefix":["wp_timezone_supported","wts"],"body":"wp_timezone_supported(  )","description":"Check for PHP timezone support"},"ƒ: the_editor":{"prefix":["the_editor","te"],"body":"the_editor( ${1:\\$content:string}, ${2:\\$id:string}, ${3:\\$prev_id:string}, ${4:\\$media_buttons:bool}, ${5:\\$tab_index:int}, ${6:\\$extended:bool} )","description":"Displays an editor: TinyMCE, HTML, or both."},"ƒ: get_user_metavalues":{"prefix":["get_user_metavalues","gum"],"body":"get_user_metavalues( ${1:\\$ids:array} )","description":"Perform the query to get the $metavalues array(s) needed by _fill_user and _fill_many_users"},"ƒ: sanitize_user_object":{"prefix":["sanitize_user_object","suo"],"body":"sanitize_user_object( ${1:\\$user:object|array}, ${2:\\$context:string} )","description":"Sanitize every user field."},"ƒ: get_boundary_post_rel_link":{"prefix":["get_boundary_post_rel_link","gbprl"],"body":"get_boundary_post_rel_link( ${1:\\$title:string}, ${2:\\$in_same_cat:bool}, ${3:\\$excluded_categories:string}, ${4:\\$start:bool} )","description":"Get boundary post relational link."},"ƒ: start_post_rel_link":{"prefix":["start_post_rel_link","sprl"],"body":"start_post_rel_link( ${1:\\$title:string}, ${2:\\$in_same_cat:bool}, ${3:\\$excluded_categories:string} )","description":"Display relational link for the first post."},"ƒ: get_index_rel_link":{"prefix":["get_index_rel_link","girl"],"body":"get_index_rel_link(  )","description":"Get site index relational link."},"ƒ: index_rel_link":{"prefix":["index_rel_link","irl"],"body":"index_rel_link(  )","description":"Display relational link for the site index."},"ƒ: get_parent_post_rel_link":{"prefix":["get_parent_post_rel_link","gpprl"],"body":"get_parent_post_rel_link( ${1:\\$title:string} )","description":"Get parent post relational link."},"ƒ: parent_post_rel_link":{"prefix":["parent_post_rel_link","pprl"],"body":"parent_post_rel_link( ${1:\\$title:string} )","description":"Display relational link for parent item"},"ƒ: wp_admin_bar_dashboard_view_site_menu":{"prefix":["wp_admin_bar_dashboard_view_site_menu","wabdvsm"],"body":"wp_admin_bar_dashboard_view_site_menu( ${1:\\$wp_admin_bar:WP_Admin_Bar} )","description":"Add the \"Dashboard\"/\"Visit Site\" menu."},"ƒ: is_blog_user":{"prefix":["is_blog_user","ibu"],"body":"is_blog_user( ${1:\\$blog_id:int} )","description":"Checks if the current user belong to a given site."},"ƒ: debug_fopen":{"prefix":["debug_fopen","df"],"body":"debug_fopen( ${1:\\$filename:string}, ${2:\\$mode:string} )","description":"Open the file handle for debugging."},"ƒ: debug_fwrite":{"prefix":["debug_fwrite","df"],"body":"debug_fwrite( ${1:\\$fp:mixed}, ${2:\\$message:string} )","description":"Write contents to the file used for debugging."},"ƒ: debug_fclose":{"prefix":["debug_fclose","df"],"body":"debug_fclose( ${1:\\$fp:mixed} )","description":"Close the debugging file handle."},"ƒ: get_themes":{"prefix":["get_themes","gt"],"body":"get_themes(  )","description":"Retrieve list of themes with theme data in theme directory."},"ƒ: get_theme":{"prefix":["get_theme","gt"],"body":"get_theme( ${1:\\$theme:string} )","description":"Retrieve theme data."},"ƒ: get_current_theme":{"prefix":["get_current_theme","gct"],"body":"get_current_theme(  )","description":"Retrieve current theme name."},"ƒ: clean_pre":{"prefix":["clean_pre","cp"],"body":"clean_pre( ${1:\\$matches:array|string} )","description":"Accepts matches array from preg_replace_callback in wpautop() or a string."},"ƒ: add_custom_image_header":{"prefix":["add_custom_image_header","acih"],"body":"add_custom_image_header( ${1:\\$wp_head_callback:callable}, ${2:\\$admin_head_callback:callable}, ${3:\\$admin_preview_callback:callable} )","description":"Add callbacks for image header display."},"ƒ: remove_custom_image_header":{"prefix":["remove_custom_image_header","rcih"],"body":"remove_custom_image_header(  )","description":"Remove image header support."},"ƒ: add_custom_background":{"prefix":["add_custom_background","acb"],"body":"add_custom_background( ${1:\\$wp_head_callback:callable}, ${2:\\$admin_head_callback:callable}, ${3:\\$admin_preview_callback:callable} )","description":"Add callbacks for background image display."},"ƒ: remove_custom_background":{"prefix":["remove_custom_background","rcb"],"body":"remove_custom_background(  )","description":"Remove custom background support."},"ƒ: get_theme_data":{"prefix":["get_theme_data","gtd"],"body":"get_theme_data( ${1:\\$theme_file:string} )","description":"Retrieve theme data from parsed theme file."},"ƒ: update_page_cache":{"prefix":["update_page_cache","upc"],"body":"update_page_cache( ${1:\\$pages:array} )","description":"Alias of update_post_cache()."},"ƒ: clean_page_cache":{"prefix":["clean_page_cache","cpc"],"body":"clean_page_cache( ${1:\\$id:int} )","description":"Will clean the page in the cache."},"ƒ: wp_explain_nonce":{"prefix":["wp_explain_nonce","wen"],"body":"wp_explain_nonce( ${1:\\$action:string} )","description":"Retrieve nonce action \"Are you sure\" message."},"ƒ: sticky_class":{"prefix":["sticky_class","sc"],"body":"sticky_class( ${1:\\$post_id:int|null} )","description":"Display \"sticky\" CSS class, if a post is sticky."},"ƒ: wp_load_image":{"prefix":["wp_load_image","wli"],"body":"wp_load_image( ${1:\\$file:string} )","description":"Load an image from a string, if PHP supports it."},"ƒ: image_resize":{"prefix":["image_resize","ir"],"body":"image_resize( ${1:\\$file:string}, ${2:\\$max_w:int}, ${3:\\$max_h:int}, ${4:\\$crop:bool}, ${5:\\$suffix:string|null}, ${6:\\$dest_path:string|null}, ${7:\\$jpeg_quality:int} )","description":"Scale down an image to fit a particular size and save a new copy of the image."},"ƒ: wp_get_single_post":{"prefix":["wp_get_single_post","wgsp"],"body":"wp_get_single_post( ${1:\\$postid:int}, ${2:\\$mode:string} )","description":"Retrieve a single post, based on post ID."},"ƒ: user_pass_ok":{"prefix":["user_pass_ok","upo"],"body":"user_pass_ok( ${1:\\$user_login:string}, ${2:\\$user_pass:string} )","description":"Check that the user login name and password is correct."},"ƒ: gd_edit_image_support":{"prefix":["gd_edit_image_support","geis"],"body":"gd_edit_image_support( ${1:\\$mime_type:string} )","description":"Check if the installed version of GD supports particular image type"},"ƒ: wp_convert_bytes_to_hr":{"prefix":["wp_convert_bytes_to_hr","wcbth"],"body":"wp_convert_bytes_to_hr( ${1:\\$bytes:int} )","description":"Converts an integer byte value to a shorthand byte value."},"ƒ: rich_edit_exists":{"prefix":["rich_edit_exists","ree"],"body":"rich_edit_exists(  )","description":"Determine if TinyMCE is available."},"ƒ: format_to_post":{"prefix":["format_to_post","ftp"],"body":"format_to_post( ${1:\\$content:string} )","description":"Formerly used to escape strings before inserting into the DB."},"ƒ: like_escape":{"prefix":["like_escape","le"],"body":"like_escape( ${1:\\$text:string} )","description":"Formerly used to escape strings before searching the DB. It was poorly documented and never worked as described."},"ƒ: url_is_accessable_via_ssl":{"prefix":["url_is_accessable_via_ssl","uiavs"],"body":"url_is_accessable_via_ssl( ${1:\\$url:string} )","description":"Determines if the URL can be accessed over SSL."},"ƒ: preview_theme":{"prefix":["preview_theme","pt"],"body":"preview_theme(  )","description":"Start preview theme output buffer."},"ƒ: wp_richedit_pre":{"prefix":["wp_richedit_pre","wrp"],"body":"wp_richedit_pre( ${1:\\$text:string} )","description":"Formats text for the rich text editor."},"ƒ: wp_htmledit_pre":{"prefix":["wp_htmledit_pre","whp"],"body":"wp_htmledit_pre( ${1:\\$output:string} )","description":"Formats text for the HTML editor."},"ƒ: post_permalink":{"prefix":["post_permalink","pp"],"body":"post_permalink( ${1:\\$post:int|WP_Post} )","description":"Retrieve permalink from post ID."},"ƒ: wp_get_http":{"prefix":["wp_get_http","wgh"],"body":"wp_get_http( ${1:\\$url:string}, ${2:\\$file_path:string|bool}, ${3:\\$red:int} )","description":"Perform a HTTP HEAD or GET request."},"ƒ: force_ssl_login":{"prefix":["force_ssl_login","fsl"],"body":"force_ssl_login( ${1:\\$force:string|bool|null} )","description":"Whether SSL login should be forced."},"ƒ: get_comments_popup_template":{"prefix":["get_comments_popup_template","gcpt"],"body":"get_comments_popup_template(  )","description":"Retrieve path of comment popup template in current or parent template."},"ƒ: is_comments_popup":{"prefix":["is_comments_popup","icp"],"body":"is_comments_popup(  )","description":"Determines whether the current URL is within the comments popup window."},"ƒ: comments_popup_script":{"prefix":["comments_popup_script","cps"],"body":"comments_popup_script(  )","description":"Display the JS popup script to show a comment."},"ƒ: popuplinks":{"prefix":["popuplinks"],"body":"popuplinks( ${1:\\$text:string} )","description":"Adds element attributes to open links in new tabs."},"ƒ: wp_embed_handler_googlevideo":{"prefix":["wp_embed_handler_googlevideo","wehg"],"body":"wp_embed_handler_googlevideo( ${1:\\$matches:mixed}, ${2:\\$attr:mixed}, ${3:\\$url:mixed}, ${4:\\$rawattr:mixed} )","description":"The Google Video embed handler callback."},"ƒ: get_paged_template":{"prefix":["get_paged_template","gpt"],"body":"get_paged_template(  )","description":"Retrieve path of paged template in current or parent template."},"ƒ: wp_kses_js_entities":{"prefix":["wp_kses_js_entities","wkje"],"body":"wp_kses_js_entities( ${1:\\$content:string} )","description":"Removes the HTML JavaScript entities found in early versions of Netscape 4."},"ƒ: get_shortcut_link":{"prefix":["get_shortcut_link","gsl"],"body":"get_shortcut_link(  )","description":"Retrieves the Press This bookmarklet link."},"ƒ: wp_ajax_press_this_save_post":{"prefix":["wp_ajax_press_this_save_post","waptsp"],"body":"wp_ajax_press_this_save_post(  )","description":"Ajax handler for saving a post from Press This."},"ƒ: wp_ajax_press_this_add_category":{"prefix":["wp_ajax_press_this_add_category","waptac"],"body":"wp_ajax_press_this_add_category(  )","description":"Ajax handler for creating new category from Press This."},"ƒ: wp_get_user_request_data":{"prefix":["wp_get_user_request_data","wgurd"],"body":"wp_get_user_request_data( ${1:\\$request_id:int} )","description":"Return the user request object for the specified request ID."},"ƒ: wp_make_content_images_responsive":{"prefix":["wp_make_content_images_responsive","wmcir"],"body":"wp_make_content_images_responsive( ${1:\\$content:string} )","description":"Filters 'img' elements in post content to add 'srcset' and 'sizes' attributes."},"ƒ: wp_blacklist_check":{"prefix":["wp_blacklist_check","wbc"],"body":"wp_blacklist_check( ${1:\\$author:string}, ${2:\\$email:string}, ${3:\\$url:string}, ${4:\\$comment:string}, ${5:\\$user_ip:string}, ${6:\\$user_agent:string} )","description":"Does comment contain disallowed characters or words."},"ƒ: add_option_whitelist":{"prefix":["add_option_whitelist","aow"],"body":"add_option_whitelist( ${1:\\$new_options:array}, ${2:\\$options:string|array} )","description":"Adds an array of options to the list of allowed options."},"ƒ: remove_option_whitelist":{"prefix":["remove_option_whitelist","row"],"body":"remove_option_whitelist( ${1:\\$del_options:array}, ${2:\\$options:string|array} )","description":"Removes a list of options from the allowed options list."},"ƒ: wp_slash_strings_only":{"prefix":["wp_slash_strings_only","wsso"],"body":"wp_slash_strings_only( ${1:\\$value:mixed} )","description":"Adds slashes to only string values in an array of values."},"ƒ: addslashes_strings_only":{"prefix":["addslashes_strings_only","aso"],"body":"addslashes_strings_only( ${1:\\$value:mixed} )","description":"Adds slashes only if the provided value is a string."},"ƒ: noindex":{"prefix":["noindex"],"body":"noindex(  )","description":"Displays a `noindex` meta tag if required by the blog configuration."},"ƒ: wp_no_robots":{"prefix":["wp_no_robots","wnr"],"body":"wp_no_robots(  )","description":"Display a `noindex` meta tag."},"ƒ: wp_sensitive_page_meta":{"prefix":["wp_sensitive_page_meta","wspm"],"body":"wp_sensitive_page_meta(  )","description":"Display a `noindex,noarchive` meta tag and referrer `strict-origin-when-cross-origin` meta tag."},"ƒ: wp_render_duotone_filter_preset":{"prefix":["wp_render_duotone_filter_preset","wrdfp"],"body":"wp_render_duotone_filter_preset( ${1:\\$preset:array} )","description":"Renders the duotone filter SVG and returns the CSS filter property to reference the rendered SVG."},"ƒ: wp_add_iframed_editor_assets_html":{"prefix":["wp_add_iframed_editor_assets_html","waieah"],"body":"wp_add_iframed_editor_assets_html(  )","description":"Inject the block editor assets that need to be loaded into the editor's iframe as an inline script."},"ƒ: wp_get_attachment_thumb_file":{"prefix":["wp_get_attachment_thumb_file","wgatf"],"body":"wp_get_attachment_thumb_file( ${1:\\$post_id:int} )","description":"Retrieves thumbnail for an attachment."},"ƒ: global_terms_enabled":{"prefix":["global_terms_enabled","gte"],"body":"global_terms_enabled(  )","description":"Determines whether global terms are enabled."},"ƒ: get_page_by_title":{"prefix":["get_page_by_title","gpbt"],"body":"get_page_by_title( ${1:\\$page_title:string}, ${2:\\$output:string}, ${3:\\$post_type:string|array} )","description":"Retrieves a page given its title."},"ƒ: wlwmanifest_link":{"prefix":["wlwmanifest_link","wl"],"body":"wlwmanifest_link(  )","description":"Displays the link to the Windows Live Writer manifest file."},"ƒ: wp_queue_comments_for_comment_meta_lazyload":{"prefix":["wp_queue_comments_for_comment_meta_lazyload","wqcfcml"],"body":"wp_queue_comments_for_comment_meta_lazyload( ${1:\\$comments:WP_Comment[]} )","description":"Queues comments for metadata lazy-loading."},"ƒ: wp_get_loading_attr_default":{"prefix":["wp_get_loading_attr_default","wglad"],"body":"wp_get_loading_attr_default( ${1:\\$context:string} )","description":"Gets the default value to use for a `loading` attribute on an element."},"ƒ: wp_img_tag_add_loading_attr":{"prefix":["wp_img_tag_add_loading_attr","witala"],"body":"wp_img_tag_add_loading_attr( ${1:\\$image:string}, ${2:\\$context:string} )","description":"Adds `loading` attribute to an `img` HTML tag."},"ƒ: wp_get_global_styles_svg_filters":{"prefix":["wp_get_global_styles_svg_filters","wggssf"],"body":"wp_get_global_styles_svg_filters(  )","description":"Returns a string containing the SVGs to be referenced as filters (duotone)."},"ƒ: wp_global_styles_render_svg_filters":{"prefix":["wp_global_styles_render_svg_filters","wgsrsf"],"body":"wp_global_styles_render_svg_filters(  )","description":"Renders the SVG filters supplied by theme.json."},"ƒ: block_core_navigation_submenu_build_css_colors":{"prefix":["block_core_navigation_submenu_build_css_colors","bcnsbcc"],"body":"block_core_navigation_submenu_build_css_colors( ${1:\\$context:array}, ${2:\\$attributes:array}, ${3:\\$is_sub_menu:bool} )","description":"Build an array with CSS classes and inline styles defining the colors which will be applied to the navigation markup in the front-end."},"ƒ: print_embed_styles":{"prefix":["print_embed_styles","pes"],"body":"print_embed_styles(  )","description":"Prints the CSS in the embed iframe header."},"ƒ: print_emoji_styles":{"prefix":["print_emoji_styles","pes"],"body":"print_emoji_styles(  )","description":"Prints the important emoji-related styles."},"ƒ: wp_admin_bar_header":{"prefix":["wp_admin_bar_header","wabh"],"body":"wp_admin_bar_header(  )","description":"Prints style and scripts for the admin bar."},"ƒ: wp_img_tag_add_decoding_attr":{"prefix":["wp_img_tag_add_decoding_attr","witada"],"body":"wp_img_tag_add_decoding_attr( ${1:\\$image:string}, ${2:\\$context:string} )","description":"Adds `decoding` attribute to an `img` HTML tag."},"ƒ: block_core_query_ensure_interactivity_dependency":{"prefix":["block_core_query_ensure_interactivity_dependency","bcqeid"],"body":"block_core_query_ensure_interactivity_dependency(  )","description":"Ensure that the view script has the `wp-interactivity` dependency."},"ƒ: block_core_file_ensure_interactivity_dependency":{"prefix":["block_core_file_ensure_interactivity_dependency","bcfeid"],"body":"block_core_file_ensure_interactivity_dependency(  )","description":"Ensure that the view script has the `wp-interactivity` dependency."},"ƒ: block_core_image_ensure_interactivity_dependency":{"prefix":["block_core_image_ensure_interactivity_dependency","bcieid"],"body":"block_core_image_ensure_interactivity_dependency(  )","description":"Ensures that the view script has the `wp-interactivity` dependency."},"ƒ: wp_interactivity_process_directives_of_interactive_blocks":{"prefix":["wp_interactivity_process_directives_of_interactive_blocks","wipdoib"],"body":"wp_interactivity_process_directives_of_interactive_blocks( ${1:\\$parsed_block:array} )","description":"Processes the directives on the rendered HTML of the interactive blocks."},"ƒ: wp_get_global_styles_custom_css":{"prefix":["wp_get_global_styles_custom_css","wggscc"],"body":"wp_get_global_styles_custom_css(  )","description":"Gets the global styles custom CSS from theme.json."},"ƒ: wp_enqueue_global_styles_custom_css":{"prefix":["wp_enqueue_global_styles_custom_css","wegscc"],"body":"wp_enqueue_global_styles_custom_css(  )","description":"Enqueues the global styles custom css defined via theme.json."},"ƒ: current_user_can_for_blog":{"prefix":["current_user_can_for_blog","cucfb"],"body":"current_user_can_for_blog( ${1:\\$blog_id:int}, ${2:\\$capability:string}, ${3:\\$args:mixed} )","description":"Returns whether the current user has the specified capability for a given site."},"ƒ: wp_add_editor_classic_theme_styles":{"prefix":["wp_add_editor_classic_theme_styles","waects"],"body":"wp_add_editor_classic_theme_styles( ${1:\\$editor_settings:array} )","description":"Loads classic theme styles on classic themes in the editor."},"ƒ: wp_embed_register_handler":{"prefix":["wp_embed_register_handler","werh"],"body":"wp_embed_register_handler( ${1:\\$id:string}, ${2:\\$regex:string}, ${3:\\$callback:callable}, ${4:\\$priority:int} )","description":"Registers an embed handler."},"ƒ: wp_embed_unregister_handler":{"prefix":["wp_embed_unregister_handler","weuh"],"body":"wp_embed_unregister_handler( ${1:\\$id:string}, ${2:\\$priority:int} )","description":"Unregisters a previously-registered embed handler."},"ƒ: wp_embed_defaults":{"prefix":["wp_embed_defaults","wed"],"body":"wp_embed_defaults( ${1:\\$url:string} )","description":"Creates default array of embed parameters."},"ƒ: wp_oembed_get":{"prefix":["wp_oembed_get","wog"],"body":"wp_oembed_get( ${1:\\$url:string}, ${2:\\$args:array|string} )","description":"Attempts to fetch the embed HTML for a provided URL using oEmbed."},"ƒ: wp_oembed_add_provider":{"prefix":["wp_oembed_add_provider","woap"],"body":"wp_oembed_add_provider( ${1:\\$format:string}, ${2:\\$provider:string}, ${3:\\$regex:bool} )","description":"Adds a URL format and oEmbed provider URL pair."},"ƒ: wp_oembed_remove_provider":{"prefix":["wp_oembed_remove_provider","worp"],"body":"wp_oembed_remove_provider( ${1:\\$format:string} )","description":"Removes an oEmbed provider."},"ƒ: wp_maybe_load_embeds":{"prefix":["wp_maybe_load_embeds","wmle"],"body":"wp_maybe_load_embeds(  )","description":"Determines if default embed handlers should be loaded."},"ƒ: wp_embed_handler_youtube":{"prefix":["wp_embed_handler_youtube","wehy"],"body":"wp_embed_handler_youtube( ${1:\\$matches:array}, ${2:\\$attr:array}, ${3:\\$url:string}, ${4:\\$rawattr:array} )","description":"YouTube iframe embed handler callback."},"ƒ: wp_embed_handler_audio":{"prefix":["wp_embed_handler_audio","weha"],"body":"wp_embed_handler_audio( ${1:\\$matches:array}, ${2:\\$attr:array}, ${3:\\$url:string}, ${4:\\$rawattr:array} )","description":"Audio embed handler callback."},"ƒ: wp_embed_handler_video":{"prefix":["wp_embed_handler_video","wehv"],"body":"wp_embed_handler_video( ${1:\\$matches:array}, ${2:\\$attr:array}, ${3:\\$url:string}, ${4:\\$rawattr:array} )","description":"Video embed handler callback."},"ƒ: wp_oembed_register_route":{"prefix":["wp_oembed_register_route","worr"],"body":"wp_oembed_register_route(  )","description":"Registers the oEmbed REST API route."},"ƒ: wp_oembed_add_discovery_links":{"prefix":["wp_oembed_add_discovery_links","woadl"],"body":"wp_oembed_add_discovery_links(  )","description":"Adds oEmbed discovery links in the head element of the website."},"ƒ: wp_oembed_add_host_js":{"prefix":["wp_oembed_add_host_js","woahj"],"body":"wp_oembed_add_host_js(  )","description":"Adds the necessary JavaScript to communicate with the embedded iframes."},"ƒ: wp_maybe_enqueue_oembed_host_js":{"prefix":["wp_maybe_enqueue_oembed_host_js","wmeohj"],"body":"wp_maybe_enqueue_oembed_host_js( ${1:\\$html:string} )","description":"Enqueue the wp-embed script if the provided oEmbed HTML contains a post embed."},"ƒ: get_post_embed_url":{"prefix":["get_post_embed_url","gpeu"],"body":"get_post_embed_url( ${1:\\$post:int|WP_Post|null} )","description":"Retrieves the URL to embed a specific post in an iframe."},"ƒ: get_oembed_endpoint_url":{"prefix":["get_oembed_endpoint_url","goeu"],"body":"get_oembed_endpoint_url( ${1:\\$permalink:string}, ${2:\\$format:string} )","description":"Retrieves the oEmbed endpoint URL for a given permalink."},"ƒ: get_post_embed_html":{"prefix":["get_post_embed_html","gpeh"],"body":"get_post_embed_html( ${1:\\$width:int}, ${2:\\$height:int}, ${3:\\$post:int|WP_Post|null} )","description":"Retrieves the embed code for a specific post."},"ƒ: get_oembed_response_data":{"prefix":["get_oembed_response_data","gord"],"body":"get_oembed_response_data( ${1:\\$post:WP_Post|int}, ${2:\\$width:int} )","description":"Retrieves the oEmbed response data for a given post."},"ƒ: get_oembed_response_data_for_url":{"prefix":["get_oembed_response_data_for_url","gordfu"],"body":"get_oembed_response_data_for_url( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Retrieves the oEmbed response data for a given URL."},"ƒ: get_oembed_response_data_rich":{"prefix":["get_oembed_response_data_rich","gordr"],"body":"get_oembed_response_data_rich( ${1:\\$data:array}, ${2:\\$post:WP_Post}, ${3:\\$width:int}, ${4:\\$height:int} )","description":"Filters the oEmbed response data to return an iframe embed code."},"ƒ: wp_oembed_ensure_format":{"prefix":["wp_oembed_ensure_format","woef"],"body":"wp_oembed_ensure_format( ${1:\\$format:string} )","description":"Ensures that the specified format is either 'json' or 'xml'."},"ƒ: wp_filter_oembed_iframe_title_attribute":{"prefix":["wp_filter_oembed_iframe_title_attribute","wfoita"],"body":"wp_filter_oembed_iframe_title_attribute( ${1:\\$result:string}, ${2:\\$data:object}, ${3:\\$url:string} )","description":"Filters the given oEmbed HTML to make sure iframes have a title attribute."},"ƒ: wp_filter_oembed_result":{"prefix":["wp_filter_oembed_result","wfor"],"body":"wp_filter_oembed_result( ${1:\\$result:string}, ${2:\\$data:object}, ${3:\\$url:string} )","description":"Filters the given oEmbed HTML."},"ƒ: wp_embed_excerpt_more":{"prefix":["wp_embed_excerpt_more","weem"],"body":"wp_embed_excerpt_more( ${1:\\$more_string:string} )","description":"Filters the string in the 'more' link displayed after a trimmed excerpt."},"ƒ: the_excerpt_embed":{"prefix":["the_excerpt_embed","tee"],"body":"the_excerpt_embed(  )","description":"Displays the post excerpt for the embed template."},"ƒ: wp_embed_excerpt_attachment":{"prefix":["wp_embed_excerpt_attachment","weea"],"body":"wp_embed_excerpt_attachment( ${1:\\$content:string} )","description":"Filters the post excerpt for the embed template."},"ƒ: enqueue_embed_scripts":{"prefix":["enqueue_embed_scripts","ees"],"body":"enqueue_embed_scripts(  )","description":"Enqueues embed iframe default CSS and JS."},"ƒ: wp_enqueue_embed_styles":{"prefix":["wp_enqueue_embed_styles","wees"],"body":"wp_enqueue_embed_styles(  )","description":"Enqueues the CSS in the embed iframe header."},"ƒ: print_embed_scripts":{"prefix":["print_embed_scripts","pes"],"body":"print_embed_scripts(  )","description":"Prints the JavaScript in the embed iframe header."},"ƒ: print_embed_comments_button":{"prefix":["print_embed_comments_button","pecb"],"body":"print_embed_comments_button(  )","description":"Prints the necessary markup for the embed comments button."},"ƒ: print_embed_sharing_button":{"prefix":["print_embed_sharing_button","pesb"],"body":"print_embed_sharing_button(  )","description":"Prints the necessary markup for the embed sharing button."},"ƒ: print_embed_sharing_dialog":{"prefix":["print_embed_sharing_dialog","pesd"],"body":"print_embed_sharing_dialog(  )","description":"Prints the necessary markup for the embed sharing dialog."},"ƒ: the_embed_site_title":{"prefix":["the_embed_site_title","test"],"body":"the_embed_site_title(  )","description":"Prints the necessary markup for the site title in an embed template."},"ƒ: wp_filter_pre_oembed_result":{"prefix":["wp_filter_pre_oembed_result","wfpor"],"body":"wp_filter_pre_oembed_result( ${1:\\$result:null|string}, ${2:\\$url:string}, ${3:\\$args:array} )","description":"Filters the oEmbed result before any HTTP requests are made."},"ƒ: wp_paused_plugins":{"prefix":["wp_paused_plugins","wpp"],"body":"wp_paused_plugins(  )","description":"Get the instance for storing paused plugins."},"ƒ: wp_paused_themes":{"prefix":["wp_paused_themes","wpt"],"body":"wp_paused_themes(  )","description":"Get the instance for storing paused extensions."},"ƒ: wp_get_extension_error_description":{"prefix":["wp_get_extension_error_description","wgeed"],"body":"wp_get_extension_error_description( ${1:\\$error:array} )","description":"Get a human readable description of an extension's error."},"ƒ: wp_register_fatal_error_handler":{"prefix":["wp_register_fatal_error_handler","wrfeh"],"body":"wp_register_fatal_error_handler(  )","description":"Registers the shutdown handler for fatal errors."},"ƒ: wp_is_fatal_error_handler_enabled":{"prefix":["wp_is_fatal_error_handler_enabled","wifehe"],"body":"wp_is_fatal_error_handler_enabled(  )","description":"Checks whether the fatal error handler is enabled."},"ƒ: wp_recovery_mode":{"prefix":["wp_recovery_mode","wrm"],"body":"wp_recovery_mode(  )","description":"Access the WordPress Recovery Mode instance."},"ƒ: get_bloginfo_rss":{"prefix":["get_bloginfo_rss","gbr"],"body":"get_bloginfo_rss( ${1:\\$show:string} )","description":"Retrieves RSS container for the bloginfo function."},"ƒ: bloginfo_rss":{"prefix":["bloginfo_rss","br"],"body":"bloginfo_rss( ${1:\\$show:string} )","description":"Displays RSS container for the bloginfo function."},"ƒ: get_default_feed":{"prefix":["get_default_feed","gdf"],"body":"get_default_feed(  )","description":"Retrieves the default feed."},"ƒ: get_wp_title_rss":{"prefix":["get_wp_title_rss","gwtr"],"body":"get_wp_title_rss( ${1:\\$deprecated:string} )","description":"Retrieves the blog title for the feed title."},"ƒ: wp_title_rss":{"prefix":["wp_title_rss","wtr"],"body":"wp_title_rss( ${1:\\$deprecated:string} )","description":"Displays the blog title for display of the feed title."},"ƒ: get_the_title_rss":{"prefix":["get_the_title_rss","gttr"],"body":"get_the_title_rss( ${1:\\$post:int|WP_Post} )","description":"Retrieves the current post title for the feed."},"ƒ: the_title_rss":{"prefix":["the_title_rss","ttr"],"body":"the_title_rss(  )","description":"Displays the post title in the feed."},"ƒ: get_the_content_feed":{"prefix":["get_the_content_feed","gtcf"],"body":"get_the_content_feed( ${1:\\$feed_type:string|null} )","description":"Retrieves the post content for feeds."},"ƒ: the_content_feed":{"prefix":["the_content_feed","tcf"],"body":"the_content_feed( ${1:\\$feed_type:string|null} )","description":"Displays the post content for feeds."},"ƒ: the_excerpt_rss":{"prefix":["the_excerpt_rss","ter"],"body":"the_excerpt_rss(  )","description":"Displays the post excerpt for the feed."},"ƒ: the_permalink_rss":{"prefix":["the_permalink_rss","tpr"],"body":"the_permalink_rss(  )","description":"Displays the permalink to the post for use in feeds."},"ƒ: comments_link_feed":{"prefix":["comments_link_feed","clf"],"body":"comments_link_feed(  )","description":"Outputs the link to the comments for the current post in an XML safe way."},"ƒ: comment_guid":{"prefix":["comment_guid","cg"],"body":"comment_guid( ${1:\\$comment_id:int|WP_Comment|null} )","description":"Displays the feed GUID for the current comment."},"ƒ: get_comment_guid":{"prefix":["get_comment_guid","gcg"],"body":"get_comment_guid( ${1:\\$comment_id:int|WP_Comment|null} )","description":"Retrieves the feed GUID for the current comment."},"ƒ: comment_link":{"prefix":["comment_link","cl"],"body":"comment_link( ${1:\\$comment:int|WP_Comment|null} )","description":"Displays the link to the comments."},"ƒ: get_comment_author_rss":{"prefix":["get_comment_author_rss","gcar"],"body":"get_comment_author_rss(  )","description":"Retrieves the current comment author for use in the feeds."},"ƒ: comment_author_rss":{"prefix":["comment_author_rss","car"],"body":"comment_author_rss(  )","description":"Displays the current comment author in the feed."},"ƒ: comment_text_rss":{"prefix":["comment_text_rss","ctr"],"body":"comment_text_rss(  )","description":"Displays the current comment content for use in the feeds."},"ƒ: get_the_category_rss":{"prefix":["get_the_category_rss","gtcr"],"body":"get_the_category_rss( ${1:\\$type:string|null} )","description":"Retrieves all of the post categories, formatted for use in feeds."},"ƒ: the_category_rss":{"prefix":["the_category_rss","tcr"],"body":"the_category_rss( ${1:\\$type:string|null} )","description":"Displays the post categories in the feed."},"ƒ: html_type_rss":{"prefix":["html_type_rss","htr"],"body":"html_type_rss(  )","description":"Displays the HTML type based on the blog setting."},"ƒ: rss_enclosure":{"prefix":["rss_enclosure","re"],"body":"rss_enclosure(  )","description":"Displays the rss enclosure for the current post."},"ƒ: atom_enclosure":{"prefix":["atom_enclosure","ae"],"body":"atom_enclosure(  )","description":"Displays the atom enclosure for the current post."},"ƒ: prep_atom_text_construct":{"prefix":["prep_atom_text_construct","patc"],"body":"prep_atom_text_construct( ${1:\\$data:string} )","description":"Determines the type of a string of data with the data formatted."},"ƒ: atom_site_icon":{"prefix":["atom_site_icon","asi"],"body":"atom_site_icon(  )","description":"Displays Site Icon in atom feeds."},"ƒ: rss2_site_icon":{"prefix":["rss2_site_icon","rsi"],"body":"rss2_site_icon(  )","description":"Displays Site Icon in RSS2."},"ƒ: get_self_link":{"prefix":["get_self_link","gsl"],"body":"get_self_link(  )","description":"Returns the link for the currently displayed feed."},"ƒ: self_link":{"prefix":["self_link","sl"],"body":"self_link(  )","description":"Displays the link for the currently displayed feed in a XSS safe way."},"ƒ: get_feed_build_date":{"prefix":["get_feed_build_date","gfbd"],"body":"get_feed_build_date( ${1:\\$format:string} )","description":"Gets the UTC time of the most recently modified post from WP_Query."},"ƒ: feed_content_type":{"prefix":["feed_content_type","fct"],"body":"feed_content_type( ${1:\\$type:string} )","description":"Returns the content type for specified feed type."},"ƒ: fetch_feed":{"prefix":["fetch_feed","ff"],"body":"fetch_feed( ${1:\\$url:string|string[]} )","description":"Builds SimplePie object based on RSS or Atom feed from URL."},"ƒ: wp_print_font_faces":{"prefix":["wp_print_font_faces","wpff"],"body":"wp_print_font_faces( ${1:\\$fonts:array[][]} )","description":"Generates and prints font-face styles for given fonts or theme.json fonts."},"ƒ: wp_print_font_faces_from_style_variations":{"prefix":["wp_print_font_faces_from_style_variations","wpfffsv"],"body":"wp_print_font_faces_from_style_variations(  )","description":"Generates and prints font-face styles defined the the theme style variations."},"ƒ: wp_register_font_collection":{"prefix":["wp_register_font_collection","wrfc"],"body":"wp_register_font_collection( ${1:\\$slug:string}, ${2:\\$args:array} )","description":"Registers a new font collection in the font library."},"ƒ: wp_unregister_font_collection":{"prefix":["wp_unregister_font_collection","wufc"],"body":"wp_unregister_font_collection( ${1:\\$slug:string} )","description":"Unregisters a font collection from the Font Library."},"ƒ: wp_get_font_dir":{"prefix":["wp_get_font_dir","wgfd"],"body":"wp_get_font_dir(  )","description":"Retrieves font uploads directory information."},"ƒ: wp_font_dir":{"prefix":["wp_font_dir","wfd"],"body":"wp_font_dir( ${1:\\$create_dir:bool} )","description":"Returns an array containing the current fonts upload directory's path and URL."},"ƒ: wptexturize":{"prefix":["wptexturize"],"body":"wptexturize( ${1:\\$text:string}, ${2:\\$reset:bool} )","description":"Replaces common plain text characters with formatted entities."},"ƒ: wptexturize_primes":{"prefix":["wptexturize_primes","wp"],"body":"wptexturize_primes( ${1:\\$haystack:string}, ${2:\\$needle:string}, ${3:\\$prime:string}, ${4:\\$open_quote:string}, ${5:\\$close_quote:string} )","description":"Implements a logic tree to determine whether or not \"7'.\" represents seven feet, then converts the special char into either a prime char or a closing quote char."},"ƒ: wpautop":{"prefix":["wpautop"],"body":"wpautop( ${1:\\$text:string}, ${2:\\$br:bool} )","description":"Replaces double line breaks with paragraph elements."},"ƒ: wp_html_split":{"prefix":["wp_html_split","whs"],"body":"wp_html_split( ${1:\\$input:string} )","description":"Separates HTML elements and comments from the text."},"ƒ: get_html_split_regex":{"prefix":["get_html_split_regex","ghsr"],"body":"get_html_split_regex(  )","description":"Retrieves the regular expression for an HTML element."},"ƒ: wp_replace_in_html_tags":{"prefix":["wp_replace_in_html_tags","wriht"],"body":"wp_replace_in_html_tags( ${1:\\$haystack:string}, ${2:\\$replace_pairs:array} )","description":"Replaces characters or phrases within HTML elements only."},"ƒ: shortcode_unautop":{"prefix":["shortcode_unautop","su"],"body":"shortcode_unautop( ${1:\\$text:string} )","description":"Don't auto-p wrap shortcodes that stand alone."},"ƒ: seems_utf8":{"prefix":["seems_utf8","su"],"body":"seems_utf8( ${1:\\$str:string} )","description":"Checks to see if a string is utf8 encoded."},"ƒ: wp_specialchars_decode":{"prefix":["wp_specialchars_decode","wsd"],"body":"wp_specialchars_decode( ${1:\\$text:string}, ${2:\\$quote_style:string|int} )","description":"Converts a number of HTML entities into their special characters."},"ƒ: wp_check_invalid_utf8":{"prefix":["wp_check_invalid_utf8","wciu"],"body":"wp_check_invalid_utf8( ${1:\\$text:string}, ${2:\\$strip:bool} )","description":"Checks for invalid UTF8 in a string."},"ƒ: utf8_uri_encode":{"prefix":["utf8_uri_encode","uue"],"body":"utf8_uri_encode( ${1:\\$utf8_string:string}, ${2:\\$length:int}, ${3:\\$encode_ascii_characters:bool} )","description":"Encodes the Unicode values to be used in the URI."},"ƒ: remove_accents":{"prefix":["remove_accents","ra"],"body":"remove_accents( ${1:\\$text:string}, ${2:\\$locale:string} )","description":"Converts all accent characters to ASCII characters."},"ƒ: sanitize_file_name":{"prefix":["sanitize_file_name","sfn"],"body":"sanitize_file_name( ${1:\\$filename:string} )","description":"Sanitizes a filename, replacing whitespace with dashes."},"ƒ: sanitize_user":{"prefix":["sanitize_user","su"],"body":"sanitize_user( ${1:\\$username:string}, ${2:\\$strict:bool} )","description":"Sanitizes a username, stripping out unsafe characters."},"ƒ: sanitize_key":{"prefix":["sanitize_key","sk"],"body":"sanitize_key( ${1:\\$key:string} )","description":"Sanitizes a string key."},"ƒ: sanitize_title":{"prefix":["sanitize_title","st"],"body":"sanitize_title( ${1:\\$title:string}, ${2:\\$fallback_title:string}, ${3:\\$context:string} )","description":"Sanitizes a string into a slug, which can be used in URLs or HTML attributes."},"ƒ: sanitize_title_for_query":{"prefix":["sanitize_title_for_query","stfq"],"body":"sanitize_title_for_query( ${1:\\$title:string} )","description":"Sanitizes a title with the 'query' context."},"ƒ: sanitize_title_with_dashes":{"prefix":["sanitize_title_with_dashes","stwd"],"body":"sanitize_title_with_dashes( ${1:\\$title:string}, ${2:\\$raw_title:string}, ${3:\\$context:string} )","description":"Sanitizes a title, replacing whitespace and a few other characters with dashes."},"ƒ: sanitize_sql_orderby":{"prefix":["sanitize_sql_orderby","sso"],"body":"sanitize_sql_orderby( ${1:\\$orderby:string} )","description":"Ensures a string is a valid SQL 'order by' clause."},"ƒ: sanitize_html_class":{"prefix":["sanitize_html_class","shc"],"body":"sanitize_html_class( ${1:\\$classname:string}, ${2:\\$fallback:string} )","description":"Sanitizes an HTML classname to ensure it only contains valid characters."},"ƒ: sanitize_locale_name":{"prefix":["sanitize_locale_name","sln"],"body":"sanitize_locale_name( ${1:\\$locale_name:string} )","description":"Strips out all characters not allowed in a locale name."},"ƒ: convert_chars":{"prefix":["convert_chars","cc"],"body":"convert_chars( ${1:\\$content:string}, ${2:\\$deprecated:string} )","description":"Converts lone & characters into `&#038;` (a.k.a. `&amp;`)"},"ƒ: convert_invalid_entities":{"prefix":["convert_invalid_entities","cie"],"body":"convert_invalid_entities( ${1:\\$content:string} )","description":"Converts invalid Unicode references range to valid range."},"ƒ: balanceTags":{"prefix":["balanceTags"],"body":"balanceTags( ${1:\\$text:string}, ${2:\\$force:bool} )","description":"Balances tags if forced to, or if the 'use_balanceTags' option is set to true."},"ƒ: format_to_edit":{"prefix":["format_to_edit","fte"],"body":"format_to_edit( ${1:\\$content:string}, ${2:\\$rich_text:bool} )","description":"Acts on text which is about to be edited."},"ƒ: zeroise":{"prefix":["zeroise"],"body":"zeroise( ${1:\\$number:int}, ${2:\\$threshold:int} )","description":"Add leading zeros when necessary."},"ƒ: backslashit":{"prefix":["backslashit"],"body":"backslashit( ${1:\\$value:string} )","description":"Adds backslashes before letters and before a number at the start of a string."},"ƒ: trailingslashit":{"prefix":["trailingslashit"],"body":"trailingslashit( ${1:\\$value:string} )","description":"Appends a trailing slash."},"ƒ: untrailingslashit":{"prefix":["untrailingslashit"],"body":"untrailingslashit( ${1:\\$value:string} )","description":"Removes trailing forward slashes and backslashes if they exist."},"ƒ: addslashes_gpc":{"prefix":["addslashes_gpc","ag"],"body":"addslashes_gpc( ${1:\\$gpc:string|array} )","description":"Adds slashes to a string or recursively adds slashes to strings within an array."},"ƒ: stripslashes_deep":{"prefix":["stripslashes_deep","sd"],"body":"stripslashes_deep( ${1:\\$value:mixed} )","description":"Navigates through an array, object, or scalar, and removes slashes from the values."},"ƒ: stripslashes_from_strings_only":{"prefix":["stripslashes_from_strings_only","sfso"],"body":"stripslashes_from_strings_only( ${1:\\$value:mixed} )","description":"Callback function for `stripslashes_deep()` which strips slashes from strings."},"ƒ: urlencode_deep":{"prefix":["urlencode_deep","ud"],"body":"urlencode_deep( ${1:\\$value:mixed} )","description":"Navigates through an array, object, or scalar, and encodes the values to be used in a URL."},"ƒ: rawurlencode_deep":{"prefix":["rawurlencode_deep","rd"],"body":"rawurlencode_deep( ${1:\\$value:mixed} )","description":"Navigates through an array, object, or scalar, and raw-encodes the values to be used in a URL."},"ƒ: urldecode_deep":{"prefix":["urldecode_deep","ud"],"body":"urldecode_deep( ${1:\\$value:mixed} )","description":"Navigates through an array, object, or scalar, and decodes URL-encoded values"},"ƒ: antispambot":{"prefix":["antispambot"],"body":"antispambot( ${1:\\$email_address:string}, ${2:\\$hex_encoding:int} )","description":"Converts email addresses characters to HTML entities to block spam bots."},"ƒ: make_clickable":{"prefix":["make_clickable","mc"],"body":"make_clickable( ${1:\\$text:string} )","description":"Converts plaintext URI to HTML links."},"ƒ: wp_rel_callback":{"prefix":["wp_rel_callback","wrc"],"body":"wp_rel_callback( ${1:\\$matches:array}, ${2:\\$rel:string} )","description":"Callback to add a rel attribute to HTML A element."},"ƒ: wp_rel_nofollow":{"prefix":["wp_rel_nofollow","wrn"],"body":"wp_rel_nofollow( ${1:\\$text:string} )","description":"Adds `rel=\"nofollow\"` string to all HTML A elements in content."},"ƒ: wp_rel_nofollow_callback":{"prefix":["wp_rel_nofollow_callback","wrnc"],"body":"wp_rel_nofollow_callback( ${1:\\$matches:array} )","description":"Callback to add `rel=\"nofollow\"` string to HTML A element."},"ƒ: wp_rel_ugc":{"prefix":["wp_rel_ugc","wru"],"body":"wp_rel_ugc( ${1:\\$text:string} )","description":"Adds `rel=\"nofollow ugc\"` string to all HTML A elements in content."},"ƒ: wp_targeted_link_rel":{"prefix":["wp_targeted_link_rel","wtlr"],"body":"wp_targeted_link_rel( ${1:\\$text:string} )","description":"Adds `rel=\"noopener\"` to all HTML A elements that have a target."},"ƒ: wp_targeted_link_rel_callback":{"prefix":["wp_targeted_link_rel_callback","wtlrc"],"body":"wp_targeted_link_rel_callback( ${1:\\$matches:array} )","description":"Callback to add `rel=\"noopener\"` string to HTML A element."},"ƒ: wp_init_targeted_link_rel_filters":{"prefix":["wp_init_targeted_link_rel_filters","witlrf"],"body":"wp_init_targeted_link_rel_filters(  )","description":"Adds all filters modifying the rel attribute of targeted links."},"ƒ: wp_remove_targeted_link_rel_filters":{"prefix":["wp_remove_targeted_link_rel_filters","wrtlrf"],"body":"wp_remove_targeted_link_rel_filters(  )","description":"Removes all filters modifying the rel attribute of targeted links."},"ƒ: translate_smiley":{"prefix":["translate_smiley","ts"],"body":"translate_smiley( ${1:\\$matches:array} )","description":"Converts one smiley code to the icon graphic file equivalent."},"ƒ: convert_smilies":{"prefix":["convert_smilies","cs"],"body":"convert_smilies( ${1:\\$text:string} )","description":"Converts text equivalent of smilies to images."},"ƒ: is_email":{"prefix":["is_email","ie"],"body":"is_email( ${1:\\$email:string}, ${2:\\$deprecated:bool} )","description":"Verifies that an email is valid."},"ƒ: wp_iso_descrambler":{"prefix":["wp_iso_descrambler","wid"],"body":"wp_iso_descrambler( ${1:\\$subject:string} )","description":"Converts to ASCII from email subjects."},"ƒ: get_gmt_from_date":{"prefix":["get_gmt_from_date","ggfd"],"body":"get_gmt_from_date( ${1:\\$date_string:string}, ${2:\\$format:string} )","description":"Given a date in the timezone of the site, returns that date in UTC."},"ƒ: get_date_from_gmt":{"prefix":["get_date_from_gmt","gdfg"],"body":"get_date_from_gmt( ${1:\\$date_string:string}, ${2:\\$format:string} )","description":"Given a date in UTC or GMT timezone, returns that date in the timezone of the site."},"ƒ: iso8601_timezone_to_offset":{"prefix":["iso8601_timezone_to_offset","itto"],"body":"iso8601_timezone_to_offset( ${1:\\$timezone:string} )","description":"Given an ISO 8601 timezone, returns its UTC offset in seconds."},"ƒ: iso8601_to_datetime":{"prefix":["iso8601_to_datetime","itd"],"body":"iso8601_to_datetime( ${1:\\$date_string:string}, ${2:\\$timezone:string} )","description":"Given an ISO 8601 (Ymd\\TH:i:sO) date, returns a MySQL DateTime (Y-m-d H:i:s) format used by post_date[_gmt]."},"ƒ: sanitize_email":{"prefix":["sanitize_email","se"],"body":"sanitize_email( ${1:\\$email:string} )","description":"Strips out all characters that are not allowable in an email."},"ƒ: human_time_diff":{"prefix":["human_time_diff","htd"],"body":"human_time_diff( ${1:\\$from:int}, ${2:\\$to:int} )","description":"Determines the difference between two timestamps."},"ƒ: wp_trim_excerpt":{"prefix":["wp_trim_excerpt","wte"],"body":"wp_trim_excerpt( ${1:\\$text:string}, ${2:\\$post:WP_Post|object|int|null} )","description":"Generates an excerpt from the content, if needed."},"ƒ: wp_trim_words":{"prefix":["wp_trim_words","wtw"],"body":"wp_trim_words( ${1:\\$text:string}, ${2:\\$num_words:int}, ${3:\\$more:string|null} )","description":"Trims text to a certain number of words."},"ƒ: ent2ncr":{"prefix":["ent2ncr"],"body":"ent2ncr( ${1:\\$text:string} )","description":"Converts named entities into numbered entities."},"ƒ: format_for_editor":{"prefix":["format_for_editor","ffe"],"body":"format_for_editor( ${1:\\$text:string}, ${2:\\$default_editor:string|null} )","description":"Formats text for the editor."},"ƒ: esc_sql":{"prefix":["esc_sql","es"],"body":"esc_sql( ${1:\\$data:string|array} )","description":"Escapes data for use in a MySQL query."},"ƒ: esc_url":{"prefix":["esc_url","eu"],"body":"esc_url( ${1:\\$url:string}, ${2:\\$protocols:string[]|null}, ${3:\\$_context:string} )","description":"Checks and cleans a URL."},"ƒ: esc_url_raw":{"prefix":["esc_url_raw","eur"],"body":"esc_url_raw( ${1:\\$url:string}, ${2:\\$protocols:string[]|null} )","description":"Sanitizes a URL for database or redirect usage."},"ƒ: sanitize_url":{"prefix":["sanitize_url","su"],"body":"sanitize_url( ${1:\\$url:string}, ${2:\\$protocols:string[]|null} )","description":"Sanitizes a URL for database or redirect usage."},"ƒ: htmlentities2":{"prefix":["htmlentities2"],"body":"htmlentities2( ${1:\\$text:string} )","description":"Converts entities, while preserving already-encoded entities."},"ƒ: esc_js":{"prefix":["esc_js","ej"],"body":"esc_js( ${1:\\$text:string} )","description":"Escapes single quotes, `\"`, `<`, `>`, `&`, and fixes line endings."},"ƒ: esc_html":{"prefix":["esc_html","eh"],"body":"esc_html( ${1:\\$text:string} )","description":"Escaping for HTML blocks."},"ƒ: esc_attr":{"prefix":["esc_attr","ea"],"body":"esc_attr( ${1:\\$text:string} )","description":"Escaping for HTML attributes."},"ƒ: esc_textarea":{"prefix":["esc_textarea","et"],"body":"esc_textarea( ${1:\\$text:string} )","description":"Escaping for textarea values."},"ƒ: esc_xml":{"prefix":["esc_xml","ex"],"body":"esc_xml( ${1:\\$text:string} )","description":"Escaping for XML blocks."},"ƒ: tag_escape":{"prefix":["tag_escape","te"],"body":"tag_escape( ${1:\\$tag_name:string} )","description":"Escapes an HTML tag name."},"ƒ: wp_make_link_relative":{"prefix":["wp_make_link_relative","wmlr"],"body":"wp_make_link_relative( ${1:\\$link:string} )","description":"Converts full URL paths to absolute paths."},"ƒ: sanitize_option":{"prefix":["sanitize_option","so"],"body":"sanitize_option( ${1:\\$option:string}, ${2:\\$value:mixed} )","description":"Sanitizes various option values based on the nature of the option."},"ƒ: map_deep":{"prefix":["map_deep","md"],"body":"map_deep( ${1:\\$value:mixed}, ${2:\\$callback:callable} )","description":"Maps a function to all non-iterable elements of an array or an object."},"ƒ: wp_parse_str":{"prefix":["wp_parse_str","wps"],"body":"wp_parse_str( ${1:\\$input_string:string}, ${2:\\$result:array} )","description":"Parses a string into variables to be stored in an array."},"ƒ: wp_pre_kses_less_than":{"prefix":["wp_pre_kses_less_than","wpklt"],"body":"wp_pre_kses_less_than( ${1:\\$content:string} )","description":"Converts lone less than signs."},"ƒ: wp_pre_kses_less_than_callback":{"prefix":["wp_pre_kses_less_than_callback","wpkltc"],"body":"wp_pre_kses_less_than_callback( ${1:\\$matches:string[]} )","description":"Callback function used by preg_replace."},"ƒ: wp_pre_kses_block_attributes":{"prefix":["wp_pre_kses_block_attributes","wpkba"],"body":"wp_pre_kses_block_attributes( ${1:\\$content:string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"Removes non-allowable HTML from parsed block attribute values when filtering in the post context."},"ƒ: wp_sprintf":{"prefix":["wp_sprintf","ws"],"body":"wp_sprintf( ${1:\\$pattern:string}, ${2:\\$args:mixed} )","description":"WordPress' implementation of PHP sprintf() with filters."},"ƒ: wp_sprintf_l":{"prefix":["wp_sprintf_l","wsl"],"body":"wp_sprintf_l( ${1:\\$pattern:string}, ${2:\\$args:array} )","description":"Localizes list items before the rest of the content."},"ƒ: wp_html_excerpt":{"prefix":["wp_html_excerpt","whe"],"body":"wp_html_excerpt( ${1:\\$str:string}, ${2:\\$count:int}, ${3:\\$more:string|null} )","description":"Safely extracts not more than the first $count characters from HTML string."},"ƒ: links_add_base_url":{"prefix":["links_add_base_url","labu"],"body":"links_add_base_url( ${1:\\$content:string}, ${2:\\$base:string}, ${3:\\$attrs:string[]} )","description":"Adds a base URL to relative links in passed content."},"ƒ: links_add_target":{"prefix":["links_add_target","lat"],"body":"links_add_target( ${1:\\$content:string}, ${2:\\$target:string}, ${3:\\$tags:string[]} )","description":"Adds a target attribute to all links in passed content."},"ƒ: normalize_whitespace":{"prefix":["normalize_whitespace","nw"],"body":"normalize_whitespace( ${1:\\$str:string} )","description":"Normalizes EOL characters and strips duplicate whitespace."},"ƒ: wp_strip_all_tags":{"prefix":["wp_strip_all_tags","wsat"],"body":"wp_strip_all_tags( ${1:\\$text:string}, ${2:\\$remove_breaks:bool} )","description":"Properly strips all HTML tags including 'script' and 'style'."},"ƒ: sanitize_text_field":{"prefix":["sanitize_text_field","stf"],"body":"sanitize_text_field( ${1:\\$str:string} )","description":"Sanitizes a string from user input or from the database."},"ƒ: sanitize_textarea_field":{"prefix":["sanitize_textarea_field","stf"],"body":"sanitize_textarea_field( ${1:\\$str:string} )","description":"Sanitizes a multiline string from user input or from the database."},"ƒ: wp_basename":{"prefix":["wp_basename","wb"],"body":"wp_basename( ${1:\\$path:string}, ${2:\\$suffix:string} )","description":"i18n-friendly version of basename()."},"ƒ: capital_P_dangit":{"prefix":["capital_P_dangit","cPd"],"body":"capital_P_dangit( ${1:\\$text:string} )","description":"Forever eliminate \"Wordpress\" from the planet (or at least the little bit we can influence)."},"ƒ: sanitize_mime_type":{"prefix":["sanitize_mime_type","smt"],"body":"sanitize_mime_type( ${1:\\$mime_type:string} )","description":"Sanitizes a mime type"},"ƒ: sanitize_trackback_urls":{"prefix":["sanitize_trackback_urls","stu"],"body":"sanitize_trackback_urls( ${1:\\$to_ping:string} )","description":"Sanitizes space or carriage return separated URLs that are used to send trackbacks."},"ƒ: wp_slash":{"prefix":["wp_slash","ws"],"body":"wp_slash( ${1:\\$value:string|array} )","description":"Adds slashes to a string or recursively adds slashes to strings within an array."},"ƒ: wp_unslash":{"prefix":["wp_unslash","wu"],"body":"wp_unslash( ${1:\\$value:string|array} )","description":"Removes slashes from a string or recursively removes slashes from strings within an array."},"ƒ: get_url_in_content":{"prefix":["get_url_in_content","guic"],"body":"get_url_in_content( ${1:\\$content:string} )","description":"Extracts and returns the first URL from passed content."},"ƒ: wp_spaces_regexp":{"prefix":["wp_spaces_regexp","wsr"],"body":"wp_spaces_regexp(  )","description":"Returns the regexp for common whitespace characters."},"ƒ: wp_enqueue_emoji_styles":{"prefix":["wp_enqueue_emoji_styles","wees"],"body":"wp_enqueue_emoji_styles(  )","description":"Enqueues the important emoji-related styles."},"ƒ: print_emoji_detection_script":{"prefix":["print_emoji_detection_script","peds"],"body":"print_emoji_detection_script(  )","description":"Prints the inline Emoji detection script if it is not already printed."},"ƒ: wp_encode_emoji":{"prefix":["wp_encode_emoji","wee"],"body":"wp_encode_emoji( ${1:\\$content:string} )","description":"Converts emoji characters to their equivalent HTML entity."},"ƒ: wp_staticize_emoji":{"prefix":["wp_staticize_emoji","wse"],"body":"wp_staticize_emoji( ${1:\\$text:string} )","description":"Converts emoji to a static img element."},"ƒ: wp_staticize_emoji_for_email":{"prefix":["wp_staticize_emoji_for_email","wsefe"],"body":"wp_staticize_emoji_for_email( ${1:\\$mail:array} )","description":"Converts emoji in emails into static images."},"ƒ: url_shorten":{"prefix":["url_shorten","us"],"body":"url_shorten( ${1:\\$url:string}, ${2:\\$length:int} )","description":"Shortens a URL, to be used as link text."},"ƒ: sanitize_hex_color":{"prefix":["sanitize_hex_color","shc"],"body":"sanitize_hex_color( ${1:\\$color:string} )","description":"Sanitizes a hex color."},"ƒ: sanitize_hex_color_no_hash":{"prefix":["sanitize_hex_color_no_hash","shcnh"],"body":"sanitize_hex_color_no_hash( ${1:\\$color:string} )","description":"Sanitizes a hex color without a hash. Use sanitize_hex_color() when possible."},"ƒ: maybe_hash_hex_color":{"prefix":["maybe_hash_hex_color","mhhc"],"body":"maybe_hash_hex_color( ${1:\\$color:string} )","description":"Ensures that any hex color is properly hashed."},"ƒ: mysql2date":{"prefix":["mysql2date"],"body":"mysql2date( ${1:\\$format:string}, ${2:\\$date:string}, ${3:\\$translate:bool} )","description":"Converts given MySQL date string into a different format."},"ƒ: current_time":{"prefix":["current_time","ct"],"body":"current_time( ${1:\\$type:string}, ${2:\\$gmt:int|bool} )","description":"Retrieves the current time based on specified type."},"ƒ: current_datetime":{"prefix":["current_datetime","cd"],"body":"current_datetime(  )","description":"Retrieves the current time as an object using the site's timezone."},"ƒ: wp_timezone_string":{"prefix":["wp_timezone_string","wts"],"body":"wp_timezone_string(  )","description":"Retrieves the timezone of the site as a string."},"ƒ: wp_timezone":{"prefix":["wp_timezone","wt"],"body":"wp_timezone(  )","description":"Retrieves the timezone of the site as a `DateTimeZone` object."},"ƒ: date_i18n":{"prefix":["date_i18n","di"],"body":"date_i18n( ${1:\\$format:string}, ${2:\\$timestamp_with_offset:int|bool}, ${3:\\$gmt:bool} )","description":"Retrieves the date in localized format, based on a sum of Unix timestamp and timezone offset in seconds."},"ƒ: wp_date":{"prefix":["wp_date","wd"],"body":"wp_date( ${1:\\$format:string}, ${2:\\$timestamp:int|null}, ${3:\\$timezone:DateTimeZone|null} )","description":"Retrieves the date, in localized format."},"ƒ: wp_maybe_decline_date":{"prefix":["wp_maybe_decline_date","wmdd"],"body":"wp_maybe_decline_date( ${1:\\$date:string}, ${2:\\$format:string} )","description":"Determines if the date should be declined."},"ƒ: number_format_i18n":{"prefix":["number_format_i18n","nfi"],"body":"number_format_i18n( ${1:\\$number:float}, ${2:\\$decimals:int} )","description":"Converts float number to format based on the locale."},"ƒ: size_format":{"prefix":["size_format","sf"],"body":"size_format( ${1:\\$bytes:int|string}, ${2:\\$decimals:int} )","description":"Converts a number of bytes to the largest unit the bytes will fit into."},"ƒ: human_readable_duration":{"prefix":["human_readable_duration","hrd"],"body":"human_readable_duration( ${1:\\$duration:string} )","description":"Converts a duration to human readable format."},"ƒ: get_weekstartend":{"prefix":["get_weekstartend","gw"],"body":"get_weekstartend( ${1:\\$mysqlstring:string}, ${2:\\$start_of_week:int|string} )","description":"Gets the week start and end from the datetime or date string from MySQL."},"ƒ: maybe_serialize":{"prefix":["maybe_serialize","ms"],"body":"maybe_serialize( ${1:\\$data:string|array|object} )","description":"Serializes data, if needed."},"ƒ: maybe_unserialize":{"prefix":["maybe_unserialize","mu"],"body":"maybe_unserialize( ${1:\\$data:string} )","description":"Unserializes data only if it was serialized."},"ƒ: is_serialized":{"prefix":["is_serialized","is"],"body":"is_serialized( ${1:\\$data:string}, ${2:\\$strict:bool} )","description":"Checks value to find if it was serialized."},"ƒ: is_serialized_string":{"prefix":["is_serialized_string","iss"],"body":"is_serialized_string( ${1:\\$data:string} )","description":"Checks whether serialized data is of string type."},"ƒ: xmlrpc_getposttitle":{"prefix":["xmlrpc_getposttitle","xg"],"body":"xmlrpc_getposttitle( ${1:\\$content:string} )","description":"Retrieves post title from XMLRPC XML."},"ƒ: xmlrpc_getpostcategory":{"prefix":["xmlrpc_getpostcategory","xg"],"body":"xmlrpc_getpostcategory( ${1:\\$content:string} )","description":"Retrieves the post category or categories from XMLRPC XML."},"ƒ: xmlrpc_removepostdata":{"prefix":["xmlrpc_removepostdata","xr"],"body":"xmlrpc_removepostdata( ${1:\\$content:string} )","description":"XMLRPC XML content without title and category elements."},"ƒ: wp_extract_urls":{"prefix":["wp_extract_urls","weu"],"body":"wp_extract_urls( ${1:\\$content:string} )","description":"Uses RegEx to extract URLs from arbitrary content."},"ƒ: do_enclose":{"prefix":["do_enclose","de"],"body":"do_enclose( ${1:\\$content:string|null}, ${2:\\$post:int|WP_Post} )","description":"Checks content for video and audio links to add as enclosures."},"ƒ: wp_get_http_headers":{"prefix":["wp_get_http_headers","wghh"],"body":"wp_get_http_headers( ${1:\\$url:string}, ${2:\\$deprecated:bool} )","description":"Retrieves HTTP Headers from URL."},"ƒ: is_new_day":{"prefix":["is_new_day","ind"],"body":"is_new_day(  )","description":"Determines whether the publish date of the current post in the loop is different from the publish date of the previous post in the loop."},"ƒ: build_query":{"prefix":["build_query","bq"],"body":"build_query( ${1:\\$data:array} )","description":"Builds URL query based on an associative and, or indexed array."},"ƒ: add_query_arg":{"prefix":["add_query_arg","aqa"],"body":"add_query_arg( ${1:\\$args:mixed} )","description":"Retrieves a modified URL query string."},"ƒ: remove_query_arg":{"prefix":["remove_query_arg","rqa"],"body":"remove_query_arg( ${1:\\$key:string|string[]}, ${2:\\$query:false|string} )","description":"Removes an item or items from a query string."},"ƒ: wp_removable_query_args":{"prefix":["wp_removable_query_args","wrqa"],"body":"wp_removable_query_args(  )","description":"Returns an array of single-use query variable names that can be removed from a URL."},"ƒ: add_magic_quotes":{"prefix":["add_magic_quotes","amq"],"body":"add_magic_quotes( ${1:\\$input_array:array} )","description":"Walks the array while sanitizing the contents."},"ƒ: wp_remote_fopen":{"prefix":["wp_remote_fopen","wrf"],"body":"wp_remote_fopen( ${1:\\$uri:string} )","description":"HTTP request for URI to retrieve content."},"ƒ: wp":{"prefix":["wp"],"body":"wp( ${1:\\$query_vars:string|array} )","description":"Sets up the WordPress query."},"ƒ: get_status_header_desc":{"prefix":["get_status_header_desc","gshd"],"body":"get_status_header_desc( ${1:\\$code:int} )","description":"Retrieves the description for the HTTP status."},"ƒ: status_header":{"prefix":["status_header","sh"],"body":"status_header( ${1:\\$code:int}, ${2:\\$description:string} )","description":"Sets HTTP status header."},"ƒ: wp_get_nocache_headers":{"prefix":["wp_get_nocache_headers","wgnh"],"body":"wp_get_nocache_headers(  )","description":"Gets the HTTP header information to prevent caching."},"ƒ: nocache_headers":{"prefix":["nocache_headers","nh"],"body":"nocache_headers(  )","description":"Sets the HTTP headers to prevent caching for the different browsers."},"ƒ: cache_javascript_headers":{"prefix":["cache_javascript_headers","cjh"],"body":"cache_javascript_headers(  )","description":"Sets the HTTP headers for caching for 10 days with JavaScript content type."},"ƒ: get_num_queries":{"prefix":["get_num_queries","gnq"],"body":"get_num_queries(  )","description":"Retrieves the number of database queries during the WordPress execution."},"ƒ: bool_from_yn":{"prefix":["bool_from_yn","bfy"],"body":"bool_from_yn( ${1:\\$yn:string} )","description":"Determines whether input is yes or no."},"ƒ: do_feed":{"prefix":["do_feed","df"],"body":"do_feed(  )","description":"Loads the feed template from the use of an action hook."},"ƒ: do_feed_rdf":{"prefix":["do_feed_rdf","dfr"],"body":"do_feed_rdf(  )","description":"Loads the RDF RSS 0.91 Feed template."},"ƒ: do_feed_rss":{"prefix":["do_feed_rss","dfr"],"body":"do_feed_rss(  )","description":"Loads the RSS 1.0 Feed Template."},"ƒ: do_feed_rss2":{"prefix":["do_feed_rss2","dfr"],"body":"do_feed_rss2( ${1:\\$for_comments:bool} )","description":"Loads either the RSS2 comment feed or the RSS2 posts feed."},"ƒ: do_feed_atom":{"prefix":["do_feed_atom","dfa"],"body":"do_feed_atom( ${1:\\$for_comments:bool} )","description":"Loads either Atom comment feed or Atom posts feed."},"ƒ: do_robots":{"prefix":["do_robots","dr"],"body":"do_robots(  )","description":"Displays the default robots.txt file content."},"ƒ: do_favicon":{"prefix":["do_favicon","df"],"body":"do_favicon(  )","description":"Displays the favicon.ico file content."},"ƒ: is_blog_installed":{"prefix":["is_blog_installed","ibi"],"body":"is_blog_installed(  )","description":"Determines whether WordPress is already installed."},"ƒ: wp_nonce_url":{"prefix":["wp_nonce_url","wnu"],"body":"wp_nonce_url( ${1:\\$actionurl:string}, ${2:\\$action:int|string}, ${3:\\$name:string} )","description":"Retrieves URL with nonce added to URL query."},"ƒ: wp_nonce_field":{"prefix":["wp_nonce_field","wnf"],"body":"wp_nonce_field( ${1:\\$action:int|string}, ${2:\\$name:string}, ${3:\\$referer:bool}, ${4:\\$display:bool} )","description":"Retrieves or display nonce hidden field for forms."},"ƒ: wp_referer_field":{"prefix":["wp_referer_field","wrf"],"body":"wp_referer_field( ${1:\\$display:bool} )","description":"Retrieves or displays referer hidden field for forms."},"ƒ: wp_original_referer_field":{"prefix":["wp_original_referer_field","worf"],"body":"wp_original_referer_field( ${1:\\$display:bool}, ${2:\\$jump_back_to:string} )","description":"Retrieves or displays original referer hidden field for forms."},"ƒ: wp_get_referer":{"prefix":["wp_get_referer","wgr"],"body":"wp_get_referer(  )","description":"Retrieves referer from '_wp_http_referer' or HTTP referer."},"ƒ: wp_get_raw_referer":{"prefix":["wp_get_raw_referer","wgrr"],"body":"wp_get_raw_referer(  )","description":"Retrieves unvalidated referer from the '_wp_http_referer' URL query variable or the HTTP referer."},"ƒ: wp_get_original_referer":{"prefix":["wp_get_original_referer","wgor"],"body":"wp_get_original_referer(  )","description":"Retrieves original referer that was posted, if it exists."},"ƒ: wp_mkdir_p":{"prefix":["wp_mkdir_p","wmp"],"body":"wp_mkdir_p( ${1:\\$target:string} )","description":"Recursive directory creation based on full path."},"ƒ: path_is_absolute":{"prefix":["path_is_absolute","pia"],"body":"path_is_absolute( ${1:\\$path:string} )","description":"Tests if a given filesystem path is absolute."},"ƒ: path_join":{"prefix":["path_join","pj"],"body":"path_join( ${1:\\$base:string}, ${2:\\$path:string} )","description":"Joins two filesystem paths together."},"ƒ: wp_normalize_path":{"prefix":["wp_normalize_path","wnp"],"body":"wp_normalize_path( ${1:\\$path:string} )","description":"Normalizes a filesystem path."},"ƒ: get_temp_dir":{"prefix":["get_temp_dir","gtd"],"body":"get_temp_dir(  )","description":"Determines a writable directory for temporary files."},"ƒ: wp_is_writable":{"prefix":["wp_is_writable","wiw"],"body":"wp_is_writable( ${1:\\$path:string} )","description":"Determines if a directory is writable."},"ƒ: win_is_writable":{"prefix":["win_is_writable","wiw"],"body":"win_is_writable( ${1:\\$path:string} )","description":"Workaround for Windows bug in is_writable() function"},"ƒ: wp_get_upload_dir":{"prefix":["wp_get_upload_dir","wgud"],"body":"wp_get_upload_dir(  )","description":"Retrieves uploads directory information."},"ƒ: wp_upload_dir":{"prefix":["wp_upload_dir","wud"],"body":"wp_upload_dir( ${1:\\$time:string|null|null}, ${2:\\$create_dir:bool}, ${3:\\$refresh_cache:bool} )","description":"Returns an array containing the current upload directory's path and URL."},"ƒ: wp_unique_filename":{"prefix":["wp_unique_filename","wuf"],"body":"wp_unique_filename( ${1:\\$dir:string}, ${2:\\$filename:string}, ${3:\\$unique_filename_callback:callable|null} )","description":"Gets a filename that is sanitized and unique for the given directory."},"ƒ: wp_upload_bits":{"prefix":["wp_upload_bits","wub"],"body":"wp_upload_bits( ${1:\\$name:string}, ${2:\\$deprecated:null|string}, ${3:\\$bits:string}, ${4:\\$time:string|null|null} )","description":"Creates a file in the upload folder with given content."},"ƒ: wp_ext2type":{"prefix":["wp_ext2type","we"],"body":"wp_ext2type( ${1:\\$ext:string} )","description":"Retrieves the file type based on the extension name."},"ƒ: wp_get_default_extension_for_mime_type":{"prefix":["wp_get_default_extension_for_mime_type","wgdefmt"],"body":"wp_get_default_extension_for_mime_type( ${1:\\$mime_type:string} )","description":"Returns first matched extension for the mime-type, as mapped from wp_get_mime_types()."},"ƒ: wp_check_filetype":{"prefix":["wp_check_filetype","wcf"],"body":"wp_check_filetype( ${1:\\$filename:string}, ${2:\\$mimes:string[]|null|null} )","description":"Retrieves the file type from the file name."},"ƒ: wp_check_filetype_and_ext":{"prefix":["wp_check_filetype_and_ext","wcfae"],"body":"wp_check_filetype_and_ext( ${1:\\$file:string}, ${2:\\$filename:string}, ${3:\\$mimes:string[]|null|null} )","description":"Attempts to determine the real file type of a file."},"ƒ: wp_get_image_mime":{"prefix":["wp_get_image_mime","wgim"],"body":"wp_get_image_mime( ${1:\\$file:string} )","description":"Returns the real mime type of an image file."},"ƒ: wp_get_mime_types":{"prefix":["wp_get_mime_types","wgmt"],"body":"wp_get_mime_types(  )","description":"Retrieves the list of mime types and file extensions."},"ƒ: wp_get_ext_types":{"prefix":["wp_get_ext_types","wget"],"body":"wp_get_ext_types(  )","description":"Retrieves the list of common file extensions and their types."},"ƒ: wp_filesize":{"prefix":["wp_filesize","wf"],"body":"wp_filesize( ${1:\\$path:string} )","description":"Wrapper for PHP filesize with filters and casting the result as an integer."},"ƒ: get_allowed_mime_types":{"prefix":["get_allowed_mime_types","gamt"],"body":"get_allowed_mime_types( ${1:\\$user:int|WP_User|null} )","description":"Retrieves the list of allowed mime types and file extensions."},"ƒ: wp_nonce_ays":{"prefix":["wp_nonce_ays","wna"],"body":"wp_nonce_ays( ${1:\\$action:string} )","description":"Displays \"Are You Sure\" message to confirm the action being taken."},"ƒ: wp_die":{"prefix":["wp_die","wd"],"body":"wp_die( ${1:\\$message:string|WP_Error}, ${2:\\$title:string|int}, ${3:\\$args:string|array|int} )","description":"Kills WordPress execution and displays HTML page with an error message."},"ƒ: wp_json_encode":{"prefix":["wp_json_encode","wje"],"body":"wp_json_encode( ${1:\\$value:mixed}, ${2:\\$flags:int}, ${3:\\$depth:int} )","description":"Encodes a variable into JSON, with some confidence checks."},"ƒ: wp_send_json":{"prefix":["wp_send_json","wsj"],"body":"wp_send_json( ${1:\\$response:mixed}, ${2:\\$status_code:int|null}, ${3:\\$flags:int} )","description":"Sends a JSON response back to an Ajax request."},"ƒ: wp_send_json_success":{"prefix":["wp_send_json_success","wsjs"],"body":"wp_send_json_success( ${1:\\$value:mixed|null}, ${2:\\$status_code:int|null}, ${3:\\$flags:int} )","description":"Sends a JSON response back to an Ajax request, indicating success."},"ƒ: wp_send_json_error":{"prefix":["wp_send_json_error","wsje"],"body":"wp_send_json_error( ${1:\\$value:mixed|null}, ${2:\\$status_code:int|null}, ${3:\\$flags:int} )","description":"Sends a JSON response back to an Ajax request, indicating failure."},"ƒ: wp_check_jsonp_callback":{"prefix":["wp_check_jsonp_callback","wcjc"],"body":"wp_check_jsonp_callback( ${1:\\$callback:string} )","description":"Checks that a JSONP callback is a valid JavaScript callback name."},"ƒ: wp_json_file_decode":{"prefix":["wp_json_file_decode","wjfd"],"body":"wp_json_file_decode( ${1:\\$filename:string}, ${2:\\$options:array} )","description":"Reads and decodes a JSON file."},"ƒ: wp_is_serving_rest_request":{"prefix":["wp_is_serving_rest_request","wisrr"],"body":"wp_is_serving_rest_request(  )","description":"Determines whether WordPress is currently serving a REST API request."},"ƒ: smilies_init":{"prefix":["smilies_init","si"],"body":"smilies_init(  )","description":"Converts smiley code to the icon graphic file equivalent."},"ƒ: wp_parse_args":{"prefix":["wp_parse_args","wpa"],"body":"wp_parse_args( ${1:\\$args:string|array|object}, ${2:\\$defaults:array} )","description":"Merges user defined arguments into defaults array."},"ƒ: wp_parse_list":{"prefix":["wp_parse_list","wpl"],"body":"wp_parse_list( ${1:\\$input_list:array|string} )","description":"Converts a comma- or space-separated list of scalar values to an array."},"ƒ: wp_parse_id_list":{"prefix":["wp_parse_id_list","wpil"],"body":"wp_parse_id_list( ${1:\\$input_list:array|string} )","description":"Cleans up an array, comma- or space-separated list of IDs."},"ƒ: wp_parse_slug_list":{"prefix":["wp_parse_slug_list","wpsl"],"body":"wp_parse_slug_list( ${1:\\$input_list:array|string} )","description":"Cleans up an array, comma- or space-separated list of slugs."},"ƒ: wp_array_slice_assoc":{"prefix":["wp_array_slice_assoc","wasa"],"body":"wp_array_slice_assoc( ${1:\\$input_array:array}, ${2:\\$keys:array} )","description":"Extracts a slice of an array, given a list of keys."},"ƒ: wp_recursive_ksort":{"prefix":["wp_recursive_ksort","wrk"],"body":"wp_recursive_ksort( ${1:\\$input_array:array} )","description":"Sorts the keys of an array alphabetically."},"ƒ: wp_is_numeric_array":{"prefix":["wp_is_numeric_array","wina"],"body":"wp_is_numeric_array( ${1:\\$data:mixed} )","description":"Determines if the variable is a numeric-indexed array."},"ƒ: wp_filter_object_list":{"prefix":["wp_filter_object_list","wfol"],"body":"wp_filter_object_list( ${1:\\$input_list:array}, ${2:\\$args:array}, ${3:\\$operator:string}, ${4:\\$field:bool|string} )","description":"Filters a list of objects, based on a set of key => value arguments."},"ƒ: wp_list_filter":{"prefix":["wp_list_filter","wlf"],"body":"wp_list_filter( ${1:\\$input_list:array}, ${2:\\$args:array}, ${3:\\$operator:string} )","description":"Filters a list of objects, based on a set of key => value arguments."},"ƒ: wp_list_pluck":{"prefix":["wp_list_pluck","wlp"],"body":"wp_list_pluck( ${1:\\$input_list:array}, ${2:\\$field:int|string}, ${3:\\$index_key:int|string|null} )","description":"Plucks a certain field out of each object or array in an array."},"ƒ: wp_list_sort":{"prefix":["wp_list_sort","wls"],"body":"wp_list_sort( ${1:\\$input_list:array}, ${2:\\$orderby:string|array}, ${3:\\$order:string}, ${4:\\$preserve_keys:bool} )","description":"Sorts an array of objects or arrays based on one or more orderby arguments."},"ƒ: wp_maybe_load_widgets":{"prefix":["wp_maybe_load_widgets","wmlw"],"body":"wp_maybe_load_widgets(  )","description":"Determines if Widgets library should be loaded."},"ƒ: wp_widgets_add_menu":{"prefix":["wp_widgets_add_menu","wwam"],"body":"wp_widgets_add_menu(  )","description":"Appends the Widgets menu to the themes main menu."},"ƒ: wp_ob_end_flush_all":{"prefix":["wp_ob_end_flush_all","woefa"],"body":"wp_ob_end_flush_all(  )","description":"Flushes all output buffers for PHP 5.2."},"ƒ: dead_db":{"prefix":["dead_db","dd"],"body":"dead_db(  )","description":"Loads custom DB error or display WordPress DB error."},"ƒ: wp_trigger_error":{"prefix":["wp_trigger_error","wte"],"body":"wp_trigger_error( ${1:\\$function_name:string}, ${2:\\$message:string}, ${3:\\$error_level:int} )","description":"Generates a user-level error/warning/notice/deprecation message."},"ƒ: is_lighttpd_before_150":{"prefix":["is_lighttpd_before_150","ilb1"],"body":"is_lighttpd_before_150(  )","description":"Determines whether the server is running an earlier than 1.5.0 version of lighttpd."},"ƒ: apache_mod_loaded":{"prefix":["apache_mod_loaded","aml"],"body":"apache_mod_loaded( ${1:\\$mod:string}, ${2:\\$default_value:bool} )","description":"Determines whether the specified module exist in the Apache config."},"ƒ: iis7_supports_permalinks":{"prefix":["iis7_supports_permalinks","isp"],"body":"iis7_supports_permalinks(  )","description":"Checks if IIS 7+ supports pretty permalinks."},"ƒ: validate_file":{"prefix":["validate_file","vf"],"body":"validate_file( ${1:\\$file:string}, ${2:\\$allowed_files:string[]} )","description":"Validates a file name and path against an allowed set of rules."},"ƒ: force_ssl_admin":{"prefix":["force_ssl_admin","fsa"],"body":"force_ssl_admin( ${1:\\$force:string|bool|null|null} )","description":"Determines whether to force SSL used for the Administration Screens."},"ƒ: wp_guess_url":{"prefix":["wp_guess_url","wgu"],"body":"wp_guess_url(  )","description":"Guesses the URL for the site."},"ƒ: wp_suspend_cache_addition":{"prefix":["wp_suspend_cache_addition","wsca"],"body":"wp_suspend_cache_addition( ${1:\\$suspend:bool|null} )","description":"Temporarily suspends cache additions."},"ƒ: wp_suspend_cache_invalidation":{"prefix":["wp_suspend_cache_invalidation","wsci"],"body":"wp_suspend_cache_invalidation( ${1:\\$suspend:bool} )","description":"Suspends cache invalidation."},"ƒ: is_main_site":{"prefix":["is_main_site","ims"],"body":"is_main_site( ${1:\\$site_id:int|null}, ${2:\\$network_id:int|null} )","description":"Determines whether a site is the main site of the current network."},"ƒ: get_main_site_id":{"prefix":["get_main_site_id","gmsi"],"body":"get_main_site_id( ${1:\\$network_id:int|null} )","description":"Gets the main site ID."},"ƒ: is_main_network":{"prefix":["is_main_network","imn"],"body":"is_main_network( ${1:\\$network_id:int|null} )","description":"Determines whether a network is the main network of the Multisite installation."},"ƒ: get_main_network_id":{"prefix":["get_main_network_id","gmni"],"body":"get_main_network_id(  )","description":"Gets the main network ID."},"ƒ: is_site_meta_supported":{"prefix":["is_site_meta_supported","isms"],"body":"is_site_meta_supported(  )","description":"Determines whether site meta is enabled."},"ƒ: wp_timezone_override_offset":{"prefix":["wp_timezone_override_offset","wtoo"],"body":"wp_timezone_override_offset(  )","description":"Modifies gmt_offset for smart timezone handling."},"ƒ: wp_timezone_choice":{"prefix":["wp_timezone_choice","wtc"],"body":"wp_timezone_choice( ${1:\\$selected_zone:string}, ${2:\\$locale:string|null} )","description":"Gives a nicely-formatted list of timezone strings."},"ƒ: wp_scheduled_delete":{"prefix":["wp_scheduled_delete","wsd"],"body":"wp_scheduled_delete(  )","description":"Permanently deletes comments or posts of any type that have held a status of 'trash' for the number of days defined in EMPTY_TRASH_DAYS."},"ƒ: get_file_data":{"prefix":["get_file_data","gfd"],"body":"get_file_data( ${1:\\$file:string}, ${2:\\$default_headers:array}, ${3:\\$context:string} )","description":"Retrieves metadata from a file."},"ƒ: send_nosniff_header":{"prefix":["send_nosniff_header","snh"],"body":"send_nosniff_header(  )","description":"Sends a HTTP header to disable content type sniffing in browsers which support it."},"ƒ: send_frame_options_header":{"prefix":["send_frame_options_header","sfoh"],"body":"send_frame_options_header(  )","description":"Sends a HTTP header to limit rendering of pages to same origin iframes."},"ƒ: wp_admin_headers":{"prefix":["wp_admin_headers","wah"],"body":"wp_admin_headers(  )","description":"Sends a referrer policy header so referrers are not sent externally from administration screens."},"ƒ: wp_allowed_protocols":{"prefix":["wp_allowed_protocols","wap"],"body":"wp_allowed_protocols(  )","description":"Retrieves a list of protocols to allow in HTML attributes."},"ƒ: wp_debug_backtrace_summary":{"prefix":["wp_debug_backtrace_summary","wdbs"],"body":"wp_debug_backtrace_summary( ${1:\\$ignore_class:string|null}, ${2:\\$skip_frames:int}, ${3:\\$pretty:bool} )","description":"Returns a comma-separated string or array of functions that have been called to get to the current point in code."},"ƒ: wp_is_stream":{"prefix":["wp_is_stream","wis"],"body":"wp_is_stream( ${1:\\$path:string} )","description":"Tests if a given path is a stream URL"},"ƒ: wp_checkdate":{"prefix":["wp_checkdate","wc"],"body":"wp_checkdate( ${1:\\$month:int}, ${2:\\$day:int}, ${3:\\$year:int}, ${4:\\$source_date:string} )","description":"Tests if the supplied date is valid for the Gregorian calendar."},"ƒ: wp_auth_check_load":{"prefix":["wp_auth_check_load","wacl"],"body":"wp_auth_check_load(  )","description":"Loads the auth check for monitoring whether the user is still logged in."},"ƒ: wp_auth_check_html":{"prefix":["wp_auth_check_html","wach"],"body":"wp_auth_check_html(  )","description":"Outputs the HTML that shows the wp-login dialog when the user is no longer logged in."},"ƒ: wp_auth_check":{"prefix":["wp_auth_check","wac"],"body":"wp_auth_check( ${1:\\$response:array} )","description":"Checks whether a user is still logged in, for the heartbeat."},"ƒ: get_tag_regex":{"prefix":["get_tag_regex","gtr"],"body":"get_tag_regex( ${1:\\$tag:string} )","description":"Returns RegEx body to liberally match an opening HTML tag."},"ƒ: is_utf8_charset":{"prefix":["is_utf8_charset","iuc"],"body":"is_utf8_charset( ${1:\\$blog_charset:string|null|null} )","description":"Indicates if a given slug for a character set represents the UTF-8 text encoding. If not provided, examines the current blog's charset."},"ƒ: mbstring_binary_safe_encoding":{"prefix":["mbstring_binary_safe_encoding","mbse"],"body":"mbstring_binary_safe_encoding( ${1:\\$reset:bool} )","description":"Sets the mbstring internal encoding to a binary safe encoding when func_overload is enabled."},"ƒ: reset_mbstring_encoding":{"prefix":["reset_mbstring_encoding","rme"],"body":"reset_mbstring_encoding(  )","description":"Resets the mbstring internal encoding to a users previously set encoding."},"ƒ: wp_validate_boolean":{"prefix":["wp_validate_boolean","wvb"],"body":"wp_validate_boolean( ${1:\\$value:mixed} )","description":"Filters/validates a variable as a boolean."},"ƒ: wp_delete_file":{"prefix":["wp_delete_file","wdf"],"body":"wp_delete_file( ${1:\\$file:string} )","description":"Deletes a file."},"ƒ: wp_delete_file_from_directory":{"prefix":["wp_delete_file_from_directory","wdffd"],"body":"wp_delete_file_from_directory( ${1:\\$file:string}, ${2:\\$directory:string} )","description":"Deletes a file if its path is within the given directory."},"ƒ: wp_post_preview_js":{"prefix":["wp_post_preview_js","wppj"],"body":"wp_post_preview_js(  )","description":"Outputs a small JS snippet on preview tabs/windows to remove `window.name` when a user is navigating to another page."},"ƒ: mysql_to_rfc3339":{"prefix":["mysql_to_rfc3339","mtr"],"body":"mysql_to_rfc3339( ${1:\\$date_string:string} )","description":"Parses and formats a MySQL datetime (Y-m-d H:i:s) for ISO8601 (Y-m-d\\TH:i:s)."},"ƒ: wp_raise_memory_limit":{"prefix":["wp_raise_memory_limit","wrml"],"body":"wp_raise_memory_limit( ${1:\\$context:string} )","description":"Attempts to raise the PHP memory limit for memory intensive processes."},"ƒ: wp_generate_uuid4":{"prefix":["wp_generate_uuid4","wgu"],"body":"wp_generate_uuid4(  )","description":"Generates a random UUID (version 4)."},"ƒ: wp_is_uuid":{"prefix":["wp_is_uuid","wiu"],"body":"wp_is_uuid( ${1:\\$uuid:mixed}, ${2:\\$version:int|null} )","description":"Validates that a UUID is valid."},"ƒ: wp_unique_id":{"prefix":["wp_unique_id","wui"],"body":"wp_unique_id( ${1:\\$prefix:string} )","description":"Gets unique ID."},"ƒ: wp_unique_prefixed_id":{"prefix":["wp_unique_prefixed_id","wupi"],"body":"wp_unique_prefixed_id( ${1:\\$prefix:string} )","description":"Generates an incremental ID that is independent per each different prefix."},"ƒ: wp_cache_get_last_changed":{"prefix":["wp_cache_get_last_changed","wcglc"],"body":"wp_cache_get_last_changed( ${1:\\$group:string} )","description":"Gets last changed date for the specified cache group."},"ƒ: wp_cache_set_last_changed":{"prefix":["wp_cache_set_last_changed","wcslc"],"body":"wp_cache_set_last_changed( ${1:\\$group:string} )","description":"Sets last changed date for the specified cache group to now."},"ƒ: wp_site_admin_email_change_notification":{"prefix":["wp_site_admin_email_change_notification","wsaecn"],"body":"wp_site_admin_email_change_notification( ${1:\\$old_email:string}, ${2:\\$new_email:string}, ${3:\\$option_name:string} )","description":"Sends an email to the old site admin email address when the site admin email address changes."},"ƒ: wp_privacy_anonymize_ip":{"prefix":["wp_privacy_anonymize_ip","wpai"],"body":"wp_privacy_anonymize_ip( ${1:\\$ip_addr:string}, ${2:\\$ipv6_fallback:bool} )","description":"Returns an anonymized IPv4 or IPv6 address."},"ƒ: wp_privacy_anonymize_data":{"prefix":["wp_privacy_anonymize_data","wpad"],"body":"wp_privacy_anonymize_data( ${1:\\$type:string}, ${2:\\$data:string} )","description":"Returns uniform \"anonymous\" data by type."},"ƒ: wp_privacy_exports_dir":{"prefix":["wp_privacy_exports_dir","wped"],"body":"wp_privacy_exports_dir(  )","description":"Returns the directory used to store personal data export files."},"ƒ: wp_privacy_exports_url":{"prefix":["wp_privacy_exports_url","wpeu"],"body":"wp_privacy_exports_url(  )","description":"Returns the URL of the directory used to store personal data export files."},"ƒ: wp_schedule_delete_old_privacy_export_files":{"prefix":["wp_schedule_delete_old_privacy_export_files","wsdopef"],"body":"wp_schedule_delete_old_privacy_export_files(  )","description":"Schedules a `WP_Cron` job to delete expired export files."},"ƒ: wp_privacy_delete_old_export_files":{"prefix":["wp_privacy_delete_old_export_files","wpdoef"],"body":"wp_privacy_delete_old_export_files(  )","description":"Cleans up export files older than three days old."},"ƒ: wp_get_update_php_url":{"prefix":["wp_get_update_php_url","wgupu"],"body":"wp_get_update_php_url(  )","description":"Gets the URL to learn more about updating the PHP version the site is running on."},"ƒ: wp_update_php_annotation":{"prefix":["wp_update_php_annotation","wupa"],"body":"wp_update_php_annotation( ${1:\\$before:string}, ${2:\\$after:string}, ${3:\\$display:bool} )","description":"Prints the default annotation for the web host altering the \"Update PHP\" page URL."},"ƒ: wp_get_update_php_annotation":{"prefix":["wp_get_update_php_annotation","wgupa"],"body":"wp_get_update_php_annotation(  )","description":"Returns the default annotation for the web hosting altering the \"Update PHP\" page URL."},"ƒ: wp_get_direct_php_update_url":{"prefix":["wp_get_direct_php_update_url","wgdpuu"],"body":"wp_get_direct_php_update_url(  )","description":"Gets the URL for directly updating the PHP version the site is running on."},"ƒ: wp_direct_php_update_button":{"prefix":["wp_direct_php_update_button","wdpub"],"body":"wp_direct_php_update_button(  )","description":"Displays a button directly linking to a PHP update process."},"ƒ: wp_get_update_https_url":{"prefix":["wp_get_update_https_url","wguhu"],"body":"wp_get_update_https_url(  )","description":"Gets the URL to learn more about updating the site to use HTTPS."},"ƒ: wp_get_direct_update_https_url":{"prefix":["wp_get_direct_update_https_url","wgduhu"],"body":"wp_get_direct_update_https_url(  )","description":"Gets the URL for directly updating the site to use HTTPS."},"ƒ: get_dirsize":{"prefix":["get_dirsize","gd"],"body":"get_dirsize( ${1:\\$directory:string}, ${2:\\$max_execution_time:int|null} )","description":"Gets the size of a directory."},"ƒ: recurse_dirsize":{"prefix":["recurse_dirsize","rd"],"body":"recurse_dirsize( ${1:\\$directory:string}, ${2:\\$exclude:string|string[]|null}, ${3:\\$max_execution_time:int|null}, ${4:\\$directory_cache:array|null} )","description":"Gets the size of a directory recursively."},"ƒ: clean_dirsize_cache":{"prefix":["clean_dirsize_cache","cdc"],"body":"clean_dirsize_cache( ${1:\\$path:string} )","description":"Cleans directory size cache used by recurse_dirsize()."},"ƒ: wp_get_wp_version":{"prefix":["wp_get_wp_version","wgwv"],"body":"wp_get_wp_version(  )","description":"Returns the current WordPress version."},"ƒ: is_wp_version_compatible":{"prefix":["is_wp_version_compatible","iwvc"],"body":"is_wp_version_compatible( ${1:\\$required:string} )","description":"Checks compatibility with the current WordPress version."},"ƒ: is_php_version_compatible":{"prefix":["is_php_version_compatible","ipvc"],"body":"is_php_version_compatible( ${1:\\$required:string} )","description":"Checks compatibility with the current PHP version."},"ƒ: wp_fuzzy_number_match":{"prefix":["wp_fuzzy_number_match","wfnm"],"body":"wp_fuzzy_number_match( ${1:\\$expected:int|float}, ${2:\\$actual:int|float}, ${3:\\$precision:int|float} )","description":"Checks if two numbers are nearly the same."},"ƒ: wp_get_admin_notice":{"prefix":["wp_get_admin_notice","wgan"],"body":"wp_get_admin_notice( ${1:\\$message:string}, ${2:\\$args:array} )","description":"Creates and returns the markup for an admin notice."},"ƒ: wp_admin_notice":{"prefix":["wp_admin_notice","wan"],"body":"wp_admin_notice( ${1:\\$message:string}, ${2:\\$args:array} )","description":"Outputs an admin notice."},"ƒ: wp_is_heic_image_mime_type":{"prefix":["wp_is_heic_image_mime_type","wihimt"],"body":"wp_is_heic_image_mime_type( ${1:\\$mime_type:string} )","description":"Checks if a mime type is for a HEIC/HEIF image."},"ƒ: wp_fast_hash":{"prefix":["wp_fast_hash","wfh"],"body":"wp_fast_hash( ${1:\\$message:string} )","description":"Returns a cryptographically secure hash of a message using a fast generic hash function."},"ƒ: wp_verify_fast_hash":{"prefix":["wp_verify_fast_hash","wvfh"],"body":"wp_verify_fast_hash( ${1:\\$message:string}, ${2:\\$hash:string} )","description":"Checks whether a plaintext message matches the hashed value. Used to verify values hashed via wp_fast_hash()."},"ƒ: wp_unique_id_from_values":{"prefix":["wp_unique_id_from_values","wuifv"],"body":"wp_unique_id_from_values( ${1:\\$data:array}, ${2:\\$prefix:string} )","description":"Generates a unique ID based on the structure and values of a given array."},"ƒ: wp_scripts":{"prefix":["wp_scripts","ws"],"body":"wp_scripts(  )","description":"Initializes $wp_scripts if it has not been set."},"ƒ: wp_print_scripts":{"prefix":["wp_print_scripts","wps"],"body":"wp_print_scripts( ${1:\\$handles:string|string[]|false} )","description":"Prints scripts in document head that are in the $handles queue."},"ƒ: wp_add_inline_script":{"prefix":["wp_add_inline_script","wais"],"body":"wp_add_inline_script( ${1:\\$handle:string}, ${2:\\$data:string}, ${3:\\$position:string} )","description":"Adds extra code to a registered script."},"ƒ: wp_register_script":{"prefix":["wp_register_script","wrs"],"body":"wp_register_script( ${1:\\$handle:string}, ${2:\\$src:string|false}, ${3:\\$deps:string[]}, ${4:\\$ver:string|bool|null}, ${5:\\$args:array|bool} )","description":"Registers a new script."},"ƒ: wp_localize_script":{"prefix":["wp_localize_script","wls"],"body":"wp_localize_script( ${1:\\$handle:string}, ${2:\\$object_name:string}, ${3:\\$l10n:array} )","description":"Localizes a script."},"ƒ: wp_set_script_translations":{"prefix":["wp_set_script_translations","wsst"],"body":"wp_set_script_translations( ${1:\\$handle:string}, ${2:\\$domain:string}, ${3:\\$path:string} )","description":"Sets translated strings for a script."},"ƒ: wp_deregister_script":{"prefix":["wp_deregister_script","wds"],"body":"wp_deregister_script( ${1:\\$handle:string} )","description":"Removes a registered script."},"ƒ: wp_enqueue_script":{"prefix":["wp_enqueue_script","wes"],"body":"wp_enqueue_script( ${1:\\$handle:string}, ${2:\\$src:string}, ${3:\\$deps:string[]}, ${4:\\$ver:string|bool|null}, ${5:\\$args:array|bool} )","description":"Enqueues a script."},"ƒ: wp_dequeue_script":{"prefix":["wp_dequeue_script","wds"],"body":"wp_dequeue_script( ${1:\\$handle:string} )","description":"Removes a previously enqueued script."},"ƒ: wp_script_is":{"prefix":["wp_script_is","wsi"],"body":"wp_script_is( ${1:\\$handle:string}, ${2:\\$status:string} )","description":"Determines whether a script has been added to the queue."},"ƒ: wp_script_add_data":{"prefix":["wp_script_add_data","wsad"],"body":"wp_script_add_data( ${1:\\$handle:string}, ${2:\\$key:string}, ${3:\\$value:mixed} )","description":"Adds metadata to a script."},"ƒ: wp_styles":{"prefix":["wp_styles","ws"],"body":"wp_styles(  )","description":"Initializes $wp_styles if it has not been set."},"ƒ: wp_print_styles":{"prefix":["wp_print_styles","wps"],"body":"wp_print_styles( ${1:\\$handles:string|bool|array} )","description":"Displays styles that are in the $handles queue."},"ƒ: wp_add_inline_style":{"prefix":["wp_add_inline_style","wais"],"body":"wp_add_inline_style( ${1:\\$handle:string}, ${2:\\$data:string} )","description":"Adds extra CSS styles to a registered stylesheet."},"ƒ: wp_register_style":{"prefix":["wp_register_style","wrs"],"body":"wp_register_style( ${1:\\$handle:string}, ${2:\\$src:string|false}, ${3:\\$deps:string[]}, ${4:\\$ver:string|bool|null}, ${5:\\$media:string} )","description":"Registers a CSS stylesheet."},"ƒ: wp_deregister_style":{"prefix":["wp_deregister_style","wds"],"body":"wp_deregister_style( ${1:\\$handle:string} )","description":"Removes a registered stylesheet."},"ƒ: wp_enqueue_style":{"prefix":["wp_enqueue_style","wes"],"body":"wp_enqueue_style( ${1:\\$handle:string}, ${2:\\$src:string}, ${3:\\$deps:string[]}, ${4:\\$ver:string|bool|null}, ${5:\\$media:string} )","description":"Enqueues a CSS stylesheet."},"ƒ: wp_dequeue_style":{"prefix":["wp_dequeue_style","wds"],"body":"wp_dequeue_style( ${1:\\$handle:string} )","description":"Removes a previously enqueued CSS stylesheet."},"ƒ: wp_style_is":{"prefix":["wp_style_is","wsi"],"body":"wp_style_is( ${1:\\$handle:string}, ${2:\\$status:string} )","description":"Checks whether a CSS stylesheet has been added to the queue."},"ƒ: wp_style_add_data":{"prefix":["wp_style_add_data","wsad"],"body":"wp_style_add_data( ${1:\\$handle:string}, ${2:\\$key:string}, ${3:\\$value:mixed} )","description":"Adds metadata to a CSS stylesheet."},"ƒ: get_header":{"prefix":["get_header","gh"],"body":"get_header( ${1:\\$name:string|null|null}, ${2:\\$args:array} )","description":"Loads header template."},"ƒ: get_footer":{"prefix":["get_footer","gf"],"body":"get_footer( ${1:\\$name:string|null|null}, ${2:\\$args:array} )","description":"Loads footer template."},"ƒ: get_sidebar":{"prefix":["get_sidebar","gs"],"body":"get_sidebar( ${1:\\$name:string|null|null}, ${2:\\$args:array} )","description":"Loads sidebar template."},"ƒ: get_template_part":{"prefix":["get_template_part","gtp"],"body":"get_template_part( ${1:\\$slug:string}, ${2:\\$name:string|null|null}, ${3:\\$args:array} )","description":"Loads a template part into a template."},"ƒ: get_search_form":{"prefix":["get_search_form","gsf"],"body":"get_search_form( ${1:\\$args:array} )","description":"Displays search form."},"ƒ: wp_loginout":{"prefix":["wp_loginout","wl"],"body":"wp_loginout( ${1:\\$redirect:string}, ${2:\\$display:bool} )","description":"Displays the Log In/Out link."},"ƒ: wp_logout_url":{"prefix":["wp_logout_url","wlu"],"body":"wp_logout_url( ${1:\\$redirect:string} )","description":"Retrieves the logout URL."},"ƒ: wp_login_url":{"prefix":["wp_login_url","wlu"],"body":"wp_login_url( ${1:\\$redirect:string}, ${2:\\$force_reauth:bool} )","description":"Retrieves the login URL."},"ƒ: wp_registration_url":{"prefix":["wp_registration_url","wru"],"body":"wp_registration_url(  )","description":"Returns the URL that allows the user to register on the site."},"ƒ: wp_login_form":{"prefix":["wp_login_form","wlf"],"body":"wp_login_form( ${1:\\$args:array} )","description":"Provides a simple login form for use anywhere within WordPress."},"ƒ: wp_lostpassword_url":{"prefix":["wp_lostpassword_url","wlu"],"body":"wp_lostpassword_url( ${1:\\$redirect:string} )","description":"Returns the URL that allows the user to reset the lost password."},"ƒ: wp_register":{"prefix":["wp_register","wr"],"body":"wp_register( ${1:\\$before:string}, ${2:\\$after:string}, ${3:\\$display:bool} )","description":"Displays the Registration or Admin link."},"ƒ: wp_meta":{"prefix":["wp_meta","wm"],"body":"wp_meta(  )","description":"Theme container function for the 'wp_meta' action."},"ƒ: bloginfo":{"prefix":["bloginfo"],"body":"bloginfo( ${1:\\$show:string} )","description":"Displays information about the current site."},"ƒ: get_bloginfo":{"prefix":["get_bloginfo","gb"],"body":"get_bloginfo( ${1:\\$show:string}, ${2:\\$filter:string} )","description":"Retrieves information about the current site."},"ƒ: get_site_icon_url":{"prefix":["get_site_icon_url","gsiu"],"body":"get_site_icon_url( ${1:\\$size:int}, ${2:\\$url:string}, ${3:\\$blog_id:int} )","description":"Returns the Site Icon URL."},"ƒ: site_icon_url":{"prefix":["site_icon_url","siu"],"body":"site_icon_url( ${1:\\$size:int}, ${2:\\$url:string}, ${3:\\$blog_id:int} )","description":"Displays the Site Icon URL."},"ƒ: has_site_icon":{"prefix":["has_site_icon","hsi"],"body":"has_site_icon( ${1:\\$blog_id:int} )","description":"Determines whether the site has a Site Icon."},"ƒ: has_custom_logo":{"prefix":["has_custom_logo","hcl"],"body":"has_custom_logo( ${1:\\$blog_id:int} )","description":"Determines whether the site has a custom logo."},"ƒ: get_custom_logo":{"prefix":["get_custom_logo","gcl"],"body":"get_custom_logo( ${1:\\$blog_id:int} )","description":"Returns a custom logo, linked to home unless the theme supports removing the link on the home page."},"ƒ: the_custom_logo":{"prefix":["the_custom_logo","tcl"],"body":"the_custom_logo( ${1:\\$blog_id:int} )","description":"Displays a custom logo, linked to home unless the theme supports removing the link on the home page."},"ƒ: wp_get_document_title":{"prefix":["wp_get_document_title","wgdt"],"body":"wp_get_document_title(  )","description":"Returns document title for the current page."},"ƒ: wp_title":{"prefix":["wp_title","wt"],"body":"wp_title( ${1:\\$sep:string}, ${2:\\$display:bool}, ${3:\\$seplocation:string} )","description":"Displays or retrieves page title for all areas of blog."},"ƒ: single_post_title":{"prefix":["single_post_title","spt"],"body":"single_post_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves page title for post."},"ƒ: post_type_archive_title":{"prefix":["post_type_archive_title","ptat"],"body":"post_type_archive_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves title for a post type archive."},"ƒ: single_cat_title":{"prefix":["single_cat_title","sct"],"body":"single_cat_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves page title for category archive."},"ƒ: single_tag_title":{"prefix":["single_tag_title","stt"],"body":"single_tag_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves page title for tag post archive."},"ƒ: single_term_title":{"prefix":["single_term_title","stt"],"body":"single_term_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves page title for taxonomy term archive."},"ƒ: single_month_title":{"prefix":["single_month_title","smt"],"body":"single_month_title( ${1:\\$prefix:string}, ${2:\\$display:bool} )","description":"Displays or retrieves page title for post archive based on date."},"ƒ: the_archive_title":{"prefix":["the_archive_title","tat"],"body":"the_archive_title( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Displays the archive title based on the queried object."},"ƒ: get_the_archive_title":{"prefix":["get_the_archive_title","gtat"],"body":"get_the_archive_title(  )","description":"Retrieves the archive title based on the queried object."},"ƒ: the_archive_description":{"prefix":["the_archive_description","tad"],"body":"the_archive_description( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Displays category, tag, term, or author description."},"ƒ: get_the_archive_description":{"prefix":["get_the_archive_description","gtad"],"body":"get_the_archive_description(  )","description":"Retrieves the description for an author, post type, or term archive."},"ƒ: get_the_post_type_description":{"prefix":["get_the_post_type_description","gtptd"],"body":"get_the_post_type_description(  )","description":"Retrieves the description for a post type archive."},"ƒ: get_archives_link":{"prefix":["get_archives_link","gal"],"body":"get_archives_link( ${1:\\$url:string}, ${2:\\$text:string}, ${3:\\$format:string}, ${4:\\$before:string}, ${5:\\$after:string}, ${6:\\$selected:bool} )","description":"Retrieves archive link content based on predefined or custom code."},"ƒ: wp_get_archives":{"prefix":["wp_get_archives","wga"],"body":"wp_get_archives( ${1:\\$args:string|array} )","description":"Displays archive links based on type and format."},"ƒ: calendar_week_mod":{"prefix":["calendar_week_mod","cwm"],"body":"calendar_week_mod( ${1:\\$num:int} )","description":"Gets number of days since the start of the week."},"ƒ: get_calendar":{"prefix":["get_calendar","gc"],"body":"get_calendar( ${1:\\$args:array} )","description":"Displays calendar with days that have posts as links."},"ƒ: delete_get_calendar_cache":{"prefix":["delete_get_calendar_cache","dgcc"],"body":"delete_get_calendar_cache(  )","description":"Purges the cached results of get_calendar."},"ƒ: allowed_tags":{"prefix":["allowed_tags","at"],"body":"allowed_tags(  )","description":"Displays all of the allowed tags in HTML format with attributes."},"ƒ: the_date_xml":{"prefix":["the_date_xml","tdx"],"body":"the_date_xml(  )","description":"Outputs the date in iso8601 format for xml files."},"ƒ: the_date":{"prefix":["the_date","td"],"body":"the_date( ${1:\\$format:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$display:bool} )","description":"Displays or retrieves the date of the post (once per date)."},"ƒ: get_the_date":{"prefix":["get_the_date","gtd"],"body":"get_the_date( ${1:\\$format:string}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves the date of the post."},"ƒ: the_modified_date":{"prefix":["the_modified_date","tmd"],"body":"the_modified_date( ${1:\\$format:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$display:bool} )","description":"Displays the date on which the post was last modified."},"ƒ: get_the_modified_date":{"prefix":["get_the_modified_date","gtmd"],"body":"get_the_modified_date( ${1:\\$format:string}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves the date on which the post was last modified."},"ƒ: the_time":{"prefix":["the_time","tt"],"body":"the_time( ${1:\\$format:string} )","description":"Displays the time of the post."},"ƒ: get_the_time":{"prefix":["get_the_time","gtt"],"body":"get_the_time( ${1:\\$format:string}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves the time of the post."},"ƒ: get_post_time":{"prefix":["get_post_time","gpt"],"body":"get_post_time( ${1:\\$format:string}, ${2:\\$gmt:bool}, ${3:\\$post:int|WP_Post|null}, ${4:\\$translate:bool} )","description":"Retrieves the localized time of the post."},"ƒ: get_post_datetime":{"prefix":["get_post_datetime","gpd"],"body":"get_post_datetime( ${1:\\$post:int|WP_Post|null}, ${2:\\$field:string}, ${3:\\$source:string} )","description":"Retrieves post published or modified time as a `DateTimeImmutable` object instance."},"ƒ: get_post_timestamp":{"prefix":["get_post_timestamp","gpt"],"body":"get_post_timestamp( ${1:\\$post:int|WP_Post|null}, ${2:\\$field:string} )","description":"Retrieves post published or modified time as a Unix timestamp."},"ƒ: the_modified_time":{"prefix":["the_modified_time","tmt"],"body":"the_modified_time( ${1:\\$format:string} )","description":"Displays the time at which the post was last modified."},"ƒ: get_the_modified_time":{"prefix":["get_the_modified_time","gtmt"],"body":"get_the_modified_time( ${1:\\$format:string}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves the time at which the post was last modified."},"ƒ: get_post_modified_time":{"prefix":["get_post_modified_time","gpmt"],"body":"get_post_modified_time( ${1:\\$format:string}, ${2:\\$gmt:bool}, ${3:\\$post:int|WP_Post|null}, ${4:\\$translate:bool} )","description":"Retrieves the time at which the post was last modified."},"ƒ: the_weekday":{"prefix":["the_weekday","tw"],"body":"the_weekday(  )","description":"Displays the localized weekday for the post."},"ƒ: the_weekday_date":{"prefix":["the_weekday_date","twd"],"body":"the_weekday_date( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Displays the localized weekday for the post."},"ƒ: wp_head":{"prefix":["wp_head","wh"],"body":"wp_head(  )","description":"Fires the wp_head action."},"ƒ: wp_footer":{"prefix":["wp_footer","wf"],"body":"wp_footer(  )","description":"Fires the wp_footer action."},"ƒ: wp_body_open":{"prefix":["wp_body_open","wbo"],"body":"wp_body_open(  )","description":"Fires the wp_body_open action."},"ƒ: feed_links":{"prefix":["feed_links","fl"],"body":"feed_links( ${1:\\$args:array} )","description":"Displays the links to the general feeds."},"ƒ: feed_links_extra":{"prefix":["feed_links_extra","fle"],"body":"feed_links_extra( ${1:\\$args:array} )","description":"Displays the links to the extra feeds such as category feeds."},"ƒ: rsd_link":{"prefix":["rsd_link","rl"],"body":"rsd_link(  )","description":"Displays the link to the Really Simple Discovery service endpoint."},"ƒ: wp_strict_cross_origin_referrer":{"prefix":["wp_strict_cross_origin_referrer","wscor"],"body":"wp_strict_cross_origin_referrer(  )","description":"Displays a referrer `strict-origin-when-cross-origin` meta tag."},"ƒ: wp_site_icon":{"prefix":["wp_site_icon","wsi"],"body":"wp_site_icon(  )","description":"Displays site icon meta tags."},"ƒ: wp_resource_hints":{"prefix":["wp_resource_hints","wrh"],"body":"wp_resource_hints(  )","description":"Prints resource hints to browsers for pre-fetching, pre-rendering and pre-connecting to websites."},"ƒ: wp_preload_resources":{"prefix":["wp_preload_resources","wpr"],"body":"wp_preload_resources(  )","description":"Prints resource preloads directives to browsers."},"ƒ: wp_dependencies_unique_hosts":{"prefix":["wp_dependencies_unique_hosts","wduh"],"body":"wp_dependencies_unique_hosts(  )","description":"Retrieves a list of unique hosts of all enqueued scripts and styles."},"ƒ: user_can_richedit":{"prefix":["user_can_richedit","ucr"],"body":"user_can_richedit(  )","description":"Determines whether the user can access the visual editor."},"ƒ: wp_default_editor":{"prefix":["wp_default_editor","wde"],"body":"wp_default_editor(  )","description":"Finds out which editor should be displayed by default."},"ƒ: wp_editor":{"prefix":["wp_editor","we"],"body":"wp_editor( ${1:\\$content:string}, ${2:\\$editor_id:string}, ${3:\\$settings:array} )","description":"Renders an editor."},"ƒ: wp_enqueue_editor":{"prefix":["wp_enqueue_editor","wee"],"body":"wp_enqueue_editor(  )","description":"Outputs the editor scripts, stylesheets, and default settings."},"ƒ: wp_enqueue_code_editor":{"prefix":["wp_enqueue_code_editor","wece"],"body":"wp_enqueue_code_editor( ${1:\\$args:array} )","description":"Enqueues assets needed by the code editor for the given settings."},"ƒ: wp_get_code_editor_settings":{"prefix":["wp_get_code_editor_settings","wgces"],"body":"wp_get_code_editor_settings( ${1:\\$args:array} )","description":"Generates and returns code editor settings."},"ƒ: get_search_query":{"prefix":["get_search_query","gsq"],"body":"get_search_query( ${1:\\$escaped:bool} )","description":"Retrieves the contents of the search WordPress query variable."},"ƒ: the_search_query":{"prefix":["the_search_query","tsq"],"body":"the_search_query(  )","description":"Displays the contents of the search query variable."},"ƒ: get_language_attributes":{"prefix":["get_language_attributes","gla"],"body":"get_language_attributes( ${1:\\$doctype:string} )","description":"Gets the language attributes for the 'html' tag."},"ƒ: language_attributes":{"prefix":["language_attributes","la"],"body":"language_attributes( ${1:\\$doctype:string} )","description":"Displays the language attributes for the 'html' tag."},"ƒ: paginate_links":{"prefix":["paginate_links","pl"],"body":"paginate_links( ${1:\\$args:string|array} )","description":"Retrieves paginated links for archive post pages."},"ƒ: wp_admin_css_color":{"prefix":["wp_admin_css_color","wacc"],"body":"wp_admin_css_color( ${1:\\$key:string}, ${2:\\$name:string}, ${3:\\$url:string}, ${4:\\$colors:array}, ${5:\\$icons:array} )","description":"Registers an admin color scheme css file."},"ƒ: register_admin_color_schemes":{"prefix":["register_admin_color_schemes","racs"],"body":"register_admin_color_schemes(  )","description":"Registers the default admin color schemes."},"ƒ: wp_admin_css_uri":{"prefix":["wp_admin_css_uri","wacu"],"body":"wp_admin_css_uri( ${1:\\$file:string} )","description":"Displays the URL of a WordPress admin CSS file."},"ƒ: wp_admin_css":{"prefix":["wp_admin_css","wac"],"body":"wp_admin_css( ${1:\\$file:string}, ${2:\\$force_echo:bool} )","description":"Enqueues or directly prints a stylesheet link to the specified CSS file."},"ƒ: add_thickbox":{"prefix":["add_thickbox","at"],"body":"add_thickbox(  )","description":"Enqueues the default ThickBox js and css."},"ƒ: wp_generator":{"prefix":["wp_generator","wg"],"body":"wp_generator(  )","description":"Displays the XHTML generator that is generated on the wp_head hook."},"ƒ: the_generator":{"prefix":["the_generator","tg"],"body":"the_generator( ${1:\\$type:string} )","description":"Displays the generator XML or Comment for RSS, ATOM, etc."},"ƒ: get_the_generator":{"prefix":["get_the_generator","gtg"],"body":"get_the_generator( ${1:\\$type:string} )","description":"Creates the generator XML or Comment for RSS, ATOM, etc."},"ƒ: checked":{"prefix":["checked"],"body":"checked( ${1:\\$checked:mixed}, ${2:\\$current:mixed}, ${3:\\$display:bool} )","description":"Outputs the HTML checked attribute."},"ƒ: selected":{"prefix":["selected"],"body":"selected( ${1:\\$selected:mixed}, ${2:\\$current:mixed}, ${3:\\$display:bool} )","description":"Outputs the HTML selected attribute."},"ƒ: disabled":{"prefix":["disabled"],"body":"disabled( ${1:\\$disabled:mixed}, ${2:\\$current:mixed}, ${3:\\$display:bool} )","description":"Outputs the HTML disabled attribute."},"ƒ: wp_readonly":{"prefix":["wp_readonly","wr"],"body":"wp_readonly( ${1:\\$readonly_value:mixed}, ${2:\\$current:mixed}, ${3:\\$display:bool} )","description":"Outputs the HTML readonly attribute."},"ƒ: wp_required_field_indicator":{"prefix":["wp_required_field_indicator","wrfi"],"body":"wp_required_field_indicator(  )","description":"Assigns a visual indicator for required form fields."},"ƒ: wp_required_field_message":{"prefix":["wp_required_field_message","wrfm"],"body":"wp_required_field_message(  )","description":"Creates a message to explain required form fields."},"ƒ: wp_heartbeat_settings":{"prefix":["wp_heartbeat_settings","whs"],"body":"wp_heartbeat_settings( ${1:\\$settings:array} )","description":"Default settings for heartbeat."},"ƒ: wp_get_global_settings":{"prefix":["wp_get_global_settings","wggs"],"body":"wp_get_global_settings( ${1:\\$path:array}, ${2:\\$context:array} )","description":"Gets the settings resulting of merging core, theme, and user data."},"ƒ: wp_get_global_styles":{"prefix":["wp_get_global_styles","wggs"],"body":"wp_get_global_styles( ${1:\\$path:array}, ${2:\\$context:array} )","description":"Gets the styles resulting of merging core, theme, and user data."},"ƒ: wp_get_global_stylesheet":{"prefix":["wp_get_global_stylesheet","wggs"],"body":"wp_get_global_stylesheet( ${1:\\$types:array} )","description":"Returns the stylesheet resulting of merging core, theme, and user data."},"ƒ: wp_add_global_styles_for_blocks":{"prefix":["wp_add_global_styles_for_blocks","wagsfb"],"body":"wp_add_global_styles_for_blocks(  )","description":"Adds global style rules to the inline style for each block."},"ƒ: wp_theme_has_theme_json":{"prefix":["wp_theme_has_theme_json","wthtj"],"body":"wp_theme_has_theme_json(  )","description":"Checks whether a theme or its parent has a theme.json file."},"ƒ: wp_clean_theme_json_cache":{"prefix":["wp_clean_theme_json_cache","wctjc"],"body":"wp_clean_theme_json_cache(  )","description":"Cleans the caches under the theme_json group."},"ƒ: wp_get_theme_directory_pattern_slugs":{"prefix":["wp_get_theme_directory_pattern_slugs","wgtdps"],"body":"wp_get_theme_directory_pattern_slugs(  )","description":"Returns the current theme's wanted patterns (slugs) to be registered from Pattern Directory."},"ƒ: wp_get_theme_data_custom_templates":{"prefix":["wp_get_theme_data_custom_templates","wgtdct"],"body":"wp_get_theme_data_custom_templates(  )","description":"Returns the metadata for the custom templates defined by the theme via theme.json."},"ƒ: wp_get_theme_data_template_parts":{"prefix":["wp_get_theme_data_template_parts","wgtdtp"],"body":"wp_get_theme_data_template_parts(  )","description":"Returns the metadata for the template parts defined by the theme."},"ƒ: wp_get_block_css_selector":{"prefix":["wp_get_block_css_selector","wgbcs"],"body":"wp_get_block_css_selector( ${1:\\$block_type:WP_Block_Type}, ${2:\\$target:string|array}, ${3:\\$fallback:bool} )","description":"Determines the CSS selector for the block type and property provided, returning it if available."},"ƒ: wp_safe_remote_request":{"prefix":["wp_safe_remote_request","wsrr"],"body":"wp_safe_remote_request( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Retrieves the raw response from a safe HTTP request."},"ƒ: wp_safe_remote_get":{"prefix":["wp_safe_remote_get","wsrg"],"body":"wp_safe_remote_get( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Retrieves the raw response from a safe HTTP request using the GET method."},"ƒ: wp_safe_remote_post":{"prefix":["wp_safe_remote_post","wsrp"],"body":"wp_safe_remote_post( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Retrieves the raw response from a safe HTTP request using the POST method."},"ƒ: wp_safe_remote_head":{"prefix":["wp_safe_remote_head","wsrh"],"body":"wp_safe_remote_head( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Retrieves the raw response from a safe HTTP request using the HEAD method."},"ƒ: wp_remote_request":{"prefix":["wp_remote_request","wrr"],"body":"wp_remote_request( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Performs an HTTP request and returns its response."},"ƒ: wp_remote_get":{"prefix":["wp_remote_get","wrg"],"body":"wp_remote_get( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Performs an HTTP request using the GET method and returns its response."},"ƒ: wp_remote_post":{"prefix":["wp_remote_post","wrp"],"body":"wp_remote_post( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Performs an HTTP request using the POST method and returns its response."},"ƒ: wp_remote_head":{"prefix":["wp_remote_head","wrh"],"body":"wp_remote_head( ${1:\\$url:string}, ${2:\\$args:array} )","description":"Performs an HTTP request using the HEAD method and returns its response."},"ƒ: wp_remote_retrieve_headers":{"prefix":["wp_remote_retrieve_headers","wrrh"],"body":"wp_remote_retrieve_headers( ${1:\\$response:array|WP_Error} )","description":"Retrieves only the headers from the raw response."},"ƒ: wp_remote_retrieve_header":{"prefix":["wp_remote_retrieve_header","wrrh"],"body":"wp_remote_retrieve_header( ${1:\\$response:array|WP_Error}, ${2:\\$header:string} )","description":"Retrieves a single header by name from the raw response."},"ƒ: wp_remote_retrieve_response_code":{"prefix":["wp_remote_retrieve_response_code","wrrrc"],"body":"wp_remote_retrieve_response_code( ${1:\\$response:array|WP_Error} )","description":"Retrieves only the response code from the raw response."},"ƒ: wp_remote_retrieve_response_message":{"prefix":["wp_remote_retrieve_response_message","wrrrm"],"body":"wp_remote_retrieve_response_message( ${1:\\$response:array|WP_Error} )","description":"Retrieves only the response message from the raw response."},"ƒ: wp_remote_retrieve_body":{"prefix":["wp_remote_retrieve_body","wrrb"],"body":"wp_remote_retrieve_body( ${1:\\$response:array|WP_Error} )","description":"Retrieves only the body from the raw response."},"ƒ: wp_remote_retrieve_cookies":{"prefix":["wp_remote_retrieve_cookies","wrrc"],"body":"wp_remote_retrieve_cookies( ${1:\\$response:array|WP_Error} )","description":"Retrieves only the cookies from the raw response."},"ƒ: wp_remote_retrieve_cookie":{"prefix":["wp_remote_retrieve_cookie","wrrc"],"body":"wp_remote_retrieve_cookie( ${1:\\$response:array|WP_Error}, ${2:\\$name:string} )","description":"Retrieves a single cookie by name from the raw response."},"ƒ: wp_remote_retrieve_cookie_value":{"prefix":["wp_remote_retrieve_cookie_value","wrrcv"],"body":"wp_remote_retrieve_cookie_value( ${1:\\$response:array|WP_Error}, ${2:\\$name:string} )","description":"Retrieves a single cookie's value by name from the raw response."},"ƒ: wp_http_supports":{"prefix":["wp_http_supports","whs"],"body":"wp_http_supports( ${1:\\$capabilities:array}, ${2:\\$url:string|null} )","description":"Determines if there is an HTTP Transport that can process this request."},"ƒ: get_http_origin":{"prefix":["get_http_origin","gho"],"body":"get_http_origin(  )","description":"Gets the HTTP Origin of the current request."},"ƒ: get_allowed_http_origins":{"prefix":["get_allowed_http_origins","gaho"],"body":"get_allowed_http_origins(  )","description":"Retrieves list of allowed HTTP origins."},"ƒ: is_allowed_http_origin":{"prefix":["is_allowed_http_origin","iaho"],"body":"is_allowed_http_origin( ${1:\\$origin:string|null|null} )","description":"Determines if the HTTP origin is an authorized one."},"ƒ: send_origin_headers":{"prefix":["send_origin_headers","soh"],"body":"send_origin_headers(  )","description":"Sends Access-Control-Allow-Origin and related headers if the current request is from an allowed origin."},"ƒ: wp_http_validate_url":{"prefix":["wp_http_validate_url","whvu"],"body":"wp_http_validate_url( ${1:\\$url:string} )","description":"Validates a URL for safe use in the HTTP API."},"ƒ: allowed_http_request_hosts":{"prefix":["allowed_http_request_hosts","ahrh"],"body":"allowed_http_request_hosts( ${1:\\$is_external:bool}, ${2:\\$host:string} )","description":"Marks allowed redirect hosts safe for HTTP requests as well."},"ƒ: ms_allowed_http_request_hosts":{"prefix":["ms_allowed_http_request_hosts","mahrh"],"body":"ms_allowed_http_request_hosts( ${1:\\$is_external:bool}, ${2:\\$host:string} )","description":"Adds any domain in a multisite installation for safe HTTP requests to the allowed list."},"ƒ: wp_parse_url":{"prefix":["wp_parse_url","wpu"],"body":"wp_parse_url( ${1:\\$url:string}, ${2:\\$component:int} )","description":"A wrapper for PHP's parse_url() function that handles consistency in the return values across PHP versions."},"ƒ: wp_is_using_https":{"prefix":["wp_is_using_https","wiuh"],"body":"wp_is_using_https(  )","description":"Checks whether the website is using HTTPS."},"ƒ: wp_is_home_url_using_https":{"prefix":["wp_is_home_url_using_https","wihuuh"],"body":"wp_is_home_url_using_https(  )","description":"Checks whether the current site URL is using HTTPS."},"ƒ: wp_is_site_url_using_https":{"prefix":["wp_is_site_url_using_https","wisuuh"],"body":"wp_is_site_url_using_https(  )","description":"Checks whether the current site's URL where WordPress is stored is using HTTPS."},"ƒ: wp_is_https_supported":{"prefix":["wp_is_https_supported","wihs"],"body":"wp_is_https_supported(  )","description":"Checks whether HTTPS is supported for the server and domain."},"ƒ: wp_should_replace_insecure_home_url":{"prefix":["wp_should_replace_insecure_home_url","wsrihu"],"body":"wp_should_replace_insecure_home_url(  )","description":"Checks whether WordPress should replace old HTTP URLs to the site with their HTTPS counterpart."},"ƒ: wp_replace_insecure_home_url":{"prefix":["wp_replace_insecure_home_url","wrihu"],"body":"wp_replace_insecure_home_url( ${1:\\$content:string} )","description":"Replaces insecure HTTP URLs to the site in the given content, if configured to do so."},"ƒ: wp_update_urls_to_https":{"prefix":["wp_update_urls_to_https","wuuth"],"body":"wp_update_urls_to_https(  )","description":"Update the 'home' and 'siteurl' option to use the HTTPS variant of their URL."},"ƒ: wp_interactivity":{"prefix":["wp_interactivity","wi"],"body":"wp_interactivity(  )","description":"Retrieves the main WP_Interactivity_API instance."},"ƒ: wp_interactivity_process_directives":{"prefix":["wp_interactivity_process_directives","wipd"],"body":"wp_interactivity_process_directives( ${1:\\$html:string} )","description":"Processes the interactivity directives contained within the HTML content and updates the markup accordingly."},"ƒ: wp_interactivity_state":{"prefix":["wp_interactivity_state","wis"],"body":"wp_interactivity_state( ${1:\\$store_namespace:string|null}, ${2:\\$state:array} )","description":"Gets and/or sets the initial state of an Interactivity API store for a given namespace."},"ƒ: wp_interactivity_config":{"prefix":["wp_interactivity_config","wic"],"body":"wp_interactivity_config( ${1:\\$store_namespace:string}, ${2:\\$config:array} )","description":"Gets and/or sets the configuration of the Interactivity API for a given store namespace."},"ƒ: wp_interactivity_data_wp_context":{"prefix":["wp_interactivity_data_wp_context","widwc"],"body":"wp_interactivity_data_wp_context( ${1:\\$context:array}, ${2:\\$store_namespace:string} )","description":"Generates a `data-wp-context` directive attribute by encoding a context array."},"ƒ: wp_interactivity_get_context":{"prefix":["wp_interactivity_get_context","wigc"],"body":"wp_interactivity_get_context( ${1:\\$store_namespace:string|null} )","description":"Gets the current Interactivity API context for a given namespace."},"ƒ: wp_interactivity_get_element":{"prefix":["wp_interactivity_get_element","wige"],"body":"wp_interactivity_get_element(  )","description":"Returns an array representation of the current element being processed."},"ƒ: wp_kses":{"prefix":["wp_kses","wk"],"body":"wp_kses( ${1:\\$content:string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"Filters text content and strips out disallowed HTML."},"ƒ: wp_kses_one_attr":{"prefix":["wp_kses_one_attr","wkoa"],"body":"wp_kses_one_attr( ${1:\\$attr:string}, ${2:\\$element:string} )","description":"Filters one HTML attribute and ensures its value is allowed."},"ƒ: wp_kses_allowed_html":{"prefix":["wp_kses_allowed_html","wkah"],"body":"wp_kses_allowed_html( ${1:\\$context:string|array} )","description":"Returns an array of allowed HTML tags and attributes for a given context."},"ƒ: wp_kses_hook":{"prefix":["wp_kses_hook","wkh"],"body":"wp_kses_hook( ${1:\\$content:string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"You add any KSES hooks here."},"ƒ: wp_kses_version":{"prefix":["wp_kses_version","wkv"],"body":"wp_kses_version(  )","description":"Returns the version number of KSES."},"ƒ: wp_kses_split":{"prefix":["wp_kses_split","wks"],"body":"wp_kses_split( ${1:\\$content:string}, ${2:\\$allowed_html:array[]|string}, ${3:\\$allowed_protocols:string[]} )","description":"Searches for HTML tags, no matter how malformed."},"ƒ: wp_kses_uri_attributes":{"prefix":["wp_kses_uri_attributes","wkua"],"body":"wp_kses_uri_attributes(  )","description":"Returns an array of HTML attribute names whose value contains a URL."},"ƒ: wp_kses_attr":{"prefix":["wp_kses_attr","wka"],"body":"wp_kses_attr( ${1:\\$element:string}, ${2:\\$attr:string}, ${3:\\$allowed_html:array[]|string}, ${4:\\$allowed_protocols:string[]} )","description":"Removes all attributes, if none are allowed for this element."},"ƒ: wp_kses_attr_check":{"prefix":["wp_kses_attr_check","wkac"],"body":"wp_kses_attr_check( ${1:\\$name:string}, ${2:\\$value:string}, ${3:\\$whole:string}, ${4:\\$vless:string}, ${5:\\$element:string}, ${6:\\$allowed_html:array} )","description":"Determines whether an attribute is allowed."},"ƒ: wp_kses_hair":{"prefix":["wp_kses_hair","wkh"],"body":"wp_kses_hair( ${1:\\$attr:string}, ${2:\\$allowed_protocols:string[]} )","description":"Builds an attribute list from string containing attributes."},"ƒ: wp_kses_attr_parse":{"prefix":["wp_kses_attr_parse","wkap"],"body":"wp_kses_attr_parse( ${1:\\$element:string} )","description":"Finds all attributes of an HTML element."},"ƒ: wp_kses_hair_parse":{"prefix":["wp_kses_hair_parse","wkhp"],"body":"wp_kses_hair_parse( ${1:\\$attr:string} )","description":"Builds an attribute list from string containing attributes."},"ƒ: wp_kses_check_attr_val":{"prefix":["wp_kses_check_attr_val","wkcav"],"body":"wp_kses_check_attr_val( ${1:\\$value:string}, ${2:\\$vless:string}, ${3:\\$checkname:string}, ${4:\\$checkvalue:mixed} )","description":"Performs different checks for attribute values."},"ƒ: wp_kses_bad_protocol":{"prefix":["wp_kses_bad_protocol","wkbp"],"body":"wp_kses_bad_protocol( ${1:\\$content:string}, ${2:\\$allowed_protocols:string[]} )","description":"Sanitizes a string and removed disallowed URL protocols."},"ƒ: wp_kses_no_null":{"prefix":["wp_kses_no_null","wknn"],"body":"wp_kses_no_null( ${1:\\$content:string}, ${2:\\$options:array|null} )","description":"Removes any invalid control characters in a text string."},"ƒ: wp_kses_stripslashes":{"prefix":["wp_kses_stripslashes","wks"],"body":"wp_kses_stripslashes( ${1:\\$content:string} )","description":"Strips slashes from in front of quotes."},"ƒ: wp_kses_array_lc":{"prefix":["wp_kses_array_lc","wkal"],"body":"wp_kses_array_lc( ${1:\\$inarray:array} )","description":"Converts the keys of an array to lowercase."},"ƒ: wp_kses_html_error":{"prefix":["wp_kses_html_error","wkhe"],"body":"wp_kses_html_error( ${1:\\$attr:string} )","description":"Handles parsing errors in `wp_kses_hair()`."},"ƒ: wp_kses_bad_protocol_once":{"prefix":["wp_kses_bad_protocol_once","wkbpo"],"body":"wp_kses_bad_protocol_once( ${1:\\$content:string}, ${2:\\$allowed_protocols:string[]}, ${3:\\$count:int} )","description":"Sanitizes content from bad protocols and other characters."},"ƒ: wp_kses_normalize_entities":{"prefix":["wp_kses_normalize_entities","wkne"],"body":"wp_kses_normalize_entities( ${1:\\$content:string}, ${2:\\$context:string} )","description":"Converts and fixes HTML entities."},"ƒ: wp_kses_named_entities":{"prefix":["wp_kses_named_entities","wkne"],"body":"wp_kses_named_entities( ${1:\\$matches:array} )","description":"Callback for `wp_kses_normalize_entities()` regular expression."},"ƒ: wp_kses_xml_named_entities":{"prefix":["wp_kses_xml_named_entities","wkxne"],"body":"wp_kses_xml_named_entities( ${1:\\$matches:array} )","description":"Callback for `wp_kses_normalize_entities()` regular expression."},"ƒ: valid_unicode":{"prefix":["valid_unicode","vu"],"body":"valid_unicode( ${1:\\$i:int} )","description":"Determines if a Unicode codepoint is valid."},"ƒ: wp_kses_decode_entities":{"prefix":["wp_kses_decode_entities","wkde"],"body":"wp_kses_decode_entities( ${1:\\$content:string} )","description":"Converts all numeric HTML entities to their named counterparts."},"ƒ: wp_filter_kses":{"prefix":["wp_filter_kses","wfk"],"body":"wp_filter_kses( ${1:\\$data:string} )","description":"Sanitize content with allowed HTML KSES rules."},"ƒ: wp_kses_data":{"prefix":["wp_kses_data","wkd"],"body":"wp_kses_data( ${1:\\$data:string} )","description":"Sanitize content with allowed HTML KSES rules."},"ƒ: wp_filter_post_kses":{"prefix":["wp_filter_post_kses","wfpk"],"body":"wp_filter_post_kses( ${1:\\$data:string} )","description":"Sanitizes content for allowed HTML tags for post content."},"ƒ: wp_filter_global_styles_post":{"prefix":["wp_filter_global_styles_post","wfgsp"],"body":"wp_filter_global_styles_post( ${1:\\$data:string} )","description":"Sanitizes global styles user content removing unsafe rules."},"ƒ: wp_kses_post":{"prefix":["wp_kses_post","wkp"],"body":"wp_kses_post( ${1:\\$data:string} )","description":"Sanitizes content for allowed HTML tags for post content."},"ƒ: wp_kses_post_deep":{"prefix":["wp_kses_post_deep","wkpd"],"body":"wp_kses_post_deep( ${1:\\$data:mixed} )","description":"Navigates through an array, object, or scalar, and sanitizes content for allowed HTML tags for post content."},"ƒ: wp_filter_nohtml_kses":{"prefix":["wp_filter_nohtml_kses","wfnk"],"body":"wp_filter_nohtml_kses( ${1:\\$data:string} )","description":"Strips all HTML from a text string."},"ƒ: kses_init_filters":{"prefix":["kses_init_filters","kif"],"body":"kses_init_filters(  )","description":"Adds all KSES input form content filters."},"ƒ: kses_remove_filters":{"prefix":["kses_remove_filters","krf"],"body":"kses_remove_filters(  )","description":"Removes all KSES input form content filters."},"ƒ: kses_init":{"prefix":["kses_init","ki"],"body":"kses_init(  )","description":"Sets up most of the KSES filters for input form content."},"ƒ: safecss_filter_attr":{"prefix":["safecss_filter_attr","sfa"],"body":"safecss_filter_attr( ${1:\\$css:string}, ${2:\\$deprecated:string} )","description":"Filters an inline style attribute and removes disallowed rules."},"ƒ: get_locale":{"prefix":["get_locale","gl"],"body":"get_locale(  )","description":"Retrieves the current locale."},"ƒ: get_user_locale":{"prefix":["get_user_locale","gul"],"body":"get_user_locale( ${1:\\$user:int|WP_User} )","description":"Retrieves the locale of a user."},"ƒ: determine_locale":{"prefix":["determine_locale","dl"],"body":"determine_locale(  )","description":"Determines the current locale desired for the request."},"ƒ: translate":{"prefix":["translate"],"body":"translate( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Retrieves the translation of $text."},"ƒ: before_last_bar":{"prefix":["before_last_bar","blb"],"body":"before_last_bar( ${1:\\$text:string} )","description":"Removes last item on a pipe-delimited string."},"ƒ: translate_with_gettext_context":{"prefix":["translate_with_gettext_context","twgc"],"body":"translate_with_gettext_context( ${1:\\$text:string}, ${2:\\$context:string}, ${3:\\$domain:string} )","description":"Retrieves the translation of $text in the context defined in $context."},"ƒ: __":{"prefix":["__"],"body":"__( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Retrieves the translation of $text."},"ƒ: esc_attr__":{"prefix":["esc_attr__","ea"],"body":"esc_attr__( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Retrieves the translation of $text and escapes it for safe use in an attribute."},"ƒ: esc_html__":{"prefix":["esc_html__","eh"],"body":"esc_html__( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Retrieves the translation of $text and escapes it for safe use in HTML output."},"ƒ: _e":{"prefix":["_e","e"],"body":"_e( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Displays translated text."},"ƒ: esc_attr_e":{"prefix":["esc_attr_e","eae"],"body":"esc_attr_e( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Displays translated text that has been escaped for safe use in an attribute."},"ƒ: esc_html_e":{"prefix":["esc_html_e","ehe"],"body":"esc_html_e( ${1:\\$text:string}, ${2:\\$domain:string} )","description":"Displays translated text that has been escaped for safe use in HTML output."},"ƒ: _x":{"prefix":["_x","x"],"body":"_x( ${1:\\$text:string}, ${2:\\$context:string}, ${3:\\$domain:string} )","description":"Retrieves translated string with gettext context."},"ƒ: _ex":{"prefix":["_ex","e"],"body":"_ex( ${1:\\$text:string}, ${2:\\$context:string}, ${3:\\$domain:string} )","description":"Displays translated string with gettext context."},"ƒ: esc_attr_x":{"prefix":["esc_attr_x","eax"],"body":"esc_attr_x( ${1:\\$text:string}, ${2:\\$context:string}, ${3:\\$domain:string} )","description":"Translates string with gettext context, and escapes it for safe use in an attribute."},"ƒ: esc_html_x":{"prefix":["esc_html_x","ehx"],"body":"esc_html_x( ${1:\\$text:string}, ${2:\\$context:string}, ${3:\\$domain:string} )","description":"Translates string with gettext context, and escapes it for safe use in HTML output."},"ƒ: _n":{"prefix":["_n","n"],"body":"_n( ${1:\\$single:string}, ${2:\\$plural:string}, ${3:\\$number:int}, ${4:\\$domain:string} )","description":"Translates and retrieves the singular or plural form based on the supplied number."},"ƒ: _nx":{"prefix":["_nx","n"],"body":"_nx( ${1:\\$single:string}, ${2:\\$plural:string}, ${3:\\$number:int}, ${4:\\$context:string}, ${5:\\$domain:string} )","description":"Translates and retrieves the singular or plural form based on the supplied number, with gettext context."},"ƒ: _n_noop":{"prefix":["_n_noop","nn"],"body":"_n_noop( ${1:\\$singular:string}, ${2:\\$plural:string}, ${3:\\$domain:string|null} )","description":"Registers plural strings in POT file, but does not translate them."},"ƒ: _nx_noop":{"prefix":["_nx_noop","nn"],"body":"_nx_noop( ${1:\\$singular:string}, ${2:\\$plural:string}, ${3:\\$context:string}, ${4:\\$domain:string|null} )","description":"Registers plural strings with gettext context in POT file, but does not translate them."},"ƒ: translate_nooped_plural":{"prefix":["translate_nooped_plural","tnp"],"body":"translate_nooped_plural( ${1:\\$nooped_plural:array}, ${2:\\$count:int}, ${3:\\$domain:string} )","description":"Translates and returns the singular or plural form of a string that's been registered with _n_noop() or _nx_noop()."},"ƒ: load_textdomain":{"prefix":["load_textdomain","lt"],"body":"load_textdomain( ${1:\\$domain:string}, ${2:\\$mofile:string}, ${3:\\$locale:string|null} )","description":"Loads a .mo file into the text domain $domain."},"ƒ: unload_textdomain":{"prefix":["unload_textdomain","ut"],"body":"unload_textdomain( ${1:\\$domain:string}, ${2:\\$reloadable:bool} )","description":"Unloads translations for a text domain."},"ƒ: load_default_textdomain":{"prefix":["load_default_textdomain","ldt"],"body":"load_default_textdomain( ${1:\\$locale:string|null} )","description":"Loads default translated strings based on locale."},"ƒ: load_plugin_textdomain":{"prefix":["load_plugin_textdomain","lpt"],"body":"load_plugin_textdomain( ${1:\\$domain:string}, ${2:\\$deprecated:string|false}, ${3:\\$plugin_rel_path:string|false} )","description":"Loads a plugin's translated strings."},"ƒ: load_muplugin_textdomain":{"prefix":["load_muplugin_textdomain","lmt"],"body":"load_muplugin_textdomain( ${1:\\$domain:string}, ${2:\\$mu_plugin_rel_path:string} )","description":"Loads the translated strings for a plugin residing in the mu-plugins directory."},"ƒ: load_theme_textdomain":{"prefix":["load_theme_textdomain","ltt"],"body":"load_theme_textdomain( ${1:\\$domain:string}, ${2:\\$path:string|false} )","description":"Loads the theme's translated strings."},"ƒ: load_child_theme_textdomain":{"prefix":["load_child_theme_textdomain","lctt"],"body":"load_child_theme_textdomain( ${1:\\$domain:string}, ${2:\\$path:string|false} )","description":"Loads the child theme's translated strings."},"ƒ: load_script_textdomain":{"prefix":["load_script_textdomain","lst"],"body":"load_script_textdomain( ${1:\\$handle:string}, ${2:\\$domain:string}, ${3:\\$path:string} )","description":"Loads the script translated strings."},"ƒ: load_script_translations":{"prefix":["load_script_translations","lst"],"body":"load_script_translations( ${1:\\$file:string|false}, ${2:\\$handle:string}, ${3:\\$domain:string} )","description":"Loads the translation data for the given script handle and text domain."},"ƒ: get_translations_for_domain":{"prefix":["get_translations_for_domain","gtfd"],"body":"get_translations_for_domain( ${1:\\$domain:string} )","description":"Returns the Translations instance for a text domain."},"ƒ: is_textdomain_loaded":{"prefix":["is_textdomain_loaded","itl"],"body":"is_textdomain_loaded( ${1:\\$domain:string} )","description":"Determines whether there are translations for the text domain."},"ƒ: translate_user_role":{"prefix":["translate_user_role","tur"],"body":"translate_user_role( ${1:\\$name:string}, ${2:\\$domain:string} )","description":"Translates role name."},"ƒ: get_available_languages":{"prefix":["get_available_languages","gal"],"body":"get_available_languages( ${1:\\$dir:string|null} )","description":"Gets all available languages based on the presence of *.mo and *.l10n.php files in a given directory."},"ƒ: wp_get_installed_translations":{"prefix":["wp_get_installed_translations","wgit"],"body":"wp_get_installed_translations( ${1:\\$type:string} )","description":"Gets installed translations."},"ƒ: wp_get_pomo_file_data":{"prefix":["wp_get_pomo_file_data","wgpfd"],"body":"wp_get_pomo_file_data( ${1:\\$po_file:string} )","description":"Extracts headers from a PO file."},"ƒ: wp_get_l10n_php_file_data":{"prefix":["wp_get_l10n_php_file_data","wglpfd"],"body":"wp_get_l10n_php_file_data( ${1:\\$php_file:string} )","description":"Extracts headers from a PHP translation file."},"ƒ: wp_dropdown_languages":{"prefix":["wp_dropdown_languages","wdl"],"body":"wp_dropdown_languages( ${1:\\$args:string|array} )","description":"Displays or returns a Language selector."},"ƒ: is_rtl":{"prefix":["is_rtl","ir"],"body":"is_rtl(  )","description":"Determines whether the current locale is right-to-left (RTL)."},"ƒ: switch_to_locale":{"prefix":["switch_to_locale","stl"],"body":"switch_to_locale( ${1:\\$locale:string} )","description":"Switches the translations according to the given locale."},"ƒ: switch_to_user_locale":{"prefix":["switch_to_user_locale","stul"],"body":"switch_to_user_locale( ${1:\\$user_id:int} )","description":"Switches the translations according to the given user's locale."},"ƒ: restore_previous_locale":{"prefix":["restore_previous_locale","rpl"],"body":"restore_previous_locale(  )","description":"Restores the translations according to the previous locale."},"ƒ: restore_current_locale":{"prefix":["restore_current_locale","rcl"],"body":"restore_current_locale(  )","description":"Restores the translations according to the original locale."},"ƒ: is_locale_switched":{"prefix":["is_locale_switched","ils"],"body":"is_locale_switched(  )","description":"Determines whether switch_to_locale() is in effect."},"ƒ: wp_get_list_item_separator":{"prefix":["wp_get_list_item_separator","wglis"],"body":"wp_get_list_item_separator(  )","description":"Retrieves the list item separator based on the locale."},"ƒ: wp_get_word_count_type":{"prefix":["wp_get_word_count_type","wgwct"],"body":"wp_get_word_count_type(  )","description":"Retrieves the word count type based on the locale."},"ƒ: has_translation":{"prefix":["has_translation","ht"],"body":"has_translation( ${1:\\$singular:string}, ${2:\\$textdomain:string}, ${3:\\$locale:?string|null} )","description":"Returns a boolean to indicate whether a translation exists for a given string with optional text domain and locale."},"ƒ: the_permalink":{"prefix":["the_permalink","tp"],"body":"the_permalink( ${1:\\$post:int|WP_Post} )","description":"Displays the permalink for the current post."},"ƒ: user_trailingslashit":{"prefix":["user_trailingslashit","ut"],"body":"user_trailingslashit( ${1:\\$url:string}, ${2:\\$type_of_url:string} )","description":"Retrieves a trailing-slashed string if the site is set for adding trailing slashes."},"ƒ: permalink_anchor":{"prefix":["permalink_anchor","pa"],"body":"permalink_anchor( ${1:\\$mode:string} )","description":"Displays the permalink anchor for the current post."},"ƒ: wp_force_plain_post_permalink":{"prefix":["wp_force_plain_post_permalink","wfppp"],"body":"wp_force_plain_post_permalink( ${1:\\$post:WP_Post|int|null|null}, ${2:\\$sample:bool|null|null} )","description":"Determine whether post should always use a plain permalink structure."},"ƒ: get_the_permalink":{"prefix":["get_the_permalink","gtp"],"body":"get_the_permalink( ${1:\\$post:int|WP_Post}, ${2:\\$leavename:bool} )","description":"Retrieves the full permalink for the current post or post ID."},"ƒ: get_permalink":{"prefix":["get_permalink","gp"],"body":"get_permalink( ${1:\\$post:int|WP_Post}, ${2:\\$leavename:bool} )","description":"Retrieves the full permalink for the current post or post ID."},"ƒ: get_post_permalink":{"prefix":["get_post_permalink","gpp"],"body":"get_post_permalink( ${1:\\$post:int|WP_Post}, ${2:\\$leavename:bool}, ${3:\\$sample:bool} )","description":"Retrieves the permalink for a post of a custom post type."},"ƒ: get_page_link":{"prefix":["get_page_link","gpl"],"body":"get_page_link( ${1:\\$post:int|WP_Post}, ${2:\\$leavename:bool}, ${3:\\$sample:bool} )","description":"Retrieves the permalink for the current page or page ID."},"ƒ: get_attachment_link":{"prefix":["get_attachment_link","gal"],"body":"get_attachment_link( ${1:\\$post:int|WP_Post|null}, ${2:\\$leavename:bool} )","description":"Retrieves the permalink for an attachment."},"ƒ: get_year_link":{"prefix":["get_year_link","gyl"],"body":"get_year_link( ${1:\\$year:int|false} )","description":"Retrieves the permalink for the year archives."},"ƒ: get_month_link":{"prefix":["get_month_link","gml"],"body":"get_month_link( ${1:\\$year:int|false}, ${2:\\$month:int|false} )","description":"Retrieves the permalink for the month archives with year."},"ƒ: get_day_link":{"prefix":["get_day_link","gdl"],"body":"get_day_link( ${1:\\$year:int|false}, ${2:\\$month:int|false}, ${3:\\$day:int|false} )","description":"Retrieves the permalink for the day archives with year and month."},"ƒ: the_feed_link":{"prefix":["the_feed_link","tfl"],"body":"the_feed_link( ${1:\\$anchor:string}, ${2:\\$feed:string} )","description":"Displays the permalink for the feed type."},"ƒ: get_feed_link":{"prefix":["get_feed_link","gfl"],"body":"get_feed_link( ${1:\\$feed:string} )","description":"Retrieves the permalink for the feed type."},"ƒ: get_post_comments_feed_link":{"prefix":["get_post_comments_feed_link","gpcfl"],"body":"get_post_comments_feed_link( ${1:\\$post_id:int}, ${2:\\$feed:string} )","description":"Retrieves the permalink for the post comments feed."},"ƒ: post_comments_feed_link":{"prefix":["post_comments_feed_link","pcfl"],"body":"post_comments_feed_link( ${1:\\$link_text:string}, ${2:\\$post_id:int}, ${3:\\$feed:string} )","description":"Displays the comment feed link for a post."},"ƒ: get_author_feed_link":{"prefix":["get_author_feed_link","gafl"],"body":"get_author_feed_link( ${1:\\$author_id:int}, ${2:\\$feed:string} )","description":"Retrieves the feed link for a given author."},"ƒ: get_category_feed_link":{"prefix":["get_category_feed_link","gcfl"],"body":"get_category_feed_link( ${1:\\$cat:int|WP_Term|object}, ${2:\\$feed:string} )","description":"Retrieves the feed link for a category."},"ƒ: get_term_feed_link":{"prefix":["get_term_feed_link","gtfl"],"body":"get_term_feed_link( ${1:\\$term:int|WP_Term|object}, ${2:\\$taxonomy:string}, ${3:\\$feed:string} )","description":"Retrieves the feed link for a term."},"ƒ: get_tag_feed_link":{"prefix":["get_tag_feed_link","gtfl"],"body":"get_tag_feed_link( ${1:\\$tag:int|WP_Term|object}, ${2:\\$feed:string} )","description":"Retrieves the permalink for a tag feed."},"ƒ: get_edit_tag_link":{"prefix":["get_edit_tag_link","getl"],"body":"get_edit_tag_link( ${1:\\$tag:int|WP_Term|object}, ${2:\\$taxonomy:string} )","description":"Retrieves the edit link for a tag."},"ƒ: edit_tag_link":{"prefix":["edit_tag_link","etl"],"body":"edit_tag_link( ${1:\\$link:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$tag:WP_Term|null} )","description":"Displays or retrieves the edit link for a tag with formatting."},"ƒ: get_edit_term_link":{"prefix":["get_edit_term_link","getl"],"body":"get_edit_term_link( ${1:\\$term:int|WP_Term|object}, ${2:\\$taxonomy:string}, ${3:\\$object_type:string} )","description":"Retrieves the URL for editing a given term."},"ƒ: edit_term_link":{"prefix":["edit_term_link","etl"],"body":"edit_term_link( ${1:\\$link:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$term:int|WP_Term|null|null}, ${5:\\$display:bool} )","description":"Displays or retrieves the edit term link with formatting."},"ƒ: get_search_link":{"prefix":["get_search_link","gsl"],"body":"get_search_link( ${1:\\$query:string} )","description":"Retrieves the permalink for a search."},"ƒ: get_search_feed_link":{"prefix":["get_search_feed_link","gsfl"],"body":"get_search_feed_link( ${1:\\$search_query:string}, ${2:\\$feed:string} )","description":"Retrieves the permalink for the search results feed."},"ƒ: get_search_comments_feed_link":{"prefix":["get_search_comments_feed_link","gscfl"],"body":"get_search_comments_feed_link( ${1:\\$search_query:string}, ${2:\\$feed:string} )","description":"Retrieves the permalink for the search results comments feed."},"ƒ: get_post_type_archive_link":{"prefix":["get_post_type_archive_link","gptal"],"body":"get_post_type_archive_link( ${1:\\$post_type:string} )","description":"Retrieves the permalink for a post type archive."},"ƒ: get_post_type_archive_feed_link":{"prefix":["get_post_type_archive_feed_link","gptafl"],"body":"get_post_type_archive_feed_link( ${1:\\$post_type:string}, ${2:\\$feed:string} )","description":"Retrieves the permalink for a post type archive feed."},"ƒ: get_preview_post_link":{"prefix":["get_preview_post_link","gppl"],"body":"get_preview_post_link( ${1:\\$post:int|WP_Post|null}, ${2:\\$query_args:array}, ${3:\\$preview_link:string} )","description":"Retrieves the URL used for the post preview."},"ƒ: get_edit_post_link":{"prefix":["get_edit_post_link","gepl"],"body":"get_edit_post_link( ${1:\\$post:int|WP_Post}, ${2:\\$context:string} )","description":"Retrieves the edit post link for post."},"ƒ: edit_post_link":{"prefix":["edit_post_link","epl"],"body":"edit_post_link( ${1:\\$text:string|null}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$post:int|WP_Post}, ${5:\\$css_class:string} )","description":"Displays the edit post link for post."},"ƒ: get_delete_post_link":{"prefix":["get_delete_post_link","gdpl"],"body":"get_delete_post_link( ${1:\\$post:int|WP_Post}, ${2:\\$deprecated:string}, ${3:\\$force_delete:bool} )","description":"Retrieves the delete posts link for post."},"ƒ: get_edit_comment_link":{"prefix":["get_edit_comment_link","gecl"],"body":"get_edit_comment_link( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$context:string} )","description":"Retrieves the edit comment link."},"ƒ: edit_comment_link":{"prefix":["edit_comment_link","ecl"],"body":"edit_comment_link( ${1:\\$text:string|null}, ${2:\\$before:string}, ${3:\\$after:string} )","description":"Displays the edit comment link with formatting."},"ƒ: get_edit_bookmark_link":{"prefix":["get_edit_bookmark_link","gebl"],"body":"get_edit_bookmark_link( ${1:\\$link:int|stdClass} )","description":"Displays the edit bookmark link."},"ƒ: edit_bookmark_link":{"prefix":["edit_bookmark_link","ebl"],"body":"edit_bookmark_link( ${1:\\$link:string}, ${2:\\$before:string}, ${3:\\$after:string}, ${4:\\$bookmark:int|null} )","description":"Displays the edit bookmark link anchor content."},"ƒ: get_edit_user_link":{"prefix":["get_edit_user_link","geul"],"body":"get_edit_user_link( ${1:\\$user_id:int|null} )","description":"Retrieves the edit user link."},"ƒ: get_previous_post":{"prefix":["get_previous_post","gpp"],"body":"get_previous_post( ${1:\\$in_same_term:bool}, ${2:\\$excluded_terms:int[]|string}, ${3:\\$taxonomy:string} )","description":"Retrieves the previous post that is adjacent to the current post."},"ƒ: get_next_post":{"prefix":["get_next_post","gnp"],"body":"get_next_post( ${1:\\$in_same_term:bool}, ${2:\\$excluded_terms:int[]|string}, ${3:\\$taxonomy:string} )","description":"Retrieves the next post that is adjacent to the current post."},"ƒ: get_adjacent_post":{"prefix":["get_adjacent_post","gap"],"body":"get_adjacent_post( ${1:\\$in_same_term:bool}, ${2:\\$excluded_terms:int[]|string}, ${3:\\$previous:bool}, ${4:\\$taxonomy:string} )","description":"Retrieves the adjacent post."},"ƒ: get_adjacent_post_rel_link":{"prefix":["get_adjacent_post_rel_link","gaprl"],"body":"get_adjacent_post_rel_link( ${1:\\$title:string}, ${2:\\$in_same_term:bool}, ${3:\\$excluded_terms:int[]|string}, ${4:\\$previous:bool}, ${5:\\$taxonomy:string} )","description":"Retrieves the adjacent post relational link."},"ƒ: adjacent_posts_rel_link":{"prefix":["adjacent_posts_rel_link","aprl"],"body":"adjacent_posts_rel_link( ${1:\\$title:string}, ${2:\\$in_same_term:bool}, ${3:\\$excluded_terms:int[]|string}, ${4:\\$taxonomy:string} )","description":"Displays the relational links for the posts adjacent to the current post."},"ƒ: adjacent_posts_rel_link_wp_head":{"prefix":["adjacent_posts_rel_link_wp_head","aprlwh"],"body":"adjacent_posts_rel_link_wp_head(  )","description":"Displays relational links for the posts adjacent to the current post for single post pages."},"ƒ: next_post_rel_link":{"prefix":["next_post_rel_link","nprl"],"body":"next_post_rel_link( ${1:\\$title:string}, ${2:\\$in_same_term:bool}, ${3:\\$excluded_terms:int[]|string}, ${4:\\$taxonomy:string} )","description":"Displays the relational link for the next post adjacent to the current post."},"ƒ: prev_post_rel_link":{"prefix":["prev_post_rel_link","pprl"],"body":"prev_post_rel_link( ${1:\\$title:string}, ${2:\\$in_same_term:bool}, ${3:\\$excluded_terms:int[]|string}, ${4:\\$taxonomy:string} )","description":"Displays the relational link for the previous post adjacent to the current post."},"ƒ: get_boundary_post":{"prefix":["get_boundary_post","gbp"],"body":"get_boundary_post( ${1:\\$in_same_term:bool}, ${2:\\$excluded_terms:int[]|string}, ${3:\\$start:bool}, ${4:\\$taxonomy:string} )","description":"Retrieves the boundary post."},"ƒ: get_previous_post_link":{"prefix":["get_previous_post_link","gppl"],"body":"get_previous_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$taxonomy:string} )","description":"Retrieves the previous post link that is adjacent to the current post."},"ƒ: previous_post_link":{"prefix":["previous_post_link","ppl"],"body":"previous_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$taxonomy:string} )","description":"Displays the previous post link that is adjacent to the current post."},"ƒ: get_next_post_link":{"prefix":["get_next_post_link","gnpl"],"body":"get_next_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$taxonomy:string} )","description":"Retrieves the next post link that is adjacent to the current post."},"ƒ: next_post_link":{"prefix":["next_post_link","npl"],"body":"next_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$taxonomy:string} )","description":"Displays the next post link that is adjacent to the current post."},"ƒ: get_adjacent_post_link":{"prefix":["get_adjacent_post_link","gapl"],"body":"get_adjacent_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$previous:bool}, ${6:\\$taxonomy:string} )","description":"Retrieves the adjacent post link."},"ƒ: adjacent_post_link":{"prefix":["adjacent_post_link","apl"],"body":"adjacent_post_link( ${1:\\$format:string}, ${2:\\$link:string}, ${3:\\$in_same_term:bool}, ${4:\\$excluded_terms:int[]|string}, ${5:\\$previous:bool}, ${6:\\$taxonomy:string} )","description":"Displays the adjacent post link."},"ƒ: get_pagenum_link":{"prefix":["get_pagenum_link","gpl"],"body":"get_pagenum_link( ${1:\\$pagenum:int}, ${2:\\$escape:bool} )","description":"Retrieves the link for a page number."},"ƒ: get_next_posts_page_link":{"prefix":["get_next_posts_page_link","gnppl"],"body":"get_next_posts_page_link( ${1:\\$max_page:int} )","description":"Retrieves the next posts page link."},"ƒ: next_posts":{"prefix":["next_posts","np"],"body":"next_posts( ${1:\\$max_page:int}, ${2:\\$display:bool} )","description":"Displays or retrieves the next posts page link."},"ƒ: get_next_posts_link":{"prefix":["get_next_posts_link","gnpl"],"body":"get_next_posts_link( ${1:\\$label:string|null}, ${2:\\$max_page:int} )","description":"Retrieves the next posts page link."},"ƒ: next_posts_link":{"prefix":["next_posts_link","npl"],"body":"next_posts_link( ${1:\\$label:string|null}, ${2:\\$max_page:int} )","description":"Displays the next posts page link."},"ƒ: get_previous_posts_page_link":{"prefix":["get_previous_posts_page_link","gpppl"],"body":"get_previous_posts_page_link(  )","description":"Retrieves the previous posts page link."},"ƒ: previous_posts":{"prefix":["previous_posts","pp"],"body":"previous_posts( ${1:\\$display:bool} )","description":"Displays or retrieves the previous posts page link."},"ƒ: get_previous_posts_link":{"prefix":["get_previous_posts_link","gppl"],"body":"get_previous_posts_link( ${1:\\$label:string|null} )","description":"Retrieves the previous posts page link."},"ƒ: previous_posts_link":{"prefix":["previous_posts_link","ppl"],"body":"previous_posts_link( ${1:\\$label:string|null} )","description":"Displays the previous posts page link."},"ƒ: get_posts_nav_link":{"prefix":["get_posts_nav_link","gpnl"],"body":"get_posts_nav_link( ${1:\\$args:string|array} )","description":"Retrieves the post pages link navigation for previous and next pages."},"ƒ: posts_nav_link":{"prefix":["posts_nav_link","pnl"],"body":"posts_nav_link( ${1:\\$sep:string}, ${2:\\$prelabel:string}, ${3:\\$nxtlabel:string} )","description":"Displays the post pages link navigation for previous and next pages."},"ƒ: get_the_post_navigation":{"prefix":["get_the_post_navigation","gtpn"],"body":"get_the_post_navigation( ${1:\\$args:array} )","description":"Retrieves the navigation to next/previous post, when applicable."},"ƒ: the_post_navigation":{"prefix":["the_post_navigation","tpn"],"body":"the_post_navigation( ${1:\\$args:array} )","description":"Displays the navigation to next/previous post, when applicable."},"ƒ: get_the_posts_navigation":{"prefix":["get_the_posts_navigation","gtpn"],"body":"get_the_posts_navigation( ${1:\\$args:array} )","description":"Returns the navigation to next/previous set of posts, when applicable."},"ƒ: the_posts_navigation":{"prefix":["the_posts_navigation","tpn"],"body":"the_posts_navigation( ${1:\\$args:array} )","description":"Displays the navigation to next/previous set of posts, when applicable."},"ƒ: get_the_posts_pagination":{"prefix":["get_the_posts_pagination","gtpp"],"body":"get_the_posts_pagination( ${1:\\$args:array} )","description":"Retrieves a paginated navigation to next/previous set of posts, when applicable."},"ƒ: the_posts_pagination":{"prefix":["the_posts_pagination","tpp"],"body":"the_posts_pagination( ${1:\\$args:array} )","description":"Displays a paginated navigation to next/previous set of posts, when applicable."},"ƒ: get_comments_pagenum_link":{"prefix":["get_comments_pagenum_link","gcpl"],"body":"get_comments_pagenum_link( ${1:\\$pagenum:int}, ${2:\\$max_page:int} )","description":"Retrieves the comments page number link."},"ƒ: get_next_comments_link":{"prefix":["get_next_comments_link","gncl"],"body":"get_next_comments_link( ${1:\\$label:string}, ${2:\\$max_page:int}, ${3:\\$page:int|null|null} )","description":"Retrieves the link to the next comments page."},"ƒ: next_comments_link":{"prefix":["next_comments_link","ncl"],"body":"next_comments_link( ${1:\\$label:string}, ${2:\\$max_page:int} )","description":"Displays the link to the next comments page."},"ƒ: get_previous_comments_link":{"prefix":["get_previous_comments_link","gpcl"],"body":"get_previous_comments_link( ${1:\\$label:string}, ${2:\\$page:int|null|null} )","description":"Retrieves the link to the previous comments page."},"ƒ: previous_comments_link":{"prefix":["previous_comments_link","pcl"],"body":"previous_comments_link( ${1:\\$label:string} )","description":"Displays the link to the previous comments page."},"ƒ: paginate_comments_links":{"prefix":["paginate_comments_links","pcl"],"body":"paginate_comments_links( ${1:\\$args:string|array} )","description":"Displays or retrieves pagination links for the comments on the current post."},"ƒ: get_the_comments_navigation":{"prefix":["get_the_comments_navigation","gtcn"],"body":"get_the_comments_navigation( ${1:\\$args:array} )","description":"Retrieves navigation to next/previous set of comments, when applicable."},"ƒ: the_comments_navigation":{"prefix":["the_comments_navigation","tcn"],"body":"the_comments_navigation( ${1:\\$args:array} )","description":"Displays navigation to next/previous set of comments, when applicable."},"ƒ: get_the_comments_pagination":{"prefix":["get_the_comments_pagination","gtcp"],"body":"get_the_comments_pagination( ${1:\\$args:array} )","description":"Retrieves a paginated navigation to next/previous set of comments, when applicable."},"ƒ: the_comments_pagination":{"prefix":["the_comments_pagination","tcp"],"body":"the_comments_pagination( ${1:\\$args:array} )","description":"Displays a paginated navigation to next/previous set of comments, when applicable."},"ƒ: home_url":{"prefix":["home_url","hu"],"body":"home_url( ${1:\\$path:string}, ${2:\\$scheme:string|null|null} )","description":"Retrieves the URL for the current site where the front end is accessible."},"ƒ: get_home_url":{"prefix":["get_home_url","ghu"],"body":"get_home_url( ${1:\\$blog_id:int|null|null}, ${2:\\$path:string}, ${3:\\$scheme:string|null|null} )","description":"Retrieves the URL for a given site where the front end is accessible."},"ƒ: site_url":{"prefix":["site_url","su"],"body":"site_url( ${1:\\$path:string}, ${2:\\$scheme:string|null|null} )","description":"Retrieves the URL for the current site where WordPress application files (e.g. wp-blog-header.php or the wp-admin/ folder) are accessible."},"ƒ: get_site_url":{"prefix":["get_site_url","gsu"],"body":"get_site_url( ${1:\\$blog_id:int|null|null}, ${2:\\$path:string}, ${3:\\$scheme:string|null|null} )","description":"Retrieves the URL for a given site where WordPress application files (e.g. wp-blog-header.php or the wp-admin/ folder) are accessible."},"ƒ: admin_url":{"prefix":["admin_url","au"],"body":"admin_url( ${1:\\$path:string}, ${2:\\$scheme:string} )","description":"Retrieves the URL to the admin area for the current site."},"ƒ: get_admin_url":{"prefix":["get_admin_url","gau"],"body":"get_admin_url( ${1:\\$blog_id:int|null|null}, ${2:\\$path:string}, ${3:\\$scheme:string} )","description":"Retrieves the URL to the admin area for a given site."},"ƒ: includes_url":{"prefix":["includes_url","iu"],"body":"includes_url( ${1:\\$path:string}, ${2:\\$scheme:string|null|null} )","description":"Retrieves the URL to the includes directory."},"ƒ: content_url":{"prefix":["content_url","cu"],"body":"content_url( ${1:\\$path:string} )","description":"Retrieves the URL to the content directory."},"ƒ: plugins_url":{"prefix":["plugins_url","pu"],"body":"plugins_url( ${1:\\$path:string}, ${2:\\$plugin:string} )","description":"Retrieves a URL within the plugins or mu-plugins directory."},"ƒ: network_site_url":{"prefix":["network_site_url","nsu"],"body":"network_site_url( ${1:\\$path:string}, ${2:\\$scheme:string|null|null} )","description":"Retrieves the site URL for the current network."},"ƒ: network_home_url":{"prefix":["network_home_url","nhu"],"body":"network_home_url( ${1:\\$path:string}, ${2:\\$scheme:string|null|null} )","description":"Retrieves the home URL for the current network."},"ƒ: network_admin_url":{"prefix":["network_admin_url","nau"],"body":"network_admin_url( ${1:\\$path:string}, ${2:\\$scheme:string} )","description":"Retrieves the URL to the admin area for the network."},"ƒ: user_admin_url":{"prefix":["user_admin_url","uau"],"body":"user_admin_url( ${1:\\$path:string}, ${2:\\$scheme:string} )","description":"Retrieves the URL to the admin area for the current user."},"ƒ: self_admin_url":{"prefix":["self_admin_url","sau"],"body":"self_admin_url( ${1:\\$path:string}, ${2:\\$scheme:string} )","description":"Retrieves the URL to the admin area for either the current site or the network depending on context."},"ƒ: set_url_scheme":{"prefix":["set_url_scheme","sus"],"body":"set_url_scheme( ${1:\\$url:string}, ${2:\\$scheme:string|null|null} )","description":"Sets the scheme for a URL."},"ƒ: get_dashboard_url":{"prefix":["get_dashboard_url","gdu"],"body":"get_dashboard_url( ${1:\\$user_id:int}, ${2:\\$path:string}, ${3:\\$scheme:string} )","description":"Retrieves the URL to the user's dashboard."},"ƒ: get_edit_profile_url":{"prefix":["get_edit_profile_url","gepu"],"body":"get_edit_profile_url( ${1:\\$user_id:int}, ${2:\\$scheme:string} )","description":"Retrieves the URL to the user's profile editor."},"ƒ: wp_get_canonical_url":{"prefix":["wp_get_canonical_url","wgcu"],"body":"wp_get_canonical_url( ${1:\\$post:int|WP_Post|null} )","description":"Returns the canonical URL for a post."},"ƒ: rel_canonical":{"prefix":["rel_canonical","rc"],"body":"rel_canonical(  )","description":"Outputs rel=canonical for singular queries."},"ƒ: wp_get_shortlink":{"prefix":["wp_get_shortlink","wgs"],"body":"wp_get_shortlink( ${1:\\$id:int}, ${2:\\$context:string}, ${3:\\$allow_slugs:bool} )","description":"Returns a shortlink for a post, page, attachment, or site."},"ƒ: wp_shortlink_wp_head":{"prefix":["wp_shortlink_wp_head","wswh"],"body":"wp_shortlink_wp_head(  )","description":"Injects rel=shortlink into the head if a shortlink is defined for the current page."},"ƒ: wp_shortlink_header":{"prefix":["wp_shortlink_header","wsh"],"body":"wp_shortlink_header(  )","description":"Sends a Link: rel=shortlink header if a shortlink is defined for the current page."},"ƒ: the_shortlink":{"prefix":["the_shortlink","ts"],"body":"the_shortlink( ${1:\\$text:string}, ${2:\\$title:string}, ${3:\\$before:string}, ${4:\\$after:string} )","description":"Displays the shortlink for a post."},"ƒ: get_avatar_url":{"prefix":["get_avatar_url","gau"],"body":"get_avatar_url( ${1:\\$id_or_email:mixed}, ${2:\\$args:array|null} )","description":"Retrieves the avatar URL."},"ƒ: is_avatar_comment_type":{"prefix":["is_avatar_comment_type","iact"],"body":"is_avatar_comment_type( ${1:\\$comment_type:string} )","description":"Check if this comment type allows avatars to be retrieved."},"ƒ: get_avatar_data":{"prefix":["get_avatar_data","gad"],"body":"get_avatar_data( ${1:\\$id_or_email:mixed}, ${2:\\$args:array|null} )","description":"Retrieves default data about the avatar."},"ƒ: get_theme_file_uri":{"prefix":["get_theme_file_uri","gtfu"],"body":"get_theme_file_uri( ${1:\\$file:string} )","description":"Retrieves the URL of a file in the theme."},"ƒ: get_parent_theme_file_uri":{"prefix":["get_parent_theme_file_uri","gptfu"],"body":"get_parent_theme_file_uri( ${1:\\$file:string} )","description":"Retrieves the URL of a file in the parent theme."},"ƒ: get_theme_file_path":{"prefix":["get_theme_file_path","gtfp"],"body":"get_theme_file_path( ${1:\\$file:string} )","description":"Retrieves the path of a file in the theme."},"ƒ: get_parent_theme_file_path":{"prefix":["get_parent_theme_file_path","gptfp"],"body":"get_parent_theme_file_path( ${1:\\$file:string} )","description":"Retrieves the path of a file in the parent theme."},"ƒ: get_privacy_policy_url":{"prefix":["get_privacy_policy_url","gppu"],"body":"get_privacy_policy_url(  )","description":"Retrieves the URL to the privacy policy page."},"ƒ: the_privacy_policy_link":{"prefix":["the_privacy_policy_link","tppl"],"body":"the_privacy_policy_link( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Displays the privacy policy link with formatting, when applicable."},"ƒ: get_the_privacy_policy_link":{"prefix":["get_the_privacy_policy_link","gtppl"],"body":"get_the_privacy_policy_link( ${1:\\$before:string}, ${2:\\$after:string} )","description":"Returns the privacy policy link with formatting, when applicable."},"ƒ: wp_internal_hosts":{"prefix":["wp_internal_hosts","wih"],"body":"wp_internal_hosts(  )","description":"Returns an array of URL hosts which are considered to be internal hosts."},"ƒ: wp_is_internal_link":{"prefix":["wp_is_internal_link","wiil"],"body":"wp_is_internal_link( ${1:\\$link:string} )","description":"Determines whether or not the specified URL is of a host included in the internal hosts list."},"ƒ: wp_get_server_protocol":{"prefix":["wp_get_server_protocol","wgsp"],"body":"wp_get_server_protocol(  )","description":"Returns the HTTP protocol sent by the server."},"ƒ: wp_populate_basic_auth_from_authorization_header":{"prefix":["wp_populate_basic_auth_from_authorization_header","wpbafah"],"body":"wp_populate_basic_auth_from_authorization_header(  )","description":"Populates the Basic Auth server details from the Authorization header."},"ƒ: wp_get_environment_type":{"prefix":["wp_get_environment_type","wget"],"body":"wp_get_environment_type(  )","description":"Retrieves the current environment type."},"ƒ: wp_get_development_mode":{"prefix":["wp_get_development_mode","wgdm"],"body":"wp_get_development_mode(  )","description":"Retrieves the current development mode."},"ƒ: wp_is_development_mode":{"prefix":["wp_is_development_mode","widm"],"body":"wp_is_development_mode( ${1:\\$mode:string} )","description":"Checks whether the site is in the given development mode."},"ƒ: wp_favicon_request":{"prefix":["wp_favicon_request","wfr"],"body":"wp_favicon_request(  )","description":"Ensures all of WordPress is not loaded when handling a favicon.ico request."},"ƒ: wp_is_maintenance_mode":{"prefix":["wp_is_maintenance_mode","wimm"],"body":"wp_is_maintenance_mode(  )","description":"Checks if maintenance mode is enabled."},"ƒ: timer_float":{"prefix":["timer_float","tf"],"body":"timer_float(  )","description":"Gets the time elapsed so far during this PHP script."},"ƒ: timer_stop":{"prefix":["timer_stop","ts"],"body":"timer_stop( ${1:\\$display:int|bool}, ${2:\\$precision:int} )","description":"Retrieves or displays the time from the page start to when function is called."},"ƒ: require_wp_db":{"prefix":["require_wp_db","rwd"],"body":"require_wp_db(  )","description":"Loads the database class file and instantiates the `$wpdb` global."},"ƒ: wp_using_ext_object_cache":{"prefix":["wp_using_ext_object_cache","wueoc"],"body":"wp_using_ext_object_cache( ${1:\\$using:bool|null} )","description":"Toggles `$_wp_using_ext_object_cache` on and off without directly touching global."},"ƒ: wp_skip_paused_plugins":{"prefix":["wp_skip_paused_plugins","wspp"],"body":"wp_skip_paused_plugins( ${1:\\$plugins:string[]} )","description":"Filters a given list of plugins, removing any paused plugins from it."},"ƒ: wp_skip_paused_themes":{"prefix":["wp_skip_paused_themes","wspt"],"body":"wp_skip_paused_themes( ${1:\\$themes:string[]} )","description":"Filters a given list of themes, removing any paused themes from it."},"ƒ: wp_is_recovery_mode":{"prefix":["wp_is_recovery_mode","wirm"],"body":"wp_is_recovery_mode(  )","description":"Determines whether WordPress is in Recovery Mode."},"ƒ: is_protected_endpoint":{"prefix":["is_protected_endpoint","ipe"],"body":"is_protected_endpoint(  )","description":"Determines whether we are currently on an endpoint that should be protected against WSODs."},"ƒ: is_protected_ajax_action":{"prefix":["is_protected_ajax_action","ipaa"],"body":"is_protected_ajax_action(  )","description":"Determines whether we are currently handling an Ajax action that should be protected against WSODs."},"ƒ: wp_clone":{"prefix":["wp_clone","wc"],"body":"wp_clone( ${1:\\$input_object:object} )","description":"Clones an object."},"ƒ: is_login":{"prefix":["is_login","il"],"body":"is_login(  )","description":"Determines whether the current request is for the login screen."},"ƒ: is_admin":{"prefix":["is_admin","ia"],"body":"is_admin(  )","description":"Determines whether the current request is for an administrative interface page."},"ƒ: is_blog_admin":{"prefix":["is_blog_admin","iba"],"body":"is_blog_admin(  )","description":"Determines whether the current request is for a site's administrative interface."},"ƒ: is_network_admin":{"prefix":["is_network_admin","ina"],"body":"is_network_admin(  )","description":"Determines whether the current request is for the network administrative interface."},"ƒ: is_user_admin":{"prefix":["is_user_admin","iua"],"body":"is_user_admin(  )","description":"Determines whether the current request is for a user admin screen."},"ƒ: is_multisite":{"prefix":["is_multisite","im"],"body":"is_multisite(  )","description":"Determines whether Multisite is enabled."},"ƒ: absint":{"prefix":["absint"],"body":"absint( ${1:\\$maybeint:mixed} )","description":"Converts a value to non-negative integer."},"ƒ: get_current_blog_id":{"prefix":["get_current_blog_id","gcbi"],"body":"get_current_blog_id(  )","description":"Retrieves the current site ID."},"ƒ: get_current_network_id":{"prefix":["get_current_network_id","gcni"],"body":"get_current_network_id(  )","description":"Retrieves the current network ID."},"ƒ: wp_installing":{"prefix":["wp_installing","wi"],"body":"wp_installing( ${1:\\$is_installing:bool|null} )","description":"Checks or sets whether WordPress is in \"installation\" mode."},"ƒ: is_ssl":{"prefix":["is_ssl","is"],"body":"is_ssl(  )","description":"Determines if SSL is used."},"ƒ: wp_convert_hr_to_bytes":{"prefix":["wp_convert_hr_to_bytes","wchtb"],"body":"wp_convert_hr_to_bytes( ${1:\\$value:string} )","description":"Converts a shorthand byte value to an integer byte value."},"ƒ: wp_is_ini_value_changeable":{"prefix":["wp_is_ini_value_changeable","wiivc"],"body":"wp_is_ini_value_changeable( ${1:\\$setting:string} )","description":"Determines whether a PHP ini value is changeable at runtime."},"ƒ: wp_doing_ajax":{"prefix":["wp_doing_ajax","wda"],"body":"wp_doing_ajax(  )","description":"Determines whether the current request is a WordPress Ajax request."},"ƒ: wp_using_themes":{"prefix":["wp_using_themes","wut"],"body":"wp_using_themes(  )","description":"Determines whether the current request should use themes."},"ƒ: wp_doing_cron":{"prefix":["wp_doing_cron","wdc"],"body":"wp_doing_cron(  )","description":"Determines whether the current request is a WordPress cron request."},"ƒ: is_wp_error":{"prefix":["is_wp_error","iwe"],"body":"is_wp_error( ${1:\\$thing:mixed} )","description":"Checks whether the given variable is a WordPress Error."},"ƒ: wp_is_file_mod_allowed":{"prefix":["wp_is_file_mod_allowed","wifma"],"body":"wp_is_file_mod_allowed( ${1:\\$context:string} )","description":"Determines whether file modifications are allowed."},"ƒ: wp_start_scraping_edited_file_errors":{"prefix":["wp_start_scraping_edited_file_errors","wssefe"],"body":"wp_start_scraping_edited_file_errors(  )","description":"Starts scraping edited file errors."},"ƒ: wp_finalize_scraping_edited_file_errors":{"prefix":["wp_finalize_scraping_edited_file_errors","wfsefe"],"body":"wp_finalize_scraping_edited_file_errors( ${1:\\$scrape_key:string} )","description":"Finalizes scraping for edited file errors."},"ƒ: wp_is_json_request":{"prefix":["wp_is_json_request","wijr"],"body":"wp_is_json_request(  )","description":"Checks whether current request is a JSON request, or is expecting a JSON response."},"ƒ: wp_is_jsonp_request":{"prefix":["wp_is_jsonp_request","wijr"],"body":"wp_is_jsonp_request(  )","description":"Checks whether current request is a JSONP request, or is expecting a JSONP response."},"ƒ: wp_is_json_media_type":{"prefix":["wp_is_json_media_type","wijmt"],"body":"wp_is_json_media_type( ${1:\\$media_type:string} )","description":"Checks whether a string is a valid JSON Media Type."},"ƒ: wp_is_xml_request":{"prefix":["wp_is_xml_request","wixr"],"body":"wp_is_xml_request(  )","description":"Checks whether current request is an XML request, or is expecting an XML response."},"ƒ: wp_is_site_protected_by_basic_auth":{"prefix":["wp_is_site_protected_by_basic_auth","wispbba"],"body":"wp_is_site_protected_by_basic_auth( ${1:\\$context:string} )","description":"Checks if this site is protected by HTTP Basic Auth."},"ƒ: wp_underscore_audio_template":{"prefix":["wp_underscore_audio_template","wuat"],"body":"wp_underscore_audio_template(  )","description":"Outputs the markup for an audio tag to be used in an Underscore template when data.model is passed."},"ƒ: wp_underscore_video_template":{"prefix":["wp_underscore_video_template","wuvt"],"body":"wp_underscore_video_template(  )","description":"Outputs the markup for a video tag to be used in an Underscore template when data.model is passed."},"ƒ: wp_print_media_templates":{"prefix":["wp_print_media_templates","wpmt"],"body":"wp_print_media_templates(  )","description":"Prints the templates used in the media manager."},"ƒ: wp_get_additional_image_sizes":{"prefix":["wp_get_additional_image_sizes","wgais"],"body":"wp_get_additional_image_sizes(  )","description":"Retrieves additional image sizes."},"ƒ: image_constrain_size_for_editor":{"prefix":["image_constrain_size_for_editor","icsfe"],"body":"image_constrain_size_for_editor( ${1:\\$width:int}, ${2:\\$height:int}, ${3:\\$size:string|int[]}, ${4:\\$context:string|null} )","description":"Scales down the default size of an image."},"ƒ: image_hwstring":{"prefix":["image_hwstring","ih"],"body":"image_hwstring( ${1:\\$width:int|string}, ${2:\\$height:int|string} )","description":"Retrieves width and height attributes using given width and height values."},"ƒ: image_downsize":{"prefix":["image_downsize","id"],"body":"image_downsize( ${1:\\$id:int}, ${2:\\$size:string|int[]} )","description":"Scales an image to fit a particular size (such as 'thumb' or 'medium')."},"ƒ: add_image_size":{"prefix":["add_image_size","ais"],"body":"add_image_size( ${1:\\$name:string}, ${2:\\$width:int}, ${3:\\$height:int}, ${4:\\$crop:bool|array} )","description":"Registers a new image size."},"ƒ: has_image_size":{"prefix":["has_image_size","his"],"body":"has_image_size( ${1:\\$name:string} )","description":"Checks if an image size exists."},"ƒ: remove_image_size":{"prefix":["remove_image_size","ris"],"body":"remove_image_size( ${1:\\$name:string} )","description":"Removes a new image size."},"ƒ: set_post_thumbnail_size":{"prefix":["set_post_thumbnail_size","spts"],"body":"set_post_thumbnail_size( ${1:\\$width:int}, ${2:\\$height:int}, ${3:\\$crop:bool|array} )","description":"Registers an image size for the post thumbnail."},"ƒ: get_image_tag":{"prefix":["get_image_tag","git"],"body":"get_image_tag( ${1:\\$id:int}, ${2:\\$alt:string}, ${3:\\$title:string}, ${4:\\$align:string}, ${5:\\$size:string|int[]} )","description":"Gets an img tag for an image attachment, scaling it down if requested."},"ƒ: wp_constrain_dimensions":{"prefix":["wp_constrain_dimensions","wcd"],"body":"wp_constrain_dimensions( ${1:\\$current_width:int}, ${2:\\$current_height:int}, ${3:\\$max_width:int}, ${4:\\$max_height:int} )","description":"Calculates the new dimensions for a down-sampled image."},"ƒ: image_resize_dimensions":{"prefix":["image_resize_dimensions","ird"],"body":"image_resize_dimensions( ${1:\\$orig_w:int}, ${2:\\$orig_h:int}, ${3:\\$dest_w:int}, ${4:\\$dest_h:int}, ${5:\\$crop:bool|array} )","description":"Retrieves calculated resize dimensions for use in WP_Image_Editor."},"ƒ: image_make_intermediate_size":{"prefix":["image_make_intermediate_size","imis"],"body":"image_make_intermediate_size( ${1:\\$file:string}, ${2:\\$width:int}, ${3:\\$height:int}, ${4:\\$crop:bool|array} )","description":"Resizes an image to make a thumbnail or intermediate size."},"ƒ: wp_image_matches_ratio":{"prefix":["wp_image_matches_ratio","wimr"],"body":"wp_image_matches_ratio( ${1:\\$source_width:int}, ${2:\\$source_height:int}, ${3:\\$target_width:int}, ${4:\\$target_height:int} )","description":"Helper function to test if aspect ratios for two images match."},"ƒ: image_get_intermediate_size":{"prefix":["image_get_intermediate_size","igis"],"body":"image_get_intermediate_size( ${1:\\$post_id:int}, ${2:\\$size:string|int[]} )","description":"Retrieves the image's intermediate size (resized) path, width, and height."},"ƒ: get_intermediate_image_sizes":{"prefix":["get_intermediate_image_sizes","giis"],"body":"get_intermediate_image_sizes(  )","description":"Gets the available intermediate image size names."},"ƒ: wp_get_registered_image_subsizes":{"prefix":["wp_get_registered_image_subsizes","wgris"],"body":"wp_get_registered_image_subsizes(  )","description":"Returns a normalized list of all currently registered image sub-sizes."},"ƒ: wp_get_attachment_image_src":{"prefix":["wp_get_attachment_image_src","wgais"],"body":"wp_get_attachment_image_src( ${1:\\$attachment_id:int}, ${2:\\$size:string|int[]}, ${3:\\$icon:bool} )","description":"Retrieves an image to represent an attachment."},"ƒ: wp_get_attachment_image":{"prefix":["wp_get_attachment_image","wgai"],"body":"wp_get_attachment_image( ${1:\\$attachment_id:int}, ${2:\\$size:string|int[]}, ${3:\\$icon:bool}, ${4:\\$attr:string|array} )","description":"Gets an HTML img element representing an image attachment."},"ƒ: wp_get_attachment_image_url":{"prefix":["wp_get_attachment_image_url","wgaiu"],"body":"wp_get_attachment_image_url( ${1:\\$attachment_id:int}, ${2:\\$size:string|int[]}, ${3:\\$icon:bool} )","description":"Gets the URL of an image attachment."},"ƒ: wp_get_attachment_image_srcset":{"prefix":["wp_get_attachment_image_srcset","wgais"],"body":"wp_get_attachment_image_srcset( ${1:\\$attachment_id:int}, ${2:\\$size:string|int[]}, ${3:\\$image_meta:array|null|null} )","description":"Retrieves the value for an image attachment's 'srcset' attribute."},"ƒ: wp_calculate_image_srcset":{"prefix":["wp_calculate_image_srcset","wcis"],"body":"wp_calculate_image_srcset( ${1:\\$size_array:int[]}, ${2:\\$image_src:string}, ${3:\\$image_meta:array}, ${4:\\$attachment_id:int} )","description":"A helper function to calculate the image sources to include in a 'srcset' attribute."},"ƒ: wp_get_attachment_image_sizes":{"prefix":["wp_get_attachment_image_sizes","wgais"],"body":"wp_get_attachment_image_sizes( ${1:\\$attachment_id:int}, ${2:\\$size:string|int[]}, ${3:\\$image_meta:array|null|null} )","description":"Retrieves the value for an image attachment's 'sizes' attribute."},"ƒ: wp_calculate_image_sizes":{"prefix":["wp_calculate_image_sizes","wcis"],"body":"wp_calculate_image_sizes( ${1:\\$size:string|int[]}, ${2:\\$image_src:string|null|null}, ${3:\\$image_meta:array|null|null}, ${4:\\$attachment_id:int} )","description":"Creates a 'sizes' attribute value for an image."},"ƒ: wp_image_file_matches_image_meta":{"prefix":["wp_image_file_matches_image_meta","wifmim"],"body":"wp_image_file_matches_image_meta( ${1:\\$image_location:string}, ${2:\\$image_meta:array}, ${3:\\$attachment_id:int} )","description":"Determines if the image meta data is for the image source file."},"ƒ: wp_image_src_get_dimensions":{"prefix":["wp_image_src_get_dimensions","wisgd"],"body":"wp_image_src_get_dimensions( ${1:\\$image_src:string}, ${2:\\$image_meta:array}, ${3:\\$attachment_id:int} )","description":"Determines an image's width and height dimensions based on the source file."},"ƒ: wp_image_add_srcset_and_sizes":{"prefix":["wp_image_add_srcset_and_sizes","wiasas"],"body":"wp_image_add_srcset_and_sizes( ${1:\\$image:string}, ${2:\\$image_meta:array}, ${3:\\$attachment_id:int} )","description":"Adds 'srcset' and 'sizes' attributes to an existing 'img' element."},"ƒ: wp_lazy_loading_enabled":{"prefix":["wp_lazy_loading_enabled","wlle"],"body":"wp_lazy_loading_enabled( ${1:\\$tag_name:string}, ${2:\\$context:string} )","description":"Determines whether to add the `loading` attribute to the specified tag in the specified context."},"ƒ: wp_filter_content_tags":{"prefix":["wp_filter_content_tags","wfct"],"body":"wp_filter_content_tags( ${1:\\$content:string}, ${2:\\$context:string|null} )","description":"Filters specific tags in post content and modifies their markup."},"ƒ: wp_img_tag_add_auto_sizes":{"prefix":["wp_img_tag_add_auto_sizes","witaas"],"body":"wp_img_tag_add_auto_sizes( ${1:\\$image:string} )","description":"Adds 'auto' to the sizes attribute to the image, if the image is lazy loaded and does not already include it."},"ƒ: wp_sizes_attribute_includes_valid_auto":{"prefix":["wp_sizes_attribute_includes_valid_auto","wsaiva"],"body":"wp_sizes_attribute_includes_valid_auto( ${1:\\$sizes_attr:string} )","description":"Checks whether the given 'sizes' attribute includes the 'auto' keyword as the first item in the list."},"ƒ: wp_print_auto_sizes_contain_css_fix":{"prefix":["wp_print_auto_sizes_contain_css_fix","wpasccf"],"body":"wp_print_auto_sizes_contain_css_fix(  )","description":"Prints a CSS rule to fix potential visual issues with images using `sizes=auto`."},"ƒ: wp_img_tag_add_loading_optimization_attrs":{"prefix":["wp_img_tag_add_loading_optimization_attrs","witaloa"],"body":"wp_img_tag_add_loading_optimization_attrs( ${1:\\$image:string}, ${2:\\$context:string} )","description":"Adds optimization attributes to an `img` HTML tag."},"ƒ: wp_img_tag_add_width_and_height_attr":{"prefix":["wp_img_tag_add_width_and_height_attr","witawaha"],"body":"wp_img_tag_add_width_and_height_attr( ${1:\\$image:string}, ${2:\\$context:string}, ${3:\\$attachment_id:int} )","description":"Adds `width` and `height` attributes to an `img` HTML tag."},"ƒ: wp_img_tag_add_srcset_and_sizes_attr":{"prefix":["wp_img_tag_add_srcset_and_sizes_attr","witasasa"],"body":"wp_img_tag_add_srcset_and_sizes_attr( ${1:\\$image:string}, ${2:\\$context:string}, ${3:\\$attachment_id:int} )","description":"Adds `srcset` and `sizes` attributes to an existing `img` HTML tag."},"ƒ: wp_iframe_tag_add_loading_attr":{"prefix":["wp_iframe_tag_add_loading_attr","witala"],"body":"wp_iframe_tag_add_loading_attr( ${1:\\$iframe:string}, ${2:\\$context:string} )","description":"Adds `loading` attribute to an `iframe` HTML tag."},"ƒ: img_caption_shortcode":{"prefix":["img_caption_shortcode","ics"],"body":"img_caption_shortcode( ${1:\\$attr:array}, ${2:\\$content:string} )","description":"Builds the Caption shortcode output."},"ƒ: gallery_shortcode":{"prefix":["gallery_shortcode","gs"],"body":"gallery_shortcode( ${1:\\$attr:array} )","description":"Builds the Gallery shortcode output."},"ƒ: wp_underscore_playlist_templates":{"prefix":["wp_underscore_playlist_templates","wupt"],"body":"wp_underscore_playlist_templates(  )","description":"Outputs the templates used by playlists."},"ƒ: wp_playlist_scripts":{"prefix":["wp_playlist_scripts","wps"],"body":"wp_playlist_scripts( ${1:\\$type:string} )","description":"Outputs and enqueues default scripts and styles for playlists."},"ƒ: wp_playlist_shortcode":{"prefix":["wp_playlist_shortcode","wps"],"body":"wp_playlist_shortcode( ${1:\\$attr:array} )","description":"Builds the Playlist shortcode output."},"ƒ: wp_mediaelement_fallback":{"prefix":["wp_mediaelement_fallback","wmf"],"body":"wp_mediaelement_fallback( ${1:\\$url:string} )","description":"Provides a No-JS Flash fallback as a last resort for audio / video."},"ƒ: wp_get_audio_extensions":{"prefix":["wp_get_audio_extensions","wgae"],"body":"wp_get_audio_extensions(  )","description":"Returns a filtered list of supported audio formats."},"ƒ: wp_get_attachment_id3_keys":{"prefix":["wp_get_attachment_id3_keys","wgaik"],"body":"wp_get_attachment_id3_keys( ${1:\\$attachment:WP_Post}, ${2:\\$context:string} )","description":"Returns useful keys to use to lookup data from an attachment's stored metadata."},"ƒ: wp_audio_shortcode":{"prefix":["wp_audio_shortcode","was"],"body":"wp_audio_shortcode( ${1:\\$attr:array}, ${2:\\$content:string} )","description":"Builds the Audio shortcode output."},"ƒ: wp_get_video_extensions":{"prefix":["wp_get_video_extensions","wgve"],"body":"wp_get_video_extensions(  )","description":"Returns a filtered list of supported video formats."},"ƒ: wp_video_shortcode":{"prefix":["wp_video_shortcode","wvs"],"body":"wp_video_shortcode( ${1:\\$attr:array}, ${2:\\$content:string} )","description":"Builds the Video shortcode output."},"ƒ: get_previous_image_link":{"prefix":["get_previous_image_link","gpil"],"body":"get_previous_image_link( ${1:\\$size:string|int[]}, ${2:\\$text:string|false} )","description":"Gets the previous image link that has the same post parent."},"ƒ: previous_image_link":{"prefix":["previous_image_link","pil"],"body":"previous_image_link( ${1:\\$size:string|int[]}, ${2:\\$text:string|false} )","description":"Displays previous image link that has the same post parent."},"ƒ: get_next_image_link":{"prefix":["get_next_image_link","gnil"],"body":"get_next_image_link( ${1:\\$size:string|int[]}, ${2:\\$text:string|false} )","description":"Gets the next image link that has the same post parent."},"ƒ: next_image_link":{"prefix":["next_image_link","nil"],"body":"next_image_link( ${1:\\$size:string|int[]}, ${2:\\$text:string|false} )","description":"Displays next image link that has the same post parent."},"ƒ: get_adjacent_image_link":{"prefix":["get_adjacent_image_link","gail"],"body":"get_adjacent_image_link( ${1:\\$prev:bool}, ${2:\\$size:string|int[]}, ${3:\\$text:bool} )","description":"Gets the next or previous image link that has the same post parent."},"ƒ: adjacent_image_link":{"prefix":["adjacent_image_link","ail"],"body":"adjacent_image_link( ${1:\\$prev:bool}, ${2:\\$size:string|int[]}, ${3:\\$text:bool} )","description":"Displays next or previous image link that has the same post parent."},"ƒ: get_attachment_taxonomies":{"prefix":["get_attachment_taxonomies","gat"],"body":"get_attachment_taxonomies( ${1:\\$attachment:int|array|object}, ${2:\\$output:string} )","description":"Retrieves taxonomies attached to given the attachment."},"ƒ: get_taxonomies_for_attachments":{"prefix":["get_taxonomies_for_attachments","gtfa"],"body":"get_taxonomies_for_attachments( ${1:\\$output:string} )","description":"Retrieves all of the taxonomies that are registered for attachments."},"ƒ: is_gd_image":{"prefix":["is_gd_image","igi"],"body":"is_gd_image( ${1:\\$image:resource|GdImage|false} )","description":"Determines whether the value is an acceptable type for GD image functions."},"ƒ: wp_imagecreatetruecolor":{"prefix":["wp_imagecreatetruecolor","wi"],"body":"wp_imagecreatetruecolor( ${1:\\$width:int}, ${2:\\$height:int} )","description":"Creates a new GD image resource with transparency support."},"ƒ: wp_expand_dimensions":{"prefix":["wp_expand_dimensions","wed"],"body":"wp_expand_dimensions( ${1:\\$example_width:int}, ${2:\\$example_height:int}, ${3:\\$max_width:int}, ${4:\\$max_height:int} )","description":"Based on a supplied width/height example, returns the biggest possible dimensions based on the max width/height."},"ƒ: wp_max_upload_size":{"prefix":["wp_max_upload_size","wmus"],"body":"wp_max_upload_size(  )","description":"Determines the maximum upload size allowed in php.ini."},"ƒ: wp_get_image_editor":{"prefix":["wp_get_image_editor","wgie"],"body":"wp_get_image_editor( ${1:\\$path:string}, ${2:\\$args:array} )","description":"Returns a WP_Image_Editor instance and loads file into it."},"ƒ: wp_image_editor_supports":{"prefix":["wp_image_editor_supports","wies"],"body":"wp_image_editor_supports( ${1:\\$args:string|array} )","description":"Tests whether there is an editor that supports a given mime type or methods."},"ƒ: wp_plupload_default_settings":{"prefix":["wp_plupload_default_settings","wpds"],"body":"wp_plupload_default_settings(  )","description":"Prints default Plupload arguments."},"ƒ: wp_prepare_attachment_for_js":{"prefix":["wp_prepare_attachment_for_js","wpafj"],"body":"wp_prepare_attachment_for_js( ${1:\\$attachment:int|WP_Post} )","description":"Prepares an attachment post object for JS, where it is expected to be JSON-encoded and fit into an Attachment model."},"ƒ: wp_enqueue_media":{"prefix":["wp_enqueue_media","wem"],"body":"wp_enqueue_media( ${1:\\$args:array} )","description":"Enqueues all scripts, styles, settings, and templates necessary to use all media JS APIs."},"ƒ: get_attached_media":{"prefix":["get_attached_media","gam"],"body":"get_attached_media( ${1:\\$type:string}, ${2:\\$post:int|WP_Post} )","description":"Retrieves media attached to the passed post."},"ƒ: get_media_embedded_in_content":{"prefix":["get_media_embedded_in_content","gmeic"],"body":"get_media_embedded_in_content( ${1:\\$content:string}, ${2:\\$types:string[]|null} )","description":"Checks the HTML content for an audio, video, object, embed, or iframe tags."},"ƒ: get_post_galleries":{"prefix":["get_post_galleries","gpg"],"body":"get_post_galleries( ${1:\\$post:int|WP_Post}, ${2:\\$html:bool} )","description":"Retrieves galleries from the passed post's content."},"ƒ: get_post_gallery":{"prefix":["get_post_gallery","gpg"],"body":"get_post_gallery( ${1:\\$post:int|WP_Post}, ${2:\\$html:bool} )","description":"Checks a specified post's content for gallery and, if present, return the first"},"ƒ: get_post_galleries_images":{"prefix":["get_post_galleries_images","gpgi"],"body":"get_post_galleries_images( ${1:\\$post:int|WP_Post} )","description":"Retrieves the image srcs from galleries from a post's content, if present."},"ƒ: get_post_gallery_images":{"prefix":["get_post_gallery_images","gpgi"],"body":"get_post_gallery_images( ${1:\\$post:int|WP_Post} )","description":"Checks a post's content for galleries and return the image srcs for the first found gallery."},"ƒ: wp_maybe_generate_attachment_metadata":{"prefix":["wp_maybe_generate_attachment_metadata","wmgam"],"body":"wp_maybe_generate_attachment_metadata( ${1:\\$attachment:WP_Post} )","description":"Maybe attempts to generate attachment metadata, if missing."},"ƒ: attachment_url_to_postid":{"prefix":["attachment_url_to_postid","autp"],"body":"attachment_url_to_postid( ${1:\\$url:string} )","description":"Tries to convert an attachment URL into a post ID."},"ƒ: wpview_media_sandbox_styles":{"prefix":["wpview_media_sandbox_styles","wmss"],"body":"wpview_media_sandbox_styles(  )","description":"Returns the URLs for CSS files used in an iframe-sandbox'd TinyMCE media view."},"ƒ: wp_register_media_personal_data_exporter":{"prefix":["wp_register_media_personal_data_exporter","wrmpde"],"body":"wp_register_media_personal_data_exporter( ${1:\\$exporters:array[]} )","description":"Registers the personal data exporter for media."},"ƒ: wp_media_personal_data_exporter":{"prefix":["wp_media_personal_data_exporter","wmpde"],"body":"wp_media_personal_data_exporter( ${1:\\$email_address:string}, ${2:\\$page:int} )","description":"Finds and exports attachments associated with an email address."},"ƒ: wp_show_heic_upload_error":{"prefix":["wp_show_heic_upload_error","wshue"],"body":"wp_show_heic_upload_error( ${1:\\$plupload_settings:array[]} )","description":"Callback to enable showing of the user error when uploading .heic images."},"ƒ: wp_getimagesize":{"prefix":["wp_getimagesize","wg"],"body":"wp_getimagesize( ${1:\\$filename:string}, ${2:\\$image_info:array|null} )","description":"Allows PHP's getimagesize() to be debuggable when necessary."},"ƒ: wp_get_avif_info":{"prefix":["wp_get_avif_info","wgai"],"body":"wp_get_avif_info( ${1:\\$filename:string} )","description":"Extracts meta information about an AVIF file: width, height, bit depth, and number of channels."},"ƒ: wp_get_webp_info":{"prefix":["wp_get_webp_info","wgwi"],"body":"wp_get_webp_info( ${1:\\$filename:string} )","description":"Extracts meta information about a WebP file: width, height, and type."},"ƒ: wp_get_loading_optimization_attributes":{"prefix":["wp_get_loading_optimization_attributes","wgloa"],"body":"wp_get_loading_optimization_attributes( ${1:\\$tag_name:string}, ${2:\\$attr:array}, ${3:\\$context:string} )","description":"Gets loading optimization attributes."},"ƒ: wp_omit_loading_attr_threshold":{"prefix":["wp_omit_loading_attr_threshold","wolat"],"body":"wp_omit_loading_attr_threshold( ${1:\\$force:bool} )","description":"Gets the threshold for how many of the first content media elements to not lazy-load."},"ƒ: add_metadata":{"prefix":["add_metadata","am"],"body":"add_metadata( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$meta_value:mixed}, ${5:\\$unique:bool} )","description":"Adds metadata for the specified object."},"ƒ: update_metadata":{"prefix":["update_metadata","um"],"body":"update_metadata( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$meta_value:mixed}, ${5:\\$prev_value:mixed} )","description":"Updates metadata for the specified object. If no value already exists for the specified object ID and metadata key, the metadata will be added."},"ƒ: delete_metadata":{"prefix":["delete_metadata","dm"],"body":"delete_metadata( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$meta_value:mixed}, ${5:\\$delete_all:bool} )","description":"Deletes metadata for the specified object."},"ƒ: get_metadata":{"prefix":["get_metadata","gm"],"body":"get_metadata( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$single:bool} )","description":"Retrieves the value of a metadata field for the specified object type and ID."},"ƒ: get_metadata_raw":{"prefix":["get_metadata_raw","gmr"],"body":"get_metadata_raw( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$single:bool} )","description":"Retrieves raw metadata value for the specified object."},"ƒ: get_metadata_default":{"prefix":["get_metadata_default","gmd"],"body":"get_metadata_default( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$single:bool} )","description":"Retrieves default metadata value for the specified meta key and object."},"ƒ: metadata_exists":{"prefix":["metadata_exists","me"],"body":"metadata_exists( ${1:\\$meta_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string} )","description":"Determines if a meta field with the given key exists for the given object ID."},"ƒ: get_metadata_by_mid":{"prefix":["get_metadata_by_mid","gmbm"],"body":"get_metadata_by_mid( ${1:\\$meta_type:string}, ${2:\\$meta_id:int} )","description":"Retrieves metadata by meta ID."},"ƒ: update_metadata_by_mid":{"prefix":["update_metadata_by_mid","umbm"],"body":"update_metadata_by_mid( ${1:\\$meta_type:string}, ${2:\\$meta_id:int}, ${3:\\$meta_value:string}, ${4:\\$meta_key:string|false} )","description":"Updates metadata by meta ID."},"ƒ: delete_metadata_by_mid":{"prefix":["delete_metadata_by_mid","dmbm"],"body":"delete_metadata_by_mid( ${1:\\$meta_type:string}, ${2:\\$meta_id:int} )","description":"Deletes metadata by meta ID."},"ƒ: update_meta_cache":{"prefix":["update_meta_cache","umc"],"body":"update_meta_cache( ${1:\\$meta_type:string}, ${2:\\$object_ids:string|int[]} )","description":"Updates the metadata cache for the specified objects."},"ƒ: wp_metadata_lazyloader":{"prefix":["wp_metadata_lazyloader","wml"],"body":"wp_metadata_lazyloader(  )","description":"Retrieves the queue for lazy-loading metadata."},"ƒ: get_meta_sql":{"prefix":["get_meta_sql","gms"],"body":"get_meta_sql( ${1:\\$meta_query:array}, ${2:\\$type:string}, ${3:\\$primary_table:string}, ${4:\\$primary_id_column:string}, ${5:\\$context:object|null} )","description":"Given a meta query, generates SQL clauses to be appended to a main query."},"ƒ: is_protected_meta":{"prefix":["is_protected_meta","ipm"],"body":"is_protected_meta( ${1:\\$meta_key:string}, ${2:\\$meta_type:string} )","description":"Determines whether a meta key is considered protected."},"ƒ: sanitize_meta":{"prefix":["sanitize_meta","sm"],"body":"sanitize_meta( ${1:\\$meta_key:string}, ${2:\\$meta_value:mixed}, ${3:\\$object_type:string}, ${4:\\$object_subtype:string} )","description":"Sanitizes meta value."},"ƒ: register_meta":{"prefix":["register_meta","rm"],"body":"register_meta( ${1:\\$object_type:string}, ${2:\\$meta_key:string}, ${3:\\$args:array}, ${4:\\$deprecated:string|array|null} )","description":"Registers a meta key."},"ƒ: filter_default_metadata":{"prefix":["filter_default_metadata","fdm"],"body":"filter_default_metadata( ${1:\\$value:mixed}, ${2:\\$object_id:int}, ${3:\\$meta_key:string}, ${4:\\$single:bool}, ${5:\\$meta_type:string} )","description":"Filters into default_{$object_type}_metadata and adds in default value."},"ƒ: registered_meta_key_exists":{"prefix":["registered_meta_key_exists","rmke"],"body":"registered_meta_key_exists( ${1:\\$object_type:string}, ${2:\\$meta_key:string}, ${3:\\$object_subtype:string} )","description":"Checks if a meta key is registered."},"ƒ: unregister_meta_key":{"prefix":["unregister_meta_key","umk"],"body":"unregister_meta_key( ${1:\\$object_type:string}, ${2:\\$meta_key:string}, ${3:\\$object_subtype:string} )","description":"Unregisters a meta key from the list of registered keys."},"ƒ: get_registered_meta_keys":{"prefix":["get_registered_meta_keys","grmk"],"body":"get_registered_meta_keys( ${1:\\$object_type:string}, ${2:\\$object_subtype:string} )","description":"Retrieves a list of registered metadata args for an object type, keyed by their meta keys."},"ƒ: get_registered_metadata":{"prefix":["get_registered_metadata","grm"],"body":"get_registered_metadata( ${1:\\$object_type:string}, ${2:\\$object_id:int}, ${3:\\$meta_key:string} )","description":"Retrieves registered metadata for a specified object."},"ƒ: get_object_subtype":{"prefix":["get_object_subtype","gos"],"body":"get_object_subtype( ${1:\\$object_type:string}, ${2:\\$object_id:int} )","description":"Returns the object subtype for a given object ID of a specific type."},"ƒ: wpmu_update_blogs_date":{"prefix":["wpmu_update_blogs_date","wubd"],"body":"wpmu_update_blogs_date(  )","description":"Updates the last_updated field for the current site."},"ƒ: get_blogaddress_by_id":{"prefix":["get_blogaddress_by_id","gbbi"],"body":"get_blogaddress_by_id( ${1:\\$blog_id:int} )","description":"Gets a full site URL, given a site ID."},"ƒ: get_blogaddress_by_name":{"prefix":["get_blogaddress_by_name","gbbn"],"body":"get_blogaddress_by_name( ${1:\\$blogname:string} )","description":"Gets a full site URL, given a site name."},"ƒ: get_id_from_blogname":{"prefix":["get_id_from_blogname","gifb"],"body":"get_id_from_blogname( ${1:\\$slug:string} )","description":"Retrieves a site's ID given its (subdomain or directory) slug."},"ƒ: get_blog_details":{"prefix":["get_blog_details","gbd"],"body":"get_blog_details( ${1:\\$fields:int|string|array|null}, ${2:\\$get_all:bool} )","description":"Retrieves the details for a blog from the blogs table and blog options."},"ƒ: refresh_blog_details":{"prefix":["refresh_blog_details","rbd"],"body":"refresh_blog_details( ${1:\\$blog_id:int} )","description":"Clears the blog details cache."},"ƒ: update_blog_details":{"prefix":["update_blog_details","ubd"],"body":"update_blog_details( ${1:\\$blog_id:int}, ${2:\\$details:array} )","description":"Updates the details for a blog and the blogs table for a given blog ID."},"ƒ: clean_site_details_cache":{"prefix":["clean_site_details_cache","csdc"],"body":"clean_site_details_cache( ${1:\\$site_id:int} )","description":"Cleans the site details cache for a site."},"ƒ: get_blog_option":{"prefix":["get_blog_option","gbo"],"body":"get_blog_option( ${1:\\$id:int}, ${2:\\$option:string}, ${3:\\$default_value:mixed} )","description":"Retrieves option value for a given blog id based on name of option."},"ƒ: add_blog_option":{"prefix":["add_blog_option","abo"],"body":"add_blog_option( ${1:\\$id:int}, ${2:\\$option:string}, ${3:\\$value:mixed} )","description":"Adds a new option for a given blog ID."},"ƒ: delete_blog_option":{"prefix":["delete_blog_option","dbo"],"body":"delete_blog_option( ${1:\\$id:int}, ${2:\\$option:string} )","description":"Removes an option by name for a given blog ID. Prevents removal of protected WordPress options."},"ƒ: update_blog_option":{"prefix":["update_blog_option","ubo"],"body":"update_blog_option( ${1:\\$id:int}, ${2:\\$option:string}, ${3:\\$value:mixed}, ${4:\\$deprecated:mixed|null} )","description":"Updates an option for a particular blog."},"ƒ: switch_to_blog":{"prefix":["switch_to_blog","stb"],"body":"switch_to_blog( ${1:\\$new_blog_id:int}, ${2:\\$deprecated:bool|null} )","description":"Switches the current blog."},"ƒ: restore_current_blog":{"prefix":["restore_current_blog","rcb"],"body":"restore_current_blog(  )","description":"Restores the current blog, after calling switch_to_blog()."},"ƒ: wp_switch_roles_and_user":{"prefix":["wp_switch_roles_and_user","wsrau"],"body":"wp_switch_roles_and_user( ${1:\\$new_site_id:int}, ${2:\\$old_site_id:int} )","description":"Switches the initialized roles and current user capabilities to another site."},"ƒ: ms_is_switched":{"prefix":["ms_is_switched","mis"],"body":"ms_is_switched(  )","description":"Determines if switch_to_blog() is in effect."},"ƒ: is_archived":{"prefix":["is_archived","ia"],"body":"is_archived( ${1:\\$id:int} )","description":"Checks if a particular blog is archived."},"ƒ: update_archived":{"prefix":["update_archived","ua"],"body":"update_archived( ${1:\\$id:int}, ${2:\\$archived:string} )","description":"Updates the 'archived' status of a particular blog."},"ƒ: update_blog_status":{"prefix":["update_blog_status","ubs"],"body":"update_blog_status( ${1:\\$blog_id:int}, ${2:\\$pref:string}, ${3:\\$value:string}, ${4:\\$deprecated:null} )","description":"Updates a blog details field."},"ƒ: get_blog_status":{"prefix":["get_blog_status","gbs"],"body":"get_blog_status( ${1:\\$id:int}, ${2:\\$pref:string} )","description":"Gets a blog details field."},"ƒ: get_last_updated":{"prefix":["get_last_updated","glu"],"body":"get_last_updated( ${1:\\$deprecated:mixed}, ${2:\\$start:int}, ${3:\\$quantity:int} )","description":"Gets a list of most recently updated blogs."},"ƒ: wp_count_sites":{"prefix":["wp_count_sites","wcs"],"body":"wp_count_sites( ${1:\\$network_id:int|null} )","description":"Counts number of sites grouped by site status."},"ƒ: ms_upload_constants":{"prefix":["ms_upload_constants","muc"],"body":"ms_upload_constants(  )","description":"Defines Multisite upload constants."},"ƒ: ms_cookie_constants":{"prefix":["ms_cookie_constants","mcc"],"body":"ms_cookie_constants(  )","description":"Defines Multisite cookie constants."},"ƒ: ms_file_constants":{"prefix":["ms_file_constants","mfc"],"body":"ms_file_constants(  )","description":"Defines Multisite file constants."},"ƒ: ms_subdomain_constants":{"prefix":["ms_subdomain_constants","msc"],"body":"ms_subdomain_constants(  )","description":"Defines Multisite subdomain constants and handles warnings and notices."},"ƒ: get_dashboard_blog":{"prefix":["get_dashboard_blog","gdb"],"body":"get_dashboard_blog(  )","description":"Get the \"dashboard blog\", the blog where users without a blog edit their profile data."},"ƒ: generate_random_password":{"prefix":["generate_random_password","grp"],"body":"generate_random_password( ${1:\\$len:int} )","description":"Generates a random password."},"ƒ: is_site_admin":{"prefix":["is_site_admin","isa"],"body":"is_site_admin( ${1:\\$user_login:string} )","description":"Determine if user is a site admin."},"ƒ: graceful_fail":{"prefix":["graceful_fail","gf"],"body":"graceful_fail( ${1:\\$message:mixed} )","description":"Deprecated functionality to gracefully fail."},"ƒ: get_user_details":{"prefix":["get_user_details","gud"],"body":"get_user_details( ${1:\\$username:string} )","description":"Deprecated functionality to retrieve user information."},"ƒ: clear_global_post_cache":{"prefix":["clear_global_post_cache","cgpc"],"body":"clear_global_post_cache( ${1:\\$post_id:int} )","description":"Deprecated functionality to clear the global post cache."},"ƒ: is_main_blog":{"prefix":["is_main_blog","imb"],"body":"is_main_blog(  )","description":"Deprecated functionality to determine if the current site is the main site."},"ƒ: validate_email":{"prefix":["validate_email","ve"],"body":"validate_email( ${1:\\$email:string}, ${2:\\$check_domain:bool} )","description":"Deprecated functionality to validate an email address."},"ƒ: get_blog_list":{"prefix":["get_blog_list","gbl"],"body":"get_blog_list( ${1:\\$start:int}, ${2:\\$num:int}, ${3:\\$deprecated:string} )","description":"Deprecated functionality to retrieve a list of all sites."},"ƒ: get_most_active_blogs":{"prefix":["get_most_active_blogs","gmab"],"body":"get_most_active_blogs( ${1:\\$num:int}, ${2:\\$display:bool} )","description":"Deprecated functionality to retrieve a list of the most active sites."},"ƒ: wpmu_admin_do_redirect":{"prefix":["wpmu_admin_do_redirect","wadr"],"body":"wpmu_admin_do_redirect( ${1:\\$url:string} )","description":"Redirect a user based on $_GET or $_POST arguments."},"ƒ: wpmu_admin_redirect_add_updated_param":{"prefix":["wpmu_admin_redirect_add_updated_param","waraup"],"body":"wpmu_admin_redirect_add_updated_param( ${1:\\$url:string} )","description":"Adds an 'updated=true' argument to a URL."},"ƒ: get_user_id_from_string":{"prefix":["get_user_id_from_string","guifs"],"body":"get_user_id_from_string( ${1:\\$email_or_login:string} )","description":"Get a numeric user ID from either an email address or a login."},"ƒ: get_blogaddress_by_domain":{"prefix":["get_blogaddress_by_domain","gbbd"],"body":"get_blogaddress_by_domain( ${1:\\$domain:string}, ${2:\\$path:string} )","description":"Get a full site URL, given a domain and a path."},"ƒ: create_empty_blog":{"prefix":["create_empty_blog","ceb"],"body":"create_empty_blog( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$weblog_title:string}, ${4:\\$site_id:int} )","description":"Create an empty blog."},"ƒ: get_admin_users_for_domain":{"prefix":["get_admin_users_for_domain","gaufd"],"body":"get_admin_users_for_domain( ${1:\\$domain:string}, ${2:\\$path:string} )","description":"Get the admin for a domain/path combination."},"ƒ: wp_get_sites":{"prefix":["wp_get_sites","wgs"],"body":"wp_get_sites( ${1:\\$args:array} )","description":"Return an array of sites for a network or networks."},"ƒ: is_user_option_local":{"prefix":["is_user_option_local","iuol"],"body":"is_user_option_local( ${1:\\$key:string}, ${2:\\$user_id:int}, ${3:\\$blog_id:int} )","description":"Check whether a usermeta key has to do with the current blog."},"ƒ: insert_blog":{"prefix":["insert_blog","ib"],"body":"insert_blog( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$site_id:int} )","description":"Store basic site info in the blogs table."},"ƒ: install_blog":{"prefix":["install_blog","ib"],"body":"install_blog( ${1:\\$blog_id:int}, ${2:\\$blog_title:string} )","description":"Install an empty blog."},"ƒ: install_blog_defaults":{"prefix":["install_blog_defaults","ibd"],"body":"install_blog_defaults( ${1:\\$blog_id:int}, ${2:\\$user_id:int} )","description":"Set blog defaults."},"ƒ: update_user_status":{"prefix":["update_user_status","uus"],"body":"update_user_status( ${1:\\$id:int}, ${2:\\$pref:string}, ${3:\\$value:int}, ${4:\\$deprecated:null} )","description":"Update the status of a user in the database."},"ƒ: global_terms":{"prefix":["global_terms","gt"],"body":"global_terms( ${1:\\$term_id:int}, ${2:\\$deprecated:string} )","description":"Maintains a canonical list of terms by syncing terms created for each blog with the global terms table."},"ƒ: get_sitestats":{"prefix":["get_sitestats","gs"],"body":"get_sitestats(  )","description":"Gets the network's site and user counts."},"ƒ: get_active_blog_for_user":{"prefix":["get_active_blog_for_user","gabfu"],"body":"get_active_blog_for_user( ${1:\\$user_id:int} )","description":"Gets one of a user's active blogs."},"ƒ: get_blog_count":{"prefix":["get_blog_count","gbc"],"body":"get_blog_count( ${1:\\$network_id:int|null|null} )","description":"Gets the number of active sites on the installation."},"ƒ: get_blog_post":{"prefix":["get_blog_post","gbp"],"body":"get_blog_post( ${1:\\$blog_id:int}, ${2:\\$post_id:int} )","description":"Gets a blog post from any site on the network."},"ƒ: add_user_to_blog":{"prefix":["add_user_to_blog","autb"],"body":"add_user_to_blog( ${1:\\$blog_id:int}, ${2:\\$user_id:int}, ${3:\\$role:string} )","description":"Adds a user to a blog, along with specifying the user's role."},"ƒ: remove_user_from_blog":{"prefix":["remove_user_from_blog","rufb"],"body":"remove_user_from_blog( ${1:\\$user_id:int}, ${2:\\$blog_id:int}, ${3:\\$reassign:int} )","description":"Removes a user from a blog."},"ƒ: get_blog_permalink":{"prefix":["get_blog_permalink","gbp"],"body":"get_blog_permalink( ${1:\\$blog_id:int}, ${2:\\$post_id:int} )","description":"Gets the permalink for a post on another blog."},"ƒ: get_blog_id_from_url":{"prefix":["get_blog_id_from_url","gbifu"],"body":"get_blog_id_from_url( ${1:\\$domain:string}, ${2:\\$path:string} )","description":"Gets a blog's numeric ID from its URL."},"ƒ: is_email_address_unsafe":{"prefix":["is_email_address_unsafe","ieau"],"body":"is_email_address_unsafe( ${1:\\$user_email:string} )","description":"Checks an email address against a list of banned domains."},"ƒ: wpmu_validate_user_signup":{"prefix":["wpmu_validate_user_signup","wvus"],"body":"wpmu_validate_user_signup( ${1:\\$user_name:string}, ${2:\\$user_email:string} )","description":"Sanitizes and validates data required for a user sign-up."},"ƒ: wpmu_validate_blog_signup":{"prefix":["wpmu_validate_blog_signup","wvbs"],"body":"wpmu_validate_blog_signup( ${1:\\$blogname:string}, ${2:\\$blog_title:string}, ${3:\\$user:WP_User|string} )","description":"Processes new site registrations."},"ƒ: wpmu_signup_blog":{"prefix":["wpmu_signup_blog","wsb"],"body":"wpmu_signup_blog( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$title:string}, ${4:\\$user:string}, ${5:\\$user_email:string}, ${6:\\$meta:array} )","description":"Records site signup information for future activation."},"ƒ: wpmu_signup_user":{"prefix":["wpmu_signup_user","wsu"],"body":"wpmu_signup_user( ${1:\\$user:string}, ${2:\\$user_email:string}, ${3:\\$meta:array} )","description":"Records user signup information for future activation."},"ƒ: wpmu_signup_blog_notification":{"prefix":["wpmu_signup_blog_notification","wsbn"],"body":"wpmu_signup_blog_notification( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$title:string}, ${4:\\$user_login:string}, ${5:\\$user_email:string}, ${6:\\$key:string}, ${7:\\$meta:array} )","description":"Sends a confirmation request email to a user when they sign up for a new site. The new site will not become active until the confirmation link is clicked."},"ƒ: wpmu_signup_user_notification":{"prefix":["wpmu_signup_user_notification","wsun"],"body":"wpmu_signup_user_notification( ${1:\\$user_login:string}, ${2:\\$user_email:string}, ${3:\\$key:string}, ${4:\\$meta:array} )","description":"Sends a confirmation request email to a user when they sign up for a new user account (without signing up for a site at the same time). The user account will not become active until the confirmation link is clicked."},"ƒ: wpmu_activate_signup":{"prefix":["wpmu_activate_signup","was"],"body":"wpmu_activate_signup( ${1:\\$key:string} )","description":"Activates a signup."},"ƒ: wp_delete_signup_on_user_delete":{"prefix":["wp_delete_signup_on_user_delete","wdsoud"],"body":"wp_delete_signup_on_user_delete( ${1:\\$id:int}, ${2:\\$reassign:int|null}, ${3:\\$user:WP_User} )","description":"Deletes an associated signup entry when a user is deleted from the database."},"ƒ: wpmu_create_user":{"prefix":["wpmu_create_user","wcu"],"body":"wpmu_create_user( ${1:\\$user_name:string}, ${2:\\$password:string}, ${3:\\$email:string} )","description":"Creates a user."},"ƒ: wpmu_create_blog":{"prefix":["wpmu_create_blog","wcb"],"body":"wpmu_create_blog( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$title:string}, ${4:\\$user_id:int}, ${5:\\$options:array}, ${6:\\$network_id:int} )","description":"Creates a site."},"ƒ: newblog_notify_siteadmin":{"prefix":["newblog_notify_siteadmin","nns"],"body":"newblog_notify_siteadmin( ${1:\\$blog_id:WP_Site|int}, ${2:\\$deprecated:string} )","description":"Notifies the network admin that a new site has been activated."},"ƒ: newuser_notify_siteadmin":{"prefix":["newuser_notify_siteadmin","nns"],"body":"newuser_notify_siteadmin( ${1:\\$user_id:int} )","description":"Notifies the network admin that a new user has been activated."},"ƒ: domain_exists":{"prefix":["domain_exists","de"],"body":"domain_exists( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$network_id:int} )","description":"Checks whether a site name is already taken."},"ƒ: wpmu_welcome_notification":{"prefix":["wpmu_welcome_notification","wwn"],"body":"wpmu_welcome_notification( ${1:\\$blog_id:int}, ${2:\\$user_id:int}, ${3:\\$password:string}, ${4:\\$title:string}, ${5:\\$meta:array} )","description":"Notifies the site administrator that their site activation was successful."},"ƒ: wpmu_new_site_admin_notification":{"prefix":["wpmu_new_site_admin_notification","wnsan"],"body":"wpmu_new_site_admin_notification( ${1:\\$site_id:int}, ${2:\\$user_id:int} )","description":"Notifies the Multisite network administrator that a new site was created."},"ƒ: wpmu_welcome_user_notification":{"prefix":["wpmu_welcome_user_notification","wwun"],"body":"wpmu_welcome_user_notification( ${1:\\$user_id:int}, ${2:\\$password:string}, ${3:\\$meta:array} )","description":"Notifies a user that their account activation has been successful."},"ƒ: get_current_site":{"prefix":["get_current_site","gcs"],"body":"get_current_site(  )","description":"Gets the current network."},"ƒ: get_most_recent_post_of_user":{"prefix":["get_most_recent_post_of_user","gmrpou"],"body":"get_most_recent_post_of_user( ${1:\\$user_id:int} )","description":"Gets a user's most recent post."},"ƒ: check_upload_mimes":{"prefix":["check_upload_mimes","cum"],"body":"check_upload_mimes( ${1:\\$mimes:array} )","description":"Checks an array of MIME types against a list of allowed types."},"ƒ: update_posts_count":{"prefix":["update_posts_count","upc"],"body":"update_posts_count( ${1:\\$deprecated:string} )","description":"Updates a blog's post count."},"ƒ: wpmu_log_new_registrations":{"prefix":["wpmu_log_new_registrations","wlnr"],"body":"wpmu_log_new_registrations( ${1:\\$blog_id:WP_Site|int}, ${2:\\$user_id:int|array} )","description":"Logs the user email, IP, and registration date of a new site."},"ƒ: redirect_this_site":{"prefix":["redirect_this_site","rts"],"body":"redirect_this_site( ${1:\\$deprecated:array|string} )","description":"Ensures that the current site's domain is listed in the allowed redirect host list."},"ƒ: upload_is_file_too_big":{"prefix":["upload_is_file_too_big","uiftb"],"body":"upload_is_file_too_big( ${1:\\$upload:array} )","description":"Checks whether an upload is too big."},"ƒ: signup_nonce_fields":{"prefix":["signup_nonce_fields","snf"],"body":"signup_nonce_fields(  )","description":"Adds a nonce field to the signup page."},"ƒ: signup_nonce_check":{"prefix":["signup_nonce_check","snc"],"body":"signup_nonce_check( ${1:\\$result:array} )","description":"Processes the signup nonce created in signup_nonce_fields()."},"ƒ: maybe_redirect_404":{"prefix":["maybe_redirect_404","mr4"],"body":"maybe_redirect_404(  )","description":"Corrects 404 redirects when NOBLOGREDIRECT is defined."},"ƒ: maybe_add_existing_user_to_blog":{"prefix":["maybe_add_existing_user_to_blog","maeutb"],"body":"maybe_add_existing_user_to_blog(  )","description":"Adds a new user to a blog by visiting /newbloguser/{key}/."},"ƒ: add_existing_user_to_blog":{"prefix":["add_existing_user_to_blog","aeutb"],"body":"add_existing_user_to_blog( ${1:\\$details:array|false} )","description":"Adds a user to a blog based on details from maybe_add_existing_user_to_blog()."},"ƒ: add_new_user_to_blog":{"prefix":["add_new_user_to_blog","anutb"],"body":"add_new_user_to_blog( ${1:\\$user_id:int}, ${2:\\$password:string}, ${3:\\$meta:array} )","description":"Adds a newly created user to the appropriate blog"},"ƒ: fix_phpmailer_messageid":{"prefix":["fix_phpmailer_messageid","fpm"],"body":"fix_phpmailer_messageid( ${1:\\$phpmailer:PHPMailerPHPMailerPHPMailer} )","description":"Corrects From host on outgoing mail to match the site domain."},"ƒ: is_user_spammy":{"prefix":["is_user_spammy","ius"],"body":"is_user_spammy( ${1:\\$user:string|WP_User|null} )","description":"Determines whether a user is marked as a spammer, based on user login."},"ƒ: update_blog_public":{"prefix":["update_blog_public","ubp"],"body":"update_blog_public( ${1:\\$old_value:int}, ${2:\\$value:int} )","description":"Updates this blog's 'public' setting in the global blogs table."},"ƒ: users_can_register_signup_filter":{"prefix":["users_can_register_signup_filter","ucrsf"],"body":"users_can_register_signup_filter(  )","description":"Determines whether users can self-register, based on Network settings."},"ƒ: welcome_user_msg_filter":{"prefix":["welcome_user_msg_filter","wumf"],"body":"welcome_user_msg_filter( ${1:\\$text:string} )","description":"Ensures that the welcome message is not empty. Currently unused."},"ƒ: force_ssl_content":{"prefix":["force_ssl_content","fsc"],"body":"force_ssl_content( ${1:\\$force:bool} )","description":"Determines whether to force SSL on content."},"ƒ: filter_SSL":{"prefix":["filter_SSL","fS"],"body":"filter_SSL( ${1:\\$url:string} )","description":"Formats a URL to use https."},"ƒ: wp_schedule_update_network_counts":{"prefix":["wp_schedule_update_network_counts","wsunc"],"body":"wp_schedule_update_network_counts(  )","description":"Schedules update of the network-wide counts for the current network."},"ƒ: wp_update_network_counts":{"prefix":["wp_update_network_counts","wunc"],"body":"wp_update_network_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the network-wide counts for the current network."},"ƒ: wp_maybe_update_network_site_counts":{"prefix":["wp_maybe_update_network_site_counts","wmunsc"],"body":"wp_maybe_update_network_site_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the count of sites for the current network."},"ƒ: wp_maybe_update_network_user_counts":{"prefix":["wp_maybe_update_network_user_counts","wmunuc"],"body":"wp_maybe_update_network_user_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the network-wide users count."},"ƒ: wp_update_network_site_counts":{"prefix":["wp_update_network_site_counts","wunsc"],"body":"wp_update_network_site_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the network-wide site count."},"ƒ: wp_update_network_user_counts":{"prefix":["wp_update_network_user_counts","wunuc"],"body":"wp_update_network_user_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the network-wide user count."},"ƒ: get_space_used":{"prefix":["get_space_used","gsu"],"body":"get_space_used(  )","description":"Returns the space used by the current site."},"ƒ: get_space_allowed":{"prefix":["get_space_allowed","gsa"],"body":"get_space_allowed(  )","description":"Returns the upload quota for the current blog."},"ƒ: get_upload_space_available":{"prefix":["get_upload_space_available","gusa"],"body":"get_upload_space_available(  )","description":"Determines if there is any upload space left in the current blog's quota."},"ƒ: is_upload_space_available":{"prefix":["is_upload_space_available","iusa"],"body":"is_upload_space_available(  )","description":"Determines if there is any upload space left in the current blog's quota."},"ƒ: upload_size_limit_filter":{"prefix":["upload_size_limit_filter","uslf"],"body":"upload_size_limit_filter( ${1:\\$size:int} )","description":"Filters the maximum upload file size allowed, in bytes."},"ƒ: wp_is_large_network":{"prefix":["wp_is_large_network","wiln"],"body":"wp_is_large_network( ${1:\\$using:string}, ${2:\\$network_id:int|null|null} )","description":"Determines whether or not we have a large network."},"ƒ: get_subdirectory_reserved_names":{"prefix":["get_subdirectory_reserved_names","gsrn"],"body":"get_subdirectory_reserved_names(  )","description":"Retrieves a list of reserved site on a sub-directory Multisite installation."},"ƒ: update_network_option_new_admin_email":{"prefix":["update_network_option_new_admin_email","unonae"],"body":"update_network_option_new_admin_email( ${1:\\$old_value:string}, ${2:\\$value:string} )","description":"Sends a confirmation request email when a change of network admin email address is attempted."},"ƒ: wp_network_admin_email_change_notification":{"prefix":["wp_network_admin_email_change_notification","wnaecn"],"body":"wp_network_admin_email_change_notification( ${1:\\$option_name:string}, ${2:\\$new_email:string}, ${3:\\$old_email:string}, ${4:\\$network_id:int} )","description":"Sends an email to the old network admin email address when the network admin email address changes."},"ƒ: is_subdomain_install":{"prefix":["is_subdomain_install","isi"],"body":"is_subdomain_install(  )","description":"Whether a subdomain configuration is enabled."},"ƒ: ms_site_check":{"prefix":["ms_site_check","msc"],"body":"ms_site_check(  )","description":"Checks status of current blog."},"ƒ: get_site_by_path":{"prefix":["get_site_by_path","gsbp"],"body":"get_site_by_path( ${1:\\$domain:string}, ${2:\\$path:string}, ${3:\\$segments:int|null|null} )","description":"Retrieves the closest matching site object by its domain and path."},"ƒ: get_network":{"prefix":["get_network","gn"],"body":"get_network( ${1:\\$network:WP_Network|int|null|null} )","description":"Retrieves network data given a network ID or network object."},"ƒ: get_networks":{"prefix":["get_networks","gn"],"body":"get_networks( ${1:\\$args:string|array} )","description":"Retrieves a list of networks."},"ƒ: clean_network_cache":{"prefix":["clean_network_cache","cnc"],"body":"clean_network_cache( ${1:\\$ids:int|array} )","description":"Removes a network from the object cache."},"ƒ: update_network_cache":{"prefix":["update_network_cache","unc"],"body":"update_network_cache( ${1:\\$networks:array} )","description":"Updates the network cache of given networks."},"ƒ: wp_insert_site":{"prefix":["wp_insert_site","wis"],"body":"wp_insert_site( ${1:\\$data:array} )","description":"Inserts a new site into the database."},"ƒ: wp_update_site":{"prefix":["wp_update_site","wus"],"body":"wp_update_site( ${1:\\$site_id:int}, ${2:\\$data:array} )","description":"Updates a site in the database."},"ƒ: wp_delete_site":{"prefix":["wp_delete_site","wds"],"body":"wp_delete_site( ${1:\\$site_id:int} )","description":"Deletes a site from the database."},"ƒ: get_site":{"prefix":["get_site","gs"],"body":"get_site( ${1:\\$site:WP_Site|int|null|null} )","description":"Retrieves site data given a site ID or site object."},"ƒ: wp_lazyload_site_meta":{"prefix":["wp_lazyload_site_meta","wlsm"],"body":"wp_lazyload_site_meta( ${1:\\$site_ids:array} )","description":"Queue site meta for lazy-loading."},"ƒ: update_site_cache":{"prefix":["update_site_cache","usc"],"body":"update_site_cache( ${1:\\$sites:array}, ${2:\\$update_meta_cache:bool} )","description":"Updates sites in cache."},"ƒ: update_sitemeta_cache":{"prefix":["update_sitemeta_cache","usc"],"body":"update_sitemeta_cache( ${1:\\$site_ids:array} )","description":"Updates metadata cache for list of site IDs."},"ƒ: get_sites":{"prefix":["get_sites","gs"],"body":"get_sites( ${1:\\$args:string|array} )","description":"Retrieves a list of sites matching requested arguments."},"ƒ: wp_prepare_site_data":{"prefix":["wp_prepare_site_data","wpsd"],"body":"wp_prepare_site_data( ${1:\\$data:array}, ${2:\\$defaults:array}, ${3:\\$old_site:WP_Site|null|null} )","description":"Prepares site data for insertion or update in the database."},"ƒ: wp_normalize_site_data":{"prefix":["wp_normalize_site_data","wnsd"],"body":"wp_normalize_site_data( ${1:\\$data:array} )","description":"Normalizes data for a site prior to inserting or updating in the database."},"ƒ: wp_validate_site_data":{"prefix":["wp_validate_site_data","wvsd"],"body":"wp_validate_site_data( ${1:\\$errors:WP_Error}, ${2:\\$data:array}, ${3:\\$old_site:WP_Site|null|null} )","description":"Validates data for a site prior to inserting or updating in the database."},"ƒ: wp_initialize_site":{"prefix":["wp_initialize_site","wis"],"body":"wp_initialize_site( ${1:\\$site_id:int|WP_Site}, ${2:\\$args:array} )","description":"Runs the initialization routine for a given site."},"ƒ: wp_uninitialize_site":{"prefix":["wp_uninitialize_site","wus"],"body":"wp_uninitialize_site( ${1:\\$site_id:int|WP_Site} )","description":"Runs the uninitialization routine for a given site."},"ƒ: wp_is_site_initialized":{"prefix":["wp_is_site_initialized","wisi"],"body":"wp_is_site_initialized( ${1:\\$site_id:int|WP_Site} )","description":"Checks whether a site is initialized."},"ƒ: clean_blog_cache":{"prefix":["clean_blog_cache","cbc"],"body":"clean_blog_cache( ${1:\\$blog:WP_Site|int} )","description":"Clean the blog cache"},"ƒ: add_site_meta":{"prefix":["add_site_meta","asm"],"body":"add_site_meta( ${1:\\$site_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$unique:bool} )","description":"Adds metadata to a site."},"ƒ: delete_site_meta":{"prefix":["delete_site_meta","dsm"],"body":"delete_site_meta( ${1:\\$site_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Removes metadata matching criteria from a site."},"ƒ: get_site_meta":{"prefix":["get_site_meta","gsm"],"body":"get_site_meta( ${1:\\$site_id:int}, ${2:\\$key:string}, ${3:\\$single:bool} )","description":"Retrieves metadata for a site."},"ƒ: update_site_meta":{"prefix":["update_site_meta","usm"],"body":"update_site_meta( ${1:\\$site_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$prev_value:mixed} )","description":"Updates metadata for a site."},"ƒ: delete_site_meta_by_key":{"prefix":["delete_site_meta_by_key","dsmbk"],"body":"delete_site_meta_by_key( ${1:\\$meta_key:string} )","description":"Deletes everything from site meta matching meta key."},"ƒ: wp_maybe_update_network_site_counts_on_update":{"prefix":["wp_maybe_update_network_site_counts_on_update","wmunscou"],"body":"wp_maybe_update_network_site_counts_on_update( ${1:\\$new_site:WP_Site}, ${2:\\$old_site:WP_Site|null|null} )","description":"Updates the count of sites for a network based on a changed site."},"ƒ: wp_maybe_transition_site_statuses_on_update":{"prefix":["wp_maybe_transition_site_statuses_on_update","wmtssou"],"body":"wp_maybe_transition_site_statuses_on_update( ${1:\\$new_site:WP_Site}, ${2:\\$old_site:WP_Site|null|null} )","description":"Triggers actions on site status updates."},"ƒ: wp_maybe_clean_new_site_cache_on_update":{"prefix":["wp_maybe_clean_new_site_cache_on_update","wmcnscou"],"body":"wp_maybe_clean_new_site_cache_on_update( ${1:\\$new_site:WP_Site}, ${2:\\$old_site:WP_Site} )","description":"Cleans the necessary caches after specific site data has been updated."},"ƒ: wp_update_blog_public_option_on_site_update":{"prefix":["wp_update_blog_public_option_on_site_update","wubpoosu"],"body":"wp_update_blog_public_option_on_site_update( ${1:\\$site_id:int}, ${2:\\$is_public:string} )","description":"Updates the `blog_public` option for a given site ID."},"ƒ: wp_cache_set_sites_last_changed":{"prefix":["wp_cache_set_sites_last_changed","wcsslc"],"body":"wp_cache_set_sites_last_changed(  )","description":"Sets the last changed time for the 'sites' cache group."},"ƒ: wp_check_site_meta_support_prefilter":{"prefix":["wp_check_site_meta_support_prefilter","wcsmsp"],"body":"wp_check_site_meta_support_prefilter( ${1:\\$check:mixed} )","description":"Aborts calls to site meta if it is not supported."},"ƒ: wp_nav_menu":{"prefix":["wp_nav_menu","wnm"],"body":"wp_nav_menu( ${1:\\$args:array} )","description":"Displays a navigation menu."},"ƒ: walk_nav_menu_tree":{"prefix":["walk_nav_menu_tree","wnmt"],"body":"walk_nav_menu_tree( ${1:\\$items:array}, ${2:\\$depth:int}, ${3:\\$args:stdClass} )","description":"Retrieves the HTML list content for nav menu items."},"ƒ: wp_nav_menu_remove_menu_item_has_children_class":{"prefix":["wp_nav_menu_remove_menu_item_has_children_class","wnmrmihcc"],"body":"wp_nav_menu_remove_menu_item_has_children_class( ${1:\\$classes:string[]}, ${2:\\$menu_item:WP_Post}, ${3:\\$args:stdClass|false}, ${4:\\$depth:int|false} )","description":"Remove the `menu-item-has-children` class from bottom level menu items."},"ƒ: wp_get_nav_menu_object":{"prefix":["wp_get_nav_menu_object","wgnmo"],"body":"wp_get_nav_menu_object( ${1:\\$menu:int|string|WP_Term} )","description":"Returns a navigation menu object."},"ƒ: is_nav_menu":{"prefix":["is_nav_menu","inm"],"body":"is_nav_menu( ${1:\\$menu:int|string|WP_Term} )","description":"Determines whether the given ID is a navigation menu."},"ƒ: register_nav_menus":{"prefix":["register_nav_menus","rnm"],"body":"register_nav_menus( ${1:\\$locations:string[]} )","description":"Registers navigation menu locations for a theme."},"ƒ: unregister_nav_menu":{"prefix":["unregister_nav_menu","unm"],"body":"unregister_nav_menu( ${1:\\$location:string} )","description":"Unregisters a navigation menu location for a theme."},"ƒ: register_nav_menu":{"prefix":["register_nav_menu","rnm"],"body":"register_nav_menu( ${1:\\$location:string}, ${2:\\$description:string} )","description":"Registers a navigation menu location for a theme."},"ƒ: get_registered_nav_menus":{"prefix":["get_registered_nav_menus","grnm"],"body":"get_registered_nav_menus(  )","description":"Retrieves all registered navigation menu locations in a theme."},"ƒ: get_nav_menu_locations":{"prefix":["get_nav_menu_locations","gnml"],"body":"get_nav_menu_locations(  )","description":"Retrieves all registered navigation menu locations and the menus assigned to them."},"ƒ: has_nav_menu":{"prefix":["has_nav_menu","hnm"],"body":"has_nav_menu( ${1:\\$location:string} )","description":"Determines whether a registered nav menu location has a menu assigned to it."},"ƒ: wp_get_nav_menu_name":{"prefix":["wp_get_nav_menu_name","wgnmn"],"body":"wp_get_nav_menu_name( ${1:\\$location:string} )","description":"Returns the name of a navigation menu."},"ƒ: is_nav_menu_item":{"prefix":["is_nav_menu_item","inmi"],"body":"is_nav_menu_item( ${1:\\$menu_item_id:int} )","description":"Determines whether the given ID is a nav menu item."},"ƒ: wp_create_nav_menu":{"prefix":["wp_create_nav_menu","wcnm"],"body":"wp_create_nav_menu( ${1:\\$menu_name:string} )","description":"Creates a navigation menu."},"ƒ: wp_delete_nav_menu":{"prefix":["wp_delete_nav_menu","wdnm"],"body":"wp_delete_nav_menu( ${1:\\$menu:int|string|WP_Term} )","description":"Deletes a navigation menu."},"ƒ: wp_update_nav_menu_object":{"prefix":["wp_update_nav_menu_object","wunmo"],"body":"wp_update_nav_menu_object( ${1:\\$menu_id:int}, ${2:\\$menu_data:array} )","description":"Saves the properties of a menu or create a new menu with those properties."},"ƒ: wp_update_nav_menu_item":{"prefix":["wp_update_nav_menu_item","wunmi"],"body":"wp_update_nav_menu_item( ${1:\\$menu_id:int}, ${2:\\$menu_item_db_id:int}, ${3:\\$menu_item_data:array}, ${4:\\$fire_after_hooks:bool} )","description":"Saves the properties of a menu item or create a new one."},"ƒ: wp_get_nav_menus":{"prefix":["wp_get_nav_menus","wgnm"],"body":"wp_get_nav_menus( ${1:\\$args:array} )","description":"Returns all navigation menu objects."},"ƒ: wp_get_nav_menu_items":{"prefix":["wp_get_nav_menu_items","wgnmi"],"body":"wp_get_nav_menu_items( ${1:\\$menu:int|string|WP_Term}, ${2:\\$args:array} )","description":"Retrieves all menu items of a navigation menu."},"ƒ: update_menu_item_cache":{"prefix":["update_menu_item_cache","umic"],"body":"update_menu_item_cache( ${1:\\$menu_items:WP_Post[]} )","description":"Updates post and term caches for all linked objects for a list of menu items."},"ƒ: wp_setup_nav_menu_item":{"prefix":["wp_setup_nav_menu_item","wsnmi"],"body":"wp_setup_nav_menu_item( ${1:\\$menu_item:object} )","description":"Decorates a menu item object with the shared navigation menu item properties."},"ƒ: wp_get_associated_nav_menu_items":{"prefix":["wp_get_associated_nav_menu_items","wganmi"],"body":"wp_get_associated_nav_menu_items( ${1:\\$object_id:int}, ${2:\\$object_type:string}, ${3:\\$taxonomy:string} )","description":"Returns the menu items associated with a particular object."},"ƒ: wp_map_nav_menu_locations":{"prefix":["wp_map_nav_menu_locations","wmnml"],"body":"wp_map_nav_menu_locations( ${1:\\$new_nav_menu_locations:array}, ${2:\\$old_nav_menu_locations:array} )","description":"Maps nav menu locations according to assignments in previously active theme."},"ƒ: get_option":{"prefix":["get_option","go"],"body":"get_option( ${1:\\$option:string}, ${2:\\$default_value:mixed} )","description":"Retrieves an option value based on an option name."},"ƒ: wp_prime_option_caches":{"prefix":["wp_prime_option_caches","wpoc"],"body":"wp_prime_option_caches( ${1:\\$options:string[]} )","description":"Primes specific options into the cache with a single database query."},"ƒ: wp_prime_option_caches_by_group":{"prefix":["wp_prime_option_caches_by_group","wpocbg"],"body":"wp_prime_option_caches_by_group( ${1:\\$option_group:string} )","description":"Primes the cache of all options registered with a specific option group."},"ƒ: get_options":{"prefix":["get_options","go"],"body":"get_options( ${1:\\$options:string[]} )","description":"Retrieves multiple options."},"ƒ: wp_set_option_autoload_values":{"prefix":["wp_set_option_autoload_values","wsoav"],"body":"wp_set_option_autoload_values( ${1:\\$options:array} )","description":"Sets the autoload values for multiple options in the database."},"ƒ: wp_set_options_autoload":{"prefix":["wp_set_options_autoload","wsoa"],"body":"wp_set_options_autoload( ${1:\\$options:string[]}, ${2:\\$autoload:bool} )","description":"Sets the autoload value for multiple options in the database."},"ƒ: wp_set_option_autoload":{"prefix":["wp_set_option_autoload","wsoa"],"body":"wp_set_option_autoload( ${1:\\$option:string}, ${2:\\$autoload:bool} )","description":"Sets the autoload value for an option in the database."},"ƒ: wp_protect_special_option":{"prefix":["wp_protect_special_option","wpso"],"body":"wp_protect_special_option( ${1:\\$option:string} )","description":"Protects WordPress special option from being modified."},"ƒ: form_option":{"prefix":["form_option","fo"],"body":"form_option( ${1:\\$option:string} )","description":"Prints option value after sanitizing for forms."},"ƒ: wp_load_alloptions":{"prefix":["wp_load_alloptions","wla"],"body":"wp_load_alloptions( ${1:\\$force_cache:bool} )","description":"Loads and caches all autoloaded options, if available or all options."},"ƒ: wp_prime_site_option_caches":{"prefix":["wp_prime_site_option_caches","wpsoc"],"body":"wp_prime_site_option_caches( ${1:\\$options:string[]} )","description":"Primes specific network options for the current network into the cache with a single database query."},"ƒ: wp_prime_network_option_caches":{"prefix":["wp_prime_network_option_caches","wpnoc"],"body":"wp_prime_network_option_caches( ${1:\\$network_id:int|null}, ${2:\\$options:string[]} )","description":"Primes specific network options into the cache with a single database query."},"ƒ: wp_load_core_site_options":{"prefix":["wp_load_core_site_options","wlcso"],"body":"wp_load_core_site_options( ${1:\\$network_id:int|null} )","description":"Loads and primes caches of certain often requested network options if is_multisite()."},"ƒ: update_option":{"prefix":["update_option","uo"],"body":"update_option( ${1:\\$option:string}, ${2:\\$value:mixed}, ${3:\\$autoload:bool|null|null} )","description":"Updates the value of an option that was already added."},"ƒ: add_option":{"prefix":["add_option","ao"],"body":"add_option( ${1:\\$option:string}, ${2:\\$value:mixed}, ${3:\\$deprecated:string}, ${4:\\$autoload:bool|null|null} )","description":"Adds a new option."},"ƒ: delete_option":{"prefix":["delete_option","do"],"body":"delete_option( ${1:\\$option:string} )","description":"Removes an option by name. Prevents removal of protected WordPress options."},"ƒ: delete_transient":{"prefix":["delete_transient","dt"],"body":"delete_transient( ${1:\\$transient:string} )","description":"Deletes a transient."},"ƒ: get_transient":{"prefix":["get_transient","gt"],"body":"get_transient( ${1:\\$transient:string} )","description":"Retrieves the value of a transient."},"ƒ: set_transient":{"prefix":["set_transient","st"],"body":"set_transient( ${1:\\$transient:string}, ${2:\\$value:mixed}, ${3:\\$expiration:int} )","description":"Sets/updates the value of a transient."},"ƒ: delete_expired_transients":{"prefix":["delete_expired_transients","det"],"body":"delete_expired_transients( ${1:\\$force_db:bool} )","description":"Deletes all expired transients."},"ƒ: wp_user_settings":{"prefix":["wp_user_settings","wus"],"body":"wp_user_settings(  )","description":"Saves and restores user interface settings stored in a cookie."},"ƒ: get_user_setting":{"prefix":["get_user_setting","gus"],"body":"get_user_setting( ${1:\\$name:string}, ${2:\\$default_value:string|false} )","description":"Retrieves user interface setting value based on setting name."},"ƒ: set_user_setting":{"prefix":["set_user_setting","sus"],"body":"set_user_setting( ${1:\\$name:string}, ${2:\\$value:string} )","description":"Adds or updates user interface setting."},"ƒ: delete_user_setting":{"prefix":["delete_user_setting","dus"],"body":"delete_user_setting( ${1:\\$names:string} )","description":"Deletes user interface settings."},"ƒ: get_all_user_settings":{"prefix":["get_all_user_settings","gaus"],"body":"get_all_user_settings(  )","description":"Retrieves all user interface settings."},"ƒ: delete_all_user_settings":{"prefix":["delete_all_user_settings","daus"],"body":"delete_all_user_settings(  )","description":"Deletes the user settings of the current user."},"ƒ: get_site_option":{"prefix":["get_site_option","gso"],"body":"get_site_option( ${1:\\$option:string}, ${2:\\$default_value:mixed}, ${3:\\$deprecated:bool} )","description":"Retrieve an option value for the current network based on name of option."},"ƒ: add_site_option":{"prefix":["add_site_option","aso"],"body":"add_site_option( ${1:\\$option:string}, ${2:\\$value:mixed} )","description":"Adds a new option for the current network."},"ƒ: delete_site_option":{"prefix":["delete_site_option","dso"],"body":"delete_site_option( ${1:\\$option:string} )","description":"Removes an option by name for the current network."},"ƒ: update_site_option":{"prefix":["update_site_option","uso"],"body":"update_site_option( ${1:\\$option:string}, ${2:\\$value:mixed} )","description":"Updates the value of an option that was already added for the current network."},"ƒ: get_network_option":{"prefix":["get_network_option","gno"],"body":"get_network_option( ${1:\\$network_id:int|null}, ${2:\\$option:string}, ${3:\\$default_value:mixed} )","description":"Retrieves a network's option value based on the option name."},"ƒ: add_network_option":{"prefix":["add_network_option","ano"],"body":"add_network_option( ${1:\\$network_id:int|null}, ${2:\\$option:string}, ${3:\\$value:mixed} )","description":"Adds a new network option."},"ƒ: delete_network_option":{"prefix":["delete_network_option","dno"],"body":"delete_network_option( ${1:\\$network_id:int|null}, ${2:\\$option:string} )","description":"Removes a network option by name."},"ƒ: update_network_option":{"prefix":["update_network_option","uno"],"body":"update_network_option( ${1:\\$network_id:int|null}, ${2:\\$option:string}, ${3:\\$value:mixed} )","description":"Updates the value of a network option that was already added."},"ƒ: delete_site_transient":{"prefix":["delete_site_transient","dst"],"body":"delete_site_transient( ${1:\\$transient:string} )","description":"Deletes a site transient."},"ƒ: get_site_transient":{"prefix":["get_site_transient","gst"],"body":"get_site_transient( ${1:\\$transient:string} )","description":"Retrieves the value of a site transient."},"ƒ: set_site_transient":{"prefix":["set_site_transient","sst"],"body":"set_site_transient( ${1:\\$transient:string}, ${2:\\$value:mixed}, ${3:\\$expiration:int} )","description":"Sets/updates the value of a site transient."},"ƒ: register_initial_settings":{"prefix":["register_initial_settings","ris"],"body":"register_initial_settings(  )","description":"Registers default settings available in WordPress."},"ƒ: register_setting":{"prefix":["register_setting","rs"],"body":"register_setting( ${1:\\$option_group:string}, ${2:\\$option_name:string}, ${3:\\$args:array} )","description":"Registers a setting and its data."},"ƒ: unregister_setting":{"prefix":["unregister_setting","us"],"body":"unregister_setting( ${1:\\$option_group:string}, ${2:\\$option_name:string}, ${3:\\$deprecated:callable} )","description":"Unregisters a setting."},"ƒ: get_registered_settings":{"prefix":["get_registered_settings","grs"],"body":"get_registered_settings(  )","description":"Retrieves an array of registered settings."},"ƒ: filter_default_option":{"prefix":["filter_default_option","fdo"],"body":"filter_default_option( ${1:\\$default_value:mixed}, ${2:\\$option:string}, ${3:\\$passed_default:bool} )","description":"Filters the default value for the option."},"ƒ: wp_autoload_values_to_autoload":{"prefix":["wp_autoload_values_to_autoload","wavta"],"body":"wp_autoload_values_to_autoload(  )","description":"Returns the values that trigger autoloading from the options table."},"ƒ: readonly":{"prefix":["readonly"],"body":"readonly( ${1:\\$readonly_value:mixed}, ${2:\\$current:mixed}, ${3:\\$display:bool} )","description":"Outputs the HTML readonly attribute."},"ƒ: set_current_user":{"prefix":["set_current_user","scu"],"body":"set_current_user( ${1:\\$id:int|null}, ${2:\\$name:string} )","description":"Changes the current user by ID or name."},"ƒ: get_currentuserinfo":{"prefix":["get_currentuserinfo","gc"],"body":"get_currentuserinfo(  )","description":"Populate global variables with information about the currently logged in user."},"ƒ: get_userdatabylogin":{"prefix":["get_userdatabylogin","gu"],"body":"get_userdatabylogin( ${1:\\$user_login:string} )","description":"Retrieve user info by login name."},"ƒ: get_user_by_email":{"prefix":["get_user_by_email","gube"],"body":"get_user_by_email( ${1:\\$email:string} )","description":"Retrieve user info by email."},"ƒ: wp_setcookie":{"prefix":["wp_setcookie","ws"],"body":"wp_setcookie( ${1:\\$username:string}, ${2:\\$password:string}, ${3:\\$already_md5:bool}, ${4:\\$home:string}, ${5:\\$siteurl:string}, ${6:\\$remember:bool} )","description":"Sets a cookie for a user who just logged in. This function is deprecated."},"ƒ: wp_clearcookie":{"prefix":["wp_clearcookie","wc"],"body":"wp_clearcookie(  )","description":"Clears the authentication cookie, logging the user out. This function is deprecated."},"ƒ: wp_get_cookie_login":{"prefix":["wp_get_cookie_login","wgcl"],"body":"wp_get_cookie_login(  )","description":"Gets the user cookie login. This function is deprecated."},"ƒ: wp_login":{"prefix":["wp_login","wl"],"body":"wp_login( ${1:\\$username:string}, ${2:\\$password:string}, ${3:\\$deprecated:string} )","description":"Checks a users login information and logs them in if it checks out. This function is deprecated."},"ƒ: wp_set_current_user":{"prefix":["wp_set_current_user","wscu"],"body":"wp_set_current_user( ${1:\\$id:int|null}, ${2:\\$name:string} )","description":"Changes the current user by ID or name."},"ƒ: wp_get_current_user":{"prefix":["wp_get_current_user","wgcu"],"body":"wp_get_current_user(  )","description":"Retrieves the current user object."},"ƒ: get_userdata":{"prefix":["get_userdata","gu"],"body":"get_userdata( ${1:\\$user_id:int} )","description":"Retrieves user info by user ID."},"ƒ: get_user_by":{"prefix":["get_user_by","gub"],"body":"get_user_by( ${1:\\$field:string}, ${2:\\$value:int|string} )","description":"Retrieves user info by a given field."},"ƒ: cache_users":{"prefix":["cache_users","cu"],"body":"cache_users( ${1:\\$user_ids:int[]} )","description":"Retrieves info for user lists to prevent multiple queries by get_userdata()."},"ƒ: wp_mail":{"prefix":["wp_mail","wm"],"body":"wp_mail( ${1:\\$to:string|string[]}, ${2:\\$subject:string}, ${3:\\$message:string}, ${4:\\$headers:string|string[]}, ${5:\\$attachments:string|string[]} )","description":"Sends an email, similar to PHP's mail function."},"ƒ: wp_authenticate":{"prefix":["wp_authenticate","wa"],"body":"wp_authenticate( ${1:\\$username:string}, ${2:\\$password:string} )","description":"Authenticates a user, confirming the login credentials are valid."},"ƒ: wp_logout":{"prefix":["wp_logout","wl"],"body":"wp_logout(  )","description":"Logs the current user out."},"ƒ: wp_validate_auth_cookie":{"prefix":["wp_validate_auth_cookie","wvac"],"body":"wp_validate_auth_cookie( ${1:\\$cookie:string}, ${2:\\$scheme:string} )","description":"Validates authentication cookie."},"ƒ: wp_generate_auth_cookie":{"prefix":["wp_generate_auth_cookie","wgac"],"body":"wp_generate_auth_cookie( ${1:\\$user_id:int}, ${2:\\$expiration:int}, ${3:\\$scheme:string}, ${4:\\$token:string} )","description":"Generates authentication cookie contents."},"ƒ: wp_parse_auth_cookie":{"prefix":["wp_parse_auth_cookie","wpac"],"body":"wp_parse_auth_cookie( ${1:\\$cookie:string}, ${2:\\$scheme:string} )","description":"Parses a cookie into its components."},"ƒ: wp_set_auth_cookie":{"prefix":["wp_set_auth_cookie","wsac"],"body":"wp_set_auth_cookie( ${1:\\$user_id:int}, ${2:\\$remember:bool}, ${3:\\$secure:bool|string}, ${4:\\$token:string} )","description":"Sets the authentication cookies based on user ID."},"ƒ: wp_clear_auth_cookie":{"prefix":["wp_clear_auth_cookie","wcac"],"body":"wp_clear_auth_cookie(  )","description":"Removes all of the cookies associated with authentication."},"ƒ: is_user_logged_in":{"prefix":["is_user_logged_in","iuli"],"body":"is_user_logged_in(  )","description":"Determines whether the current visitor is a logged in user."},"ƒ: auth_redirect":{"prefix":["auth_redirect","ar"],"body":"auth_redirect(  )","description":"Checks if a user is logged in, if not it redirects them to the login page."},"ƒ: check_admin_referer":{"prefix":["check_admin_referer","car"],"body":"check_admin_referer( ${1:\\$action:int|string}, ${2:\\$query_arg:string} )","description":"Ensures intent by verifying that a user was referred from another admin page with the correct security nonce."},"ƒ: check_ajax_referer":{"prefix":["check_ajax_referer","car"],"body":"check_ajax_referer( ${1:\\$action:int|string}, ${2:\\$query_arg:false|string}, ${3:\\$stop:bool} )","description":"Verifies the Ajax request to prevent processing requests external of the blog."},"ƒ: wp_redirect":{"prefix":["wp_redirect","wr"],"body":"wp_redirect( ${1:\\$location:string}, ${2:\\$status:int}, ${3:\\$x_redirect_by:string|false} )","description":"Redirects to another page."},"ƒ: wp_sanitize_redirect":{"prefix":["wp_sanitize_redirect","wsr"],"body":"wp_sanitize_redirect( ${1:\\$location:string} )","description":"Sanitizes a URL for use in a redirect."},"ƒ: wp_safe_redirect":{"prefix":["wp_safe_redirect","wsr"],"body":"wp_safe_redirect( ${1:\\$location:string}, ${2:\\$status:int}, ${3:\\$x_redirect_by:string|false} )","description":"Performs a safe (local) redirect, using wp_redirect()."},"ƒ: wp_validate_redirect":{"prefix":["wp_validate_redirect","wvr"],"body":"wp_validate_redirect( ${1:\\$location:string}, ${2:\\$fallback_url:string} )","description":"Validates a URL for use in a redirect."},"ƒ: wp_notify_postauthor":{"prefix":["wp_notify_postauthor","wnp"],"body":"wp_notify_postauthor( ${1:\\$comment_id:int|WP_Comment}, ${2:\\$deprecated:string|null} )","description":"Notifies an author (and/or others) of a comment/trackback/pingback on a post."},"ƒ: wp_notify_moderator":{"prefix":["wp_notify_moderator","wnm"],"body":"wp_notify_moderator( ${1:\\$comment_id:int} )","description":"Notifies the moderator of the site about a new comment that is awaiting approval."},"ƒ: wp_password_change_notification":{"prefix":["wp_password_change_notification","wpcn"],"body":"wp_password_change_notification( ${1:\\$user:WP_User} )","description":"Notifies the blog admin of a user changing password, normally via email."},"ƒ: wp_new_user_notification":{"prefix":["wp_new_user_notification","wnun"],"body":"wp_new_user_notification( ${1:\\$user_id:int}, ${2:\\$deprecated:null}, ${3:\\$notify:string} )","description":"Emails login credentials to a newly-registered user."},"ƒ: wp_nonce_tick":{"prefix":["wp_nonce_tick","wnt"],"body":"wp_nonce_tick( ${1:\\$action:string|int} )","description":"Returns the time-dependent variable for nonce creation."},"ƒ: wp_verify_nonce":{"prefix":["wp_verify_nonce","wvn"],"body":"wp_verify_nonce( ${1:\\$nonce:string}, ${2:\\$action:string|int} )","description":"Verifies that a correct security nonce was used with time limit."},"ƒ: wp_create_nonce":{"prefix":["wp_create_nonce","wcn"],"body":"wp_create_nonce( ${1:\\$action:string|int} )","description":"Creates a cryptographic token tied to a specific action, user, user session, and window of time."},"ƒ: wp_salt":{"prefix":["wp_salt","ws"],"body":"wp_salt( ${1:\\$scheme:string} )","description":"Returns a salt to add to hashes."},"ƒ: wp_hash":{"prefix":["wp_hash","wh"],"body":"wp_hash( ${1:\\$data:string}, ${2:\\$scheme:string}, ${3:\\$algo:string} )","description":"Gets the hash of the given string."},"ƒ: wp_hash_password":{"prefix":["wp_hash_password","whp"],"body":"wp_hash_password( ${1:\\$password:string} )","description":"Creates a hash of a plain text password."},"ƒ: wp_check_password":{"prefix":["wp_check_password","wcp"],"body":"wp_check_password( ${1:\\$password:string}, ${2:\\$hash:string}, ${3:\\$user_id:string|int} )","description":"Checks a plaintext password against a hashed password."},"ƒ: wp_password_needs_rehash":{"prefix":["wp_password_needs_rehash","wpnr"],"body":"wp_password_needs_rehash( ${1:\\$hash:string}, ${2:\\$user_id:string|int} )","description":"Checks whether a password hash needs to be rehashed."},"ƒ: wp_generate_password":{"prefix":["wp_generate_password","wgp"],"body":"wp_generate_password( ${1:\\$length:int}, ${2:\\$special_chars:bool}, ${3:\\$extra_special_chars:bool} )","description":"Generates a random password drawn from the defined set of characters."},"ƒ: wp_rand":{"prefix":["wp_rand","wr"],"body":"wp_rand( ${1:\\$min:int|null}, ${2:\\$max:int|null} )","description":"Generates a random non-negative number."},"ƒ: wp_set_password":{"prefix":["wp_set_password","wsp"],"body":"wp_set_password( ${1:\\$password:string}, ${2:\\$user_id:int} )","description":"Updates the user's password with a new hashed one."},"ƒ: get_avatar":{"prefix":["get_avatar","ga"],"body":"get_avatar( ${1:\\$id_or_email:mixed}, ${2:\\$size:int}, ${3:\\$default_value:string}, ${4:\\$alt:string}, ${5:\\$args:array|null} )","description":"Retrieves the avatar `<img>` tag for a user, email address, MD5 hash, comment, or post."},"ƒ: wp_text_diff":{"prefix":["wp_text_diff","wtd"],"body":"wp_text_diff( ${1:\\$left_string:string}, ${2:\\$right_string:string}, ${3:\\$args:string|array|null} )","description":"Displays a human readable HTML representation of the difference between two strings."},"ƒ: add_filter":{"prefix":["add_filter","af"],"body":"add_filter( ${1:\\$hook_name:string}, ${2:\\$callback:callable}, ${3:\\$priority:int}, ${4:\\$accepted_args:int} )","description":"Adds a callback function to a filter hook."},"ƒ: apply_filters":{"prefix":["apply_filters","af"],"body":"apply_filters( ${1:\\$hook_name:string}, ${2:\\$value:mixed}, ${3:\\$args:mixed} )","description":"Calls the callback functions that have been added to a filter hook."},"ƒ: apply_filters_ref_array":{"prefix":["apply_filters_ref_array","afra"],"body":"apply_filters_ref_array( ${1:\\$hook_name:string}, ${2:\\$args:array} )","description":"Calls the callback functions that have been added to a filter hook, specifying arguments in an array."},"ƒ: has_filter":{"prefix":["has_filter","hf"],"body":"has_filter( ${1:\\$hook_name:string}, ${2:\\$callback:callable|string|array|false} )","description":"Checks if any filter has been registered for a hook."},"ƒ: remove_filter":{"prefix":["remove_filter","rf"],"body":"remove_filter( ${1:\\$hook_name:string}, ${2:\\$callback:callable|string|array}, ${3:\\$priority:int} )","description":"Removes a callback function from a filter hook."},"ƒ: remove_all_filters":{"prefix":["remove_all_filters","raf"],"body":"remove_all_filters( ${1:\\$hook_name:string}, ${2:\\$priority:int|false} )","description":"Removes all of the callback functions from a filter hook."},"ƒ: current_filter":{"prefix":["current_filter","cf"],"body":"current_filter(  )","description":"Retrieves the name of the current filter hook."},"ƒ: doing_filter":{"prefix":["doing_filter","df"],"body":"doing_filter( ${1:\\$hook_name:string|null|null} )","description":"Returns whether or not a filter hook is currently being processed."},"ƒ: did_filter":{"prefix":["did_filter","df"],"body":"did_filter( ${1:\\$hook_name:string} )","description":"Retrieves the number of times a filter has been applied during the current request."},"ƒ: add_action":{"prefix":["add_action","aa"],"body":"add_action( ${1:\\$hook_name:string}, ${2:\\$callback:callable}, ${3:\\$priority:int}, ${4:\\$accepted_args:int} )","description":"Adds a callback function to an action hook."},"ƒ: do_action":{"prefix":["do_action","da"],"body":"do_action( ${1:\\$hook_name:string}, ${2:\\$arg:mixed} )","description":"Calls the callback functions that have been added to an action hook."},"ƒ: do_action_ref_array":{"prefix":["do_action_ref_array","dara"],"body":"do_action_ref_array( ${1:\\$hook_name:string}, ${2:\\$args:array} )","description":"Calls the callback functions that have been added to an action hook, specifying arguments in an array."},"ƒ: has_action":{"prefix":["has_action","ha"],"body":"has_action( ${1:\\$hook_name:string}, ${2:\\$callback:callable|string|array|false} )","description":"Checks if any action has been registered for a hook."},"ƒ: remove_action":{"prefix":["remove_action","ra"],"body":"remove_action( ${1:\\$hook_name:string}, ${2:\\$callback:callable|string|array}, ${3:\\$priority:int} )","description":"Removes a callback function from an action hook."},"ƒ: remove_all_actions":{"prefix":["remove_all_actions","raa"],"body":"remove_all_actions( ${1:\\$hook_name:string}, ${2:\\$priority:int|false} )","description":"Removes all of the callback functions from an action hook."},"ƒ: current_action":{"prefix":["current_action","ca"],"body":"current_action(  )","description":"Retrieves the name of the current action hook."},"ƒ: doing_action":{"prefix":["doing_action","da"],"body":"doing_action( ${1:\\$hook_name:string|null|null} )","description":"Returns whether or not an action hook is currently being processed."},"ƒ: did_action":{"prefix":["did_action","da"],"body":"did_action( ${1:\\$hook_name:string} )","description":"Retrieves the number of times an action has been fired during the current request."},"ƒ: apply_filters_deprecated":{"prefix":["apply_filters_deprecated","afd"],"body":"apply_filters_deprecated( ${1:\\$hook_name:string}, ${2:\\$args:array}, ${3:\\$version:string}, ${4:\\$replacement:string}, ${5:\\$message:string} )","description":"Fires functions attached to a deprecated filter hook."},"ƒ: do_action_deprecated":{"prefix":["do_action_deprecated","dad"],"body":"do_action_deprecated( ${1:\\$hook_name:string}, ${2:\\$args:array}, ${3:\\$version:string}, ${4:\\$replacement:string}, ${5:\\$message:string} )","description":"Fires functions attached to a deprecated action hook."},"ƒ: plugin_basename":{"prefix":["plugin_basename","pb"],"body":"plugin_basename( ${1:\\$file:string} )","description":"Gets the basename of a plugin."},"ƒ: wp_register_plugin_realpath":{"prefix":["wp_register_plugin_realpath","wrpr"],"body":"wp_register_plugin_realpath( ${1:\\$file:string} )","description":"Register a plugin's real path."},"ƒ: plugin_dir_path":{"prefix":["plugin_dir_path","pdp"],"body":"plugin_dir_path( ${1:\\$file:string} )","description":"Get the filesystem directory path (with trailing slash) for the plugin __FILE__ passed in."},"ƒ: plugin_dir_url":{"prefix":["plugin_dir_url","pdu"],"body":"plugin_dir_url( ${1:\\$file:string} )","description":"Get the URL directory path (with trailing slash) for the plugin __FILE__ passed in."},"ƒ: register_activation_hook":{"prefix":["register_activation_hook","rah"],"body":"register_activation_hook( ${1:\\$file:string}, ${2:\\$callback:callable} )","description":"Set the activation hook for a plugin."},"ƒ: register_deactivation_hook":{"prefix":["register_deactivation_hook","rdh"],"body":"register_deactivation_hook( ${1:\\$file:string}, ${2:\\$callback:callable} )","description":"Sets the deactivation hook for a plugin."},"ƒ: register_uninstall_hook":{"prefix":["register_uninstall_hook","ruh"],"body":"register_uninstall_hook( ${1:\\$file:string}, ${2:\\$callback:callable} )","description":"Sets the uninstallation hook for a plugin."},"ƒ: get_post_format":{"prefix":["get_post_format","gpf"],"body":"get_post_format( ${1:\\$post:int|WP_Post|null|null} )","description":"Retrieve the format slug for a post"},"ƒ: has_post_format":{"prefix":["has_post_format","hpf"],"body":"has_post_format( ${1:\\$format:string|string[]}, ${2:\\$post:WP_Post|int|null|null} )","description":"Check if a post has any of the given formats, or any format."},"ƒ: set_post_format":{"prefix":["set_post_format","spf"],"body":"set_post_format( ${1:\\$post:int|WP_Post}, ${2:\\$format:string} )","description":"Assign a format to a post"},"ƒ: get_post_format_strings":{"prefix":["get_post_format_strings","gpfs"],"body":"get_post_format_strings(  )","description":"Returns an array of post format slugs to their translated and pretty display versions"},"ƒ: get_post_format_slugs":{"prefix":["get_post_format_slugs","gpfs"],"body":"get_post_format_slugs(  )","description":"Retrieves the array of post format slugs."},"ƒ: get_post_format_string":{"prefix":["get_post_format_string","gpfs"],"body":"get_post_format_string( ${1:\\$slug:string} )","description":"Returns a pretty, translated version of a post format slug"},"ƒ: get_post_format_link":{"prefix":["get_post_format_link","gpfl"],"body":"get_post_format_link( ${1:\\$format:string} )","description":"Returns a link to a post format index."},"ƒ: the_ID":{"prefix":["the_ID","tI"],"body":"the_ID(  )","description":"Displays the ID of the current item in the WordPress Loop."},"ƒ: get_the_ID":{"prefix":["get_the_ID","gtI"],"body":"get_the_ID(  )","description":"Retrieves the ID of the current item in the WordPress Loop."},"ƒ: the_title":{"prefix":["the_title","tt"],"body":"the_title( ${1:\\$before:string}, ${2:\\$after:string}, ${3:\\$display:bool} )","description":"Displays or retrieves the current post title with optional markup."},"ƒ: the_title_attribute":{"prefix":["the_title_attribute","tta"],"body":"the_title_attribute( ${1:\\$args:string|array} )","description":"Sanitizes the current title when retrieving or displaying."},"ƒ: get_the_title":{"prefix":["get_the_title","gtt"],"body":"get_the_title( ${1:\\$post:int|WP_Post} )","description":"Retrieves the post title."},"ƒ: the_guid":{"prefix":["the_guid","tg"],"body":"the_guid( ${1:\\$post:int|WP_Post} )","description":"Displays the Post Global Unique Identifier (guid)."},"ƒ: get_the_guid":{"prefix":["get_the_guid","gtg"],"body":"get_the_guid( ${1:\\$post:int|WP_Post} )","description":"Retrieves the Post Global Unique Identifier (guid)."},"ƒ: the_content":{"prefix":["the_content","tc"],"body":"the_content( ${1:\\$more_link_text:string|null}, ${2:\\$strip_teaser:bool} )","description":"Displays the post content."},"ƒ: get_the_content":{"prefix":["get_the_content","gtc"],"body":"get_the_content( ${1:\\$more_link_text:string|null}, ${2:\\$strip_teaser:bool}, ${3:\\$post:WP_Post|object|int|null} )","description":"Retrieves the post content."},"ƒ: the_excerpt":{"prefix":["the_excerpt","te"],"body":"the_excerpt(  )","description":"Displays the post excerpt."},"ƒ: get_the_excerpt":{"prefix":["get_the_excerpt","gte"],"body":"get_the_excerpt( ${1:\\$post:int|WP_Post|null} )","description":"Retrieves the post excerpt."},"ƒ: has_excerpt":{"prefix":["has_excerpt","he"],"body":"has_excerpt( ${1:\\$post:int|WP_Post} )","description":"Determines whether the post has a custom excerpt."},"ƒ: post_class":{"prefix":["post_class","pc"],"body":"post_class( ${1:\\$css_class:string|string[]}, ${2:\\$post:int|WP_Post|null} )","description":"Displays the classes for the post container element."},"ƒ: get_post_class":{"prefix":["get_post_class","gpc"],"body":"get_post_class( ${1:\\$css_class:string|string[]}, ${2:\\$post:int|WP_Post|null} )","description":"Retrieves an array of the class names for the post container element."},"ƒ: body_class":{"prefix":["body_class","bc"],"body":"body_class( ${1:\\$css_class:string|string[]} )","description":"Displays the class names for the body element."},"ƒ: get_body_class":{"prefix":["get_body_class","gbc"],"body":"get_body_class( ${1:\\$css_class:string|string[]} )","description":"Retrieves an array of the class names for the body element."},"ƒ: post_password_required":{"prefix":["post_password_required","ppr"],"body":"post_password_required( ${1:\\$post:int|WP_Post|null|null} )","description":"Determines whether the post requires password and whether a correct password has been provided."},"ƒ: wp_link_pages":{"prefix":["wp_link_pages","wlp"],"body":"wp_link_pages( ${1:\\$args:string|array} )","description":"The formatted output of a list of pages."},"ƒ: post_custom":{"prefix":["post_custom","pc"],"body":"post_custom( ${1:\\$key:string} )","description":"Retrieves post custom meta data field."},"ƒ: the_meta":{"prefix":["the_meta","tm"],"body":"the_meta(  )","description":"Displays a list of post custom fields."},"ƒ: wp_dropdown_pages":{"prefix":["wp_dropdown_pages","wdp"],"body":"wp_dropdown_pages( ${1:\\$args:array|string} )","description":"Retrieves or displays a list of pages as a dropdown (select list)."},"ƒ: wp_list_pages":{"prefix":["wp_list_pages","wlp"],"body":"wp_list_pages( ${1:\\$args:array|string} )","description":"Retrieves or displays a list of pages (or hierarchical post type items) in list (li) format."},"ƒ: wp_page_menu":{"prefix":["wp_page_menu","wpm"],"body":"wp_page_menu( ${1:\\$args:array|string} )","description":"Displays or retrieves a list of pages with an optional home link."},"ƒ: walk_page_tree":{"prefix":["walk_page_tree","wpt"],"body":"walk_page_tree( ${1:\\$pages:array}, ${2:\\$depth:int}, ${3:\\$current_page:int}, ${4:\\$args:array} )","description":"Retrieves HTML list content for page list."},"ƒ: walk_page_dropdown_tree":{"prefix":["walk_page_dropdown_tree","wpdt"],"body":"walk_page_dropdown_tree( ${1:\\$args:mixed} )","description":"Retrieves HTML dropdown (select) content for page list."},"ƒ: the_attachment_link":{"prefix":["the_attachment_link","tal"],"body":"the_attachment_link( ${1:\\$post:int|WP_Post}, ${2:\\$fullsize:bool}, ${3:\\$deprecated:bool}, ${4:\\$permalink:bool} )","description":"Displays an attachment page link using an image or icon."},"ƒ: wp_get_attachment_link":{"prefix":["wp_get_attachment_link","wgal"],"body":"wp_get_attachment_link( ${1:\\$post:int|WP_Post}, ${2:\\$size:string|int[]}, ${3:\\$permalink:bool}, ${4:\\$icon:bool}, ${5:\\$text:string|false}, ${6:\\$attr:array|string} )","description":"Retrieves an attachment page link using an image or icon, if possible."},"ƒ: prepend_attachment":{"prefix":["prepend_attachment","pa"],"body":"prepend_attachment( ${1:\\$content:string} )","description":"Wraps attachment in paragraph tag before content."},"ƒ: get_the_password_form":{"prefix":["get_the_password_form","gtpf"],"body":"get_the_password_form( ${1:\\$post:int|WP_Post} )","description":"Retrieves protected post password form content."},"ƒ: is_page_template":{"prefix":["is_page_template","ipt"],"body":"is_page_template( ${1:\\$template:string|string[]} )","description":"Determines whether the current post uses a page template."},"ƒ: get_page_template_slug":{"prefix":["get_page_template_slug","gpts"],"body":"get_page_template_slug( ${1:\\$post:int|WP_Post|null} )","description":"Gets the specific template filename for a given post."},"ƒ: wp_post_revision_title":{"prefix":["wp_post_revision_title","wprt"],"body":"wp_post_revision_title( ${1:\\$revision:int|WP_Post}, ${2:\\$link:bool} )","description":"Retrieves formatted date timestamp of a revision (linked to that revisions's page)."},"ƒ: wp_post_revision_title_expanded":{"prefix":["wp_post_revision_title_expanded","wprte"],"body":"wp_post_revision_title_expanded( ${1:\\$revision:int|WP_Post}, ${2:\\$link:bool} )","description":"Retrieves formatted date timestamp of a revision (linked to that revisions's page)."},"ƒ: wp_list_post_revisions":{"prefix":["wp_list_post_revisions","wlpr"],"body":"wp_list_post_revisions( ${1:\\$post:int|WP_Post}, ${2:\\$type:string} )","description":"Displays a list of a post's revisions."},"ƒ: get_post_parent":{"prefix":["get_post_parent","gpp"],"body":"get_post_parent( ${1:\\$post:int|WP_Post|null|null} )","description":"Retrieves the parent post object for the given post."},"ƒ: has_post_parent":{"prefix":["has_post_parent","hpp"],"body":"has_post_parent( ${1:\\$post:int|WP_Post|null|null} )","description":"Returns whether the given post has a parent post."},"ƒ: has_post_thumbnail":{"prefix":["has_post_thumbnail","hpt"],"body":"has_post_thumbnail( ${1:\\$post:int|WP_Post|null|null} )","description":"Determines whether a post has an image attached."},"ƒ: get_post_thumbnail_id":{"prefix":["get_post_thumbnail_id","gpti"],"body":"get_post_thumbnail_id( ${1:\\$post:int|WP_Post|null|null} )","description":"Retrieves the post thumbnail ID."},"ƒ: the_post_thumbnail":{"prefix":["the_post_thumbnail","tpt"],"body":"the_post_thumbnail( ${1:\\$size:string|int[]}, ${2:\\$attr:string|array} )","description":"Displays the post thumbnail."},"ƒ: update_post_thumbnail_cache":{"prefix":["update_post_thumbnail_cache","uptc"],"body":"update_post_thumbnail_cache( ${1:\\$wp_query:WP_Query|null|null} )","description":"Updates cache for thumbnails in the current loop."},"ƒ: get_the_post_thumbnail":{"prefix":["get_the_post_thumbnail","gtpt"],"body":"get_the_post_thumbnail( ${1:\\$post:int|WP_Post|null|null}, ${2:\\$size:string|int[]}, ${3:\\$attr:string|array} )","description":"Retrieves the post thumbnail."},"ƒ: get_the_post_thumbnail_url":{"prefix":["get_the_post_thumbnail_url","gtptu"],"body":"get_the_post_thumbnail_url( ${1:\\$post:int|WP_Post|null|null}, ${2:\\$size:string|int[]} )","description":"Returns the post thumbnail URL."},"ƒ: the_post_thumbnail_url":{"prefix":["the_post_thumbnail_url","tptu"],"body":"the_post_thumbnail_url( ${1:\\$size:string|int[]} )","description":"Displays the post thumbnail URL."},"ƒ: get_the_post_thumbnail_caption":{"prefix":["get_the_post_thumbnail_caption","gtptc"],"body":"get_the_post_thumbnail_caption( ${1:\\$post:int|WP_Post|null|null} )","description":"Returns the post thumbnail caption."},"ƒ: the_post_thumbnail_caption":{"prefix":["the_post_thumbnail_caption","tptc"],"body":"the_post_thumbnail_caption( ${1:\\$post:int|WP_Post|null|null} )","description":"Displays the post thumbnail caption."},"ƒ: create_initial_post_types":{"prefix":["create_initial_post_types","cipt"],"body":"create_initial_post_types(  )","description":"Creates the initial post types when 'init' action is fired."},"ƒ: get_attached_file":{"prefix":["get_attached_file","gaf"],"body":"get_attached_file( ${1:\\$attachment_id:int}, ${2:\\$unfiltered:bool} )","description":"Retrieves attached file path based on attachment ID."},"ƒ: update_attached_file":{"prefix":["update_attached_file","uaf"],"body":"update_attached_file( ${1:\\$attachment_id:int}, ${2:\\$file:string} )","description":"Updates attachment file path based on attachment ID."},"ƒ: get_children":{"prefix":["get_children","gc"],"body":"get_children( ${1:\\$args:mixed}, ${2:\\$output:string} )","description":"Retrieves all children of the post parent ID."},"ƒ: get_extended":{"prefix":["get_extended","ge"],"body":"get_extended( ${1:\\$post:string} )","description":"Gets extended entry info (<!--more-->)."},"ƒ: get_post":{"prefix":["get_post","gp"],"body":"get_post( ${1:\\$post:int|WP_Post|null|null}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves post data given a post ID or post object."},"ƒ: get_post_ancestors":{"prefix":["get_post_ancestors","gpa"],"body":"get_post_ancestors( ${1:\\$post:int|WP_Post} )","description":"Retrieves the IDs of the ancestors of a post."},"ƒ: get_post_field":{"prefix":["get_post_field","gpf"],"body":"get_post_field( ${1:\\$field:string}, ${2:\\$post:int|WP_Post|null}, ${3:\\$context:string} )","description":"Retrieves data from a post field based on Post ID."},"ƒ: get_post_mime_type":{"prefix":["get_post_mime_type","gpmt"],"body":"get_post_mime_type( ${1:\\$post:int|WP_Post|null} )","description":"Retrieves the mime type of an attachment based on the ID."},"ƒ: get_post_status":{"prefix":["get_post_status","gps"],"body":"get_post_status( ${1:\\$post:int|WP_Post|null} )","description":"Retrieves the post status based on the post ID."},"ƒ: get_post_statuses":{"prefix":["get_post_statuses","gps"],"body":"get_post_statuses(  )","description":"Retrieves all of the WordPress supported post statuses."},"ƒ: get_page_statuses":{"prefix":["get_page_statuses","gps"],"body":"get_page_statuses(  )","description":"Retrieves all of the WordPress support page statuses."},"ƒ: register_post_status":{"prefix":["register_post_status","rps"],"body":"register_post_status( ${1:\\$post_status:string}, ${2:\\$args:array|string} )","description":"Registers a post status. Do not use before init."},"ƒ: get_post_status_object":{"prefix":["get_post_status_object","gpso"],"body":"get_post_status_object( ${1:\\$post_status:string} )","description":"Retrieves a post status object by name."},"ƒ: get_post_stati":{"prefix":["get_post_stati","gps"],"body":"get_post_stati( ${1:\\$args:array|string}, ${2:\\$output:string}, ${3:\\$operator:string} )","description":"Gets a list of post statuses."},"ƒ: is_post_type_hierarchical":{"prefix":["is_post_type_hierarchical","ipth"],"body":"is_post_type_hierarchical( ${1:\\$post_type:string} )","description":"Determines whether the post type is hierarchical."},"ƒ: post_type_exists":{"prefix":["post_type_exists","pte"],"body":"post_type_exists( ${1:\\$post_type:string} )","description":"Determines whether a post type is registered."},"ƒ: get_post_type":{"prefix":["get_post_type","gpt"],"body":"get_post_type( ${1:\\$post:int|WP_Post|null|null} )","description":"Retrieves the post type of the current post or of a given post."},"ƒ: get_post_type_object":{"prefix":["get_post_type_object","gpto"],"body":"get_post_type_object( ${1:\\$post_type:string} )","description":"Retrieves a post type object by name."},"ƒ: get_post_types":{"prefix":["get_post_types","gpt"],"body":"get_post_types( ${1:\\$args:array|string}, ${2:\\$output:string}, ${3:\\$operator:string} )","description":"Gets a list of all registered post type objects."},"ƒ: register_post_type":{"prefix":["register_post_type","rpt"],"body":"register_post_type( ${1:\\$post_type:string}, ${2:\\$args:array|string} )","description":"Registers a post type."},"ƒ: unregister_post_type":{"prefix":["unregister_post_type","upt"],"body":"unregister_post_type( ${1:\\$post_type:string} )","description":"Unregisters a post type."},"ƒ: get_post_type_capabilities":{"prefix":["get_post_type_capabilities","gptc"],"body":"get_post_type_capabilities( ${1:\\$args:object} )","description":"Builds an object with all post type capabilities out of a post type object"},"ƒ: add_post_type_support":{"prefix":["add_post_type_support","apts"],"body":"add_post_type_support( ${1:\\$post_type:string}, ${2:\\$feature:string|array}, ${3:\\$args:mixed} )","description":"Registers support of certain features for a post type."},"ƒ: remove_post_type_support":{"prefix":["remove_post_type_support","rpts"],"body":"remove_post_type_support( ${1:\\$post_type:string}, ${2:\\$feature:string} )","description":"Removes support for a feature from a post type."},"ƒ: get_all_post_type_supports":{"prefix":["get_all_post_type_supports","gapts"],"body":"get_all_post_type_supports( ${1:\\$post_type:string} )","description":"Gets all the post type features"},"ƒ: post_type_supports":{"prefix":["post_type_supports","pts"],"body":"post_type_supports( ${1:\\$post_type:string}, ${2:\\$feature:string} )","description":"Checks a post type's support for a given feature."},"ƒ: get_post_types_by_support":{"prefix":["get_post_types_by_support","gptbs"],"body":"get_post_types_by_support( ${1:\\$feature:array|string}, ${2:\\$operator:string} )","description":"Retrieves a list of post type names that support a specific feature."},"ƒ: set_post_type":{"prefix":["set_post_type","spt"],"body":"set_post_type( ${1:\\$post_id:int}, ${2:\\$post_type:string} )","description":"Updates the post type for the post ID."},"ƒ: is_post_type_viewable":{"prefix":["is_post_type_viewable","iptv"],"body":"is_post_type_viewable( ${1:\\$post_type:string|WP_Post_Type} )","description":"Determines whether a post type is considered \"viewable\"."},"ƒ: is_post_status_viewable":{"prefix":["is_post_status_viewable","ipsv"],"body":"is_post_status_viewable( ${1:\\$post_status:string|stdClass} )","description":"Determines whether a post status is considered \"viewable\"."},"ƒ: is_post_publicly_viewable":{"prefix":["is_post_publicly_viewable","ippv"],"body":"is_post_publicly_viewable( ${1:\\$post:int|WP_Post|null|null} )","description":"Determines whether a post is publicly viewable."},"ƒ: is_post_embeddable":{"prefix":["is_post_embeddable","ipe"],"body":"is_post_embeddable( ${1:\\$post:int|WP_Post|null|null} )","description":"Determines whether a post is embeddable."},"ƒ: get_posts":{"prefix":["get_posts","gp"],"body":"get_posts( ${1:\\$args:array|null} )","description":"Retrieves an array of the latest posts, or posts matching the given criteria."},"ƒ: add_post_meta":{"prefix":["add_post_meta","apm"],"body":"add_post_meta( ${1:\\$post_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$unique:bool} )","description":"Adds a meta field to the given post."},"ƒ: delete_post_meta":{"prefix":["delete_post_meta","dpm"],"body":"delete_post_meta( ${1:\\$post_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Deletes a post meta field for the given post ID."},"ƒ: get_post_meta":{"prefix":["get_post_meta","gpm"],"body":"get_post_meta( ${1:\\$post_id:int}, ${2:\\$key:string}, ${3:\\$single:bool} )","description":"Retrieves a post meta field for the given post ID."},"ƒ: update_post_meta":{"prefix":["update_post_meta","upm"],"body":"update_post_meta( ${1:\\$post_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$prev_value:mixed} )","description":"Updates a post meta field based on the given post ID."},"ƒ: delete_post_meta_by_key":{"prefix":["delete_post_meta_by_key","dpmbk"],"body":"delete_post_meta_by_key( ${1:\\$post_meta_key:string} )","description":"Deletes everything from post meta matching the given meta key."},"ƒ: register_post_meta":{"prefix":["register_post_meta","rpm"],"body":"register_post_meta( ${1:\\$post_type:string}, ${2:\\$meta_key:string}, ${3:\\$args:array} )","description":"Registers a meta key for posts."},"ƒ: unregister_post_meta":{"prefix":["unregister_post_meta","upm"],"body":"unregister_post_meta( ${1:\\$post_type:string}, ${2:\\$meta_key:string} )","description":"Unregisters a meta key for posts."},"ƒ: get_post_custom":{"prefix":["get_post_custom","gpc"],"body":"get_post_custom( ${1:\\$post_id:int} )","description":"Retrieves post meta fields, based on post ID."},"ƒ: get_post_custom_keys":{"prefix":["get_post_custom_keys","gpck"],"body":"get_post_custom_keys( ${1:\\$post_id:int} )","description":"Retrieves meta field names for a post."},"ƒ: get_post_custom_values":{"prefix":["get_post_custom_values","gpcv"],"body":"get_post_custom_values( ${1:\\$key:string}, ${2:\\$post_id:int} )","description":"Retrieves values for a custom post field."},"ƒ: is_sticky":{"prefix":["is_sticky","is"],"body":"is_sticky( ${1:\\$post_id:int} )","description":"Determines whether a post is sticky."},"ƒ: sanitize_post":{"prefix":["sanitize_post","sp"],"body":"sanitize_post( ${1:\\$post:object|WP_Post|array}, ${2:\\$context:string} )","description":"Sanitizes every post field."},"ƒ: sanitize_post_field":{"prefix":["sanitize_post_field","spf"],"body":"sanitize_post_field( ${1:\\$field:string}, ${2:\\$value:mixed}, ${3:\\$post_id:int}, ${4:\\$context:string} )","description":"Sanitizes a post field based on context."},"ƒ: stick_post":{"prefix":["stick_post","sp"],"body":"stick_post( ${1:\\$post_id:int} )","description":"Makes a post sticky."},"ƒ: unstick_post":{"prefix":["unstick_post","up"],"body":"unstick_post( ${1:\\$post_id:int} )","description":"Un-sticks a post."},"ƒ: wp_count_posts":{"prefix":["wp_count_posts","wcp"],"body":"wp_count_posts( ${1:\\$type:string}, ${2:\\$perm:string} )","description":"Counts number of posts of a post type and if user has permissions to view."},"ƒ: wp_count_attachments":{"prefix":["wp_count_attachments","wca"],"body":"wp_count_attachments( ${1:\\$mime_type:string|string[]} )","description":"Counts number of attachments for the mime type(s)."},"ƒ: get_post_mime_types":{"prefix":["get_post_mime_types","gpmt"],"body":"get_post_mime_types(  )","description":"Gets default post mime types."},"ƒ: wp_match_mime_types":{"prefix":["wp_match_mime_types","wmmt"],"body":"wp_match_mime_types( ${1:\\$wildcard_mime_types:string|string[]}, ${2:\\$real_mime_types:string|string[]} )","description":"Checks a MIME-Type against a list."},"ƒ: wp_post_mime_type_where":{"prefix":["wp_post_mime_type_where","wpmtw"],"body":"wp_post_mime_type_where( ${1:\\$post_mime_types:string|string[]}, ${2:\\$table_alias:string} )","description":"Converts MIME types into SQL."},"ƒ: wp_delete_post":{"prefix":["wp_delete_post","wdp"],"body":"wp_delete_post( ${1:\\$post_id:int}, ${2:\\$force_delete:bool} )","description":"Trashes or deletes a post or page."},"ƒ: wp_trash_post":{"prefix":["wp_trash_post","wtp"],"body":"wp_trash_post( ${1:\\$post_id:int} )","description":"Moves a post or page to the Trash"},"ƒ: wp_untrash_post":{"prefix":["wp_untrash_post","wup"],"body":"wp_untrash_post( ${1:\\$post_id:int} )","description":"Restores a post from the Trash."},"ƒ: wp_trash_post_comments":{"prefix":["wp_trash_post_comments","wtpc"],"body":"wp_trash_post_comments( ${1:\\$post:int|WP_Post|null|null} )","description":"Moves comments for a post to the Trash."},"ƒ: wp_untrash_post_comments":{"prefix":["wp_untrash_post_comments","wupc"],"body":"wp_untrash_post_comments( ${1:\\$post:int|WP_Post|null|null} )","description":"Restores comments for a post from the Trash."},"ƒ: wp_get_post_categories":{"prefix":["wp_get_post_categories","wgpc"],"body":"wp_get_post_categories( ${1:\\$post_id:int}, ${2:\\$args:array} )","description":"Retrieves the list of categories for a post."},"ƒ: wp_get_post_tags":{"prefix":["wp_get_post_tags","wgpt"],"body":"wp_get_post_tags( ${1:\\$post_id:int}, ${2:\\$args:array} )","description":"Retrieves the tags for a post."},"ƒ: wp_get_post_terms":{"prefix":["wp_get_post_terms","wgpt"],"body":"wp_get_post_terms( ${1:\\$post_id:int}, ${2:\\$taxonomy:string|string[]}, ${3:\\$args:array} )","description":"Retrieves the terms for a post."},"ƒ: wp_get_recent_posts":{"prefix":["wp_get_recent_posts","wgrp"],"body":"wp_get_recent_posts( ${1:\\$args:array}, ${2:\\$output:string} )","description":"Retrieves a number of recent posts."},"ƒ: wp_insert_post":{"prefix":["wp_insert_post","wip"],"body":"wp_insert_post( ${1:\\$postarr:array}, ${2:\\$wp_error:bool}, ${3:\\$fire_after_hooks:bool} )","description":"Inserts or update a post."},"ƒ: wp_update_post":{"prefix":["wp_update_post","wup"],"body":"wp_update_post( ${1:\\$postarr:array|object}, ${2:\\$wp_error:bool}, ${3:\\$fire_after_hooks:bool} )","description":"Updates a post with new post data."},"ƒ: wp_publish_post":{"prefix":["wp_publish_post","wpp"],"body":"wp_publish_post( ${1:\\$post:int|WP_Post} )","description":"Publishes a post by transitioning the post status."},"ƒ: check_and_publish_future_post":{"prefix":["check_and_publish_future_post","capfp"],"body":"check_and_publish_future_post( ${1:\\$post:int|WP_Post} )","description":"Publishes future post and make sure post ID has future post status."},"ƒ: wp_resolve_post_date":{"prefix":["wp_resolve_post_date","wrpd"],"body":"wp_resolve_post_date( ${1:\\$post_date:string}, ${2:\\$post_date_gmt:string} )","description":"Uses wp_checkdate to return a valid Gregorian-calendar value for post_date."},"ƒ: wp_unique_post_slug":{"prefix":["wp_unique_post_slug","wups"],"body":"wp_unique_post_slug( ${1:\\$slug:string}, ${2:\\$post_id:int}, ${3:\\$post_status:string}, ${4:\\$post_type:string}, ${5:\\$post_parent:int} )","description":"Computes a unique slug for the post, when given the desired slug and some post details."},"ƒ: wp_add_post_tags":{"prefix":["wp_add_post_tags","wapt"],"body":"wp_add_post_tags( ${1:\\$post_id:int}, ${2:\\$tags:string|array} )","description":"Adds tags to a post."},"ƒ: wp_set_post_tags":{"prefix":["wp_set_post_tags","wspt"],"body":"wp_set_post_tags( ${1:\\$post_id:int}, ${2:\\$tags:string|array}, ${3:\\$append:bool} )","description":"Sets the tags for a post."},"ƒ: wp_set_post_terms":{"prefix":["wp_set_post_terms","wspt"],"body":"wp_set_post_terms( ${1:\\$post_id:int}, ${2:\\$terms:string|array}, ${3:\\$taxonomy:string}, ${4:\\$append:bool} )","description":"Sets the terms for a post."},"ƒ: wp_set_post_categories":{"prefix":["wp_set_post_categories","wspc"],"body":"wp_set_post_categories( ${1:\\$post_id:int}, ${2:\\$post_categories:int[]|int}, ${3:\\$append:bool} )","description":"Sets categories for a post."},"ƒ: wp_transition_post_status":{"prefix":["wp_transition_post_status","wtps"],"body":"wp_transition_post_status( ${1:\\$new_status:string}, ${2:\\$old_status:string}, ${3:\\$post:WP_Post} )","description":"Fires actions related to the transitioning of a post's status."},"ƒ: wp_after_insert_post":{"prefix":["wp_after_insert_post","waip"],"body":"wp_after_insert_post( ${1:\\$post:int|WP_Post}, ${2:\\$update:bool}, ${3:\\$post_before:null|WP_Post} )","description":"Fires actions after a post, its terms and meta data has been saved."},"ƒ: add_ping":{"prefix":["add_ping","ap"],"body":"add_ping( ${1:\\$post:int|WP_Post}, ${2:\\$uri:string|array} )","description":"Adds a URL to those already pinged."},"ƒ: get_enclosed":{"prefix":["get_enclosed","ge"],"body":"get_enclosed( ${1:\\$post_id:int} )","description":"Retrieves enclosures already enclosed for a post."},"ƒ: get_pung":{"prefix":["get_pung","gp"],"body":"get_pung( ${1:\\$post:int|WP_Post} )","description":"Retrieves URLs already pinged for a post."},"ƒ: get_to_ping":{"prefix":["get_to_ping","gtp"],"body":"get_to_ping( ${1:\\$post:int|WP_Post} )","description":"Retrieves URLs that need to be pinged."},"ƒ: trackback_url_list":{"prefix":["trackback_url_list","tul"],"body":"trackback_url_list( ${1:\\$tb_list:string}, ${2:\\$post_id:int} )","description":"Does trackbacks for a list of URLs."},"ƒ: get_all_page_ids":{"prefix":["get_all_page_ids","gapi"],"body":"get_all_page_ids(  )","description":"Gets a list of page IDs."},"ƒ: get_page":{"prefix":["get_page","gp"],"body":"get_page( ${1:\\$page:int|WP_Post}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Retrieves page data given a page ID or page object."},"ƒ: get_page_by_path":{"prefix":["get_page_by_path","gpbp"],"body":"get_page_by_path( ${1:\\$page_path:string}, ${2:\\$output:string}, ${3:\\$post_type:string|array} )","description":"Retrieves a page given its path."},"ƒ: get_page_children":{"prefix":["get_page_children","gpc"],"body":"get_page_children( ${1:\\$page_id:int}, ${2:\\$pages:WP_Post[]} )","description":"Identifies descendants of a given page ID in a list of page objects."},"ƒ: get_page_hierarchy":{"prefix":["get_page_hierarchy","gph"],"body":"get_page_hierarchy( ${1:\\$pages:WP_Post[]}, ${2:\\$page_id:int} )","description":"Orders the pages with children under parents in a flat list."},"ƒ: get_page_uri":{"prefix":["get_page_uri","gpu"],"body":"get_page_uri( ${1:\\$page:WP_Post|object|int} )","description":"Builds the URI path for a page."},"ƒ: get_pages":{"prefix":["get_pages","gp"],"body":"get_pages( ${1:\\$args:array|string} )","description":"Retrieves an array of pages (or hierarchical post type items)."},"ƒ: is_local_attachment":{"prefix":["is_local_attachment","ila"],"body":"is_local_attachment( ${1:\\$url:string} )","description":"Determines whether an attachment URI is local and really an attachment."},"ƒ: wp_insert_attachment":{"prefix":["wp_insert_attachment","wia"],"body":"wp_insert_attachment( ${1:\\$args:string|array}, ${2:\\$file:string|false}, ${3:\\$parent_post_id:int}, ${4:\\$wp_error:bool}, ${5:\\$fire_after_hooks:bool} )","description":"Inserts an attachment."},"ƒ: wp_delete_attachment":{"prefix":["wp_delete_attachment","wda"],"body":"wp_delete_attachment( ${1:\\$post_id:int}, ${2:\\$force_delete:bool} )","description":"Trashes or deletes an attachment."},"ƒ: wp_delete_attachment_files":{"prefix":["wp_delete_attachment_files","wdaf"],"body":"wp_delete_attachment_files( ${1:\\$post_id:int}, ${2:\\$meta:array}, ${3:\\$backup_sizes:array}, ${4:\\$file:string} )","description":"Deletes all files that belong to the given attachment."},"ƒ: wp_get_attachment_metadata":{"prefix":["wp_get_attachment_metadata","wgam"],"body":"wp_get_attachment_metadata( ${1:\\$attachment_id:int}, ${2:\\$unfiltered:bool} )","description":"Retrieves attachment metadata for attachment ID."},"ƒ: wp_update_attachment_metadata":{"prefix":["wp_update_attachment_metadata","wuam"],"body":"wp_update_attachment_metadata( ${1:\\$attachment_id:int}, ${2:\\$data:array} )","description":"Updates metadata for an attachment."},"ƒ: wp_get_attachment_url":{"prefix":["wp_get_attachment_url","wgau"],"body":"wp_get_attachment_url( ${1:\\$attachment_id:int} )","description":"Retrieves the URL for an attachment."},"ƒ: wp_get_attachment_caption":{"prefix":["wp_get_attachment_caption","wgac"],"body":"wp_get_attachment_caption( ${1:\\$post_id:int} )","description":"Retrieves the caption for an attachment."},"ƒ: wp_get_attachment_thumb_url":{"prefix":["wp_get_attachment_thumb_url","wgatu"],"body":"wp_get_attachment_thumb_url( ${1:\\$post_id:int} )","description":"Retrieves URL for an attachment thumbnail."},"ƒ: wp_attachment_is":{"prefix":["wp_attachment_is","wai"],"body":"wp_attachment_is( ${1:\\$type:string}, ${2:\\$post:int|WP_Post|null} )","description":"Verifies an attachment is of a given type."},"ƒ: wp_attachment_is_image":{"prefix":["wp_attachment_is_image","waii"],"body":"wp_attachment_is_image( ${1:\\$post:int|WP_Post|null} )","description":"Determines whether an attachment is an image."},"ƒ: wp_mime_type_icon":{"prefix":["wp_mime_type_icon","wmti"],"body":"wp_mime_type_icon( ${1:\\$mime:string|int}, ${2:\\$preferred_ext:string} )","description":"Retrieves the icon for a MIME type or attachment."},"ƒ: wp_check_for_changed_slugs":{"prefix":["wp_check_for_changed_slugs","wcfcs"],"body":"wp_check_for_changed_slugs( ${1:\\$post_id:int}, ${2:\\$post:WP_Post}, ${3:\\$post_before:WP_Post} )","description":"Checks for changed slugs for published post objects and save the old slug."},"ƒ: wp_check_for_changed_dates":{"prefix":["wp_check_for_changed_dates","wcfcd"],"body":"wp_check_for_changed_dates( ${1:\\$post_id:int}, ${2:\\$post:WP_Post}, ${3:\\$post_before:WP_Post} )","description":"Checks for changed dates for published post objects and save the old date."},"ƒ: get_private_posts_cap_sql":{"prefix":["get_private_posts_cap_sql","gppcs"],"body":"get_private_posts_cap_sql( ${1:\\$post_type:string|array} )","description":"Retrieves the private post SQL based on capability."},"ƒ: get_posts_by_author_sql":{"prefix":["get_posts_by_author_sql","gpbas"],"body":"get_posts_by_author_sql( ${1:\\$post_type:string|string[]}, ${2:\\$full:bool}, ${3:\\$post_author:int|null}, ${4:\\$public_only:bool} )","description":"Retrieves the post SQL based on capability, author, and type."},"ƒ: get_lastpostdate":{"prefix":["get_lastpostdate","gl"],"body":"get_lastpostdate( ${1:\\$timezone:string}, ${2:\\$post_type:string} )","description":"Retrieves the most recent time that a post on the site was published."},"ƒ: get_lastpostmodified":{"prefix":["get_lastpostmodified","gl"],"body":"get_lastpostmodified( ${1:\\$timezone:string}, ${2:\\$post_type:string} )","description":"Gets the most recent time that a post on the site was modified."},"ƒ: update_post_cache":{"prefix":["update_post_cache","upc"],"body":"update_post_cache( ${1:\\$posts:WP_Post[]} )","description":"Updates posts in cache."},"ƒ: clean_post_cache":{"prefix":["clean_post_cache","cpc"],"body":"clean_post_cache( ${1:\\$post:int|WP_Post} )","description":"Will clean the post in the cache."},"ƒ: update_post_caches":{"prefix":["update_post_caches","upc"],"body":"update_post_caches( ${1:\\$posts:WP_Post[]}, ${2:\\$post_type:string}, ${3:\\$update_term_cache:bool}, ${4:\\$update_meta_cache:bool} )","description":"Updates post, term, and metadata caches for a list of post objects."},"ƒ: update_post_author_caches":{"prefix":["update_post_author_caches","upac"],"body":"update_post_author_caches( ${1:\\$posts:WP_Post[]} )","description":"Updates post author user caches for a list of post objects."},"ƒ: update_post_parent_caches":{"prefix":["update_post_parent_caches","uppc"],"body":"update_post_parent_caches( ${1:\\$posts:WP_Post[]} )","description":"Updates parent post caches for a list of post objects."},"ƒ: update_postmeta_cache":{"prefix":["update_postmeta_cache","upc"],"body":"update_postmeta_cache( ${1:\\$post_ids:int[]} )","description":"Updates metadata cache for a list of post IDs."},"ƒ: clean_attachment_cache":{"prefix":["clean_attachment_cache","cac"],"body":"clean_attachment_cache( ${1:\\$id:int}, ${2:\\$clean_terms:bool} )","description":"Will clean the attachment in the cache."},"ƒ: wp_get_post_parent_id":{"prefix":["wp_get_post_parent_id","wgppi"],"body":"wp_get_post_parent_id( ${1:\\$post:int|WP_Post|null|null} )","description":"Returns the ID of the post's parent."},"ƒ: wp_check_post_hierarchy_for_loops":{"prefix":["wp_check_post_hierarchy_for_loops","wcphfl"],"body":"wp_check_post_hierarchy_for_loops( ${1:\\$post_parent:int}, ${2:\\$post_id:int} )","description":"Checks the given subset of the post hierarchy for hierarchy loops."},"ƒ: set_post_thumbnail":{"prefix":["set_post_thumbnail","spt"],"body":"set_post_thumbnail( ${1:\\$post:int|WP_Post}, ${2:\\$thumbnail_id:int} )","description":"Sets the post thumbnail (featured image) for the given post."},"ƒ: delete_post_thumbnail":{"prefix":["delete_post_thumbnail","dpt"],"body":"delete_post_thumbnail( ${1:\\$post:int|WP_Post} )","description":"Removes the thumbnail (featured image) from the given post."},"ƒ: wp_delete_auto_drafts":{"prefix":["wp_delete_auto_drafts","wdad"],"body":"wp_delete_auto_drafts(  )","description":"Deletes auto-drafts for new posts that are > 7 days old."},"ƒ: wp_queue_posts_for_term_meta_lazyload":{"prefix":["wp_queue_posts_for_term_meta_lazyload","wqpftml"],"body":"wp_queue_posts_for_term_meta_lazyload( ${1:\\$posts:WP_Post[]} )","description":"Queues posts for lazy-loading of term meta."},"ƒ: wp_cache_set_posts_last_changed":{"prefix":["wp_cache_set_posts_last_changed","wcsplc"],"body":"wp_cache_set_posts_last_changed(  )","description":"Sets the last changed time for the 'posts' cache group."},"ƒ: get_available_post_mime_types":{"prefix":["get_available_post_mime_types","gapmt"],"body":"get_available_post_mime_types( ${1:\\$type:string} )","description":"Gets all available post MIME types for a given post type."},"ƒ: wp_get_original_image_path":{"prefix":["wp_get_original_image_path","wgoip"],"body":"wp_get_original_image_path( ${1:\\$attachment_id:int}, ${2:\\$unfiltered:bool} )","description":"Retrieves the path to an uploaded image file."},"ƒ: wp_get_original_image_url":{"prefix":["wp_get_original_image_url","wgoiu"],"body":"wp_get_original_image_url( ${1:\\$attachment_id:int} )","description":"Retrieves the URL to an original attachment image."},"ƒ: wp_untrash_post_set_previous_status":{"prefix":["wp_untrash_post_set_previous_status","wupsps"],"body":"wp_untrash_post_set_previous_status( ${1:\\$new_status:string}, ${2:\\$post_id:int}, ${3:\\$previous_status:string} )","description":"Filters callback which sets the status of an untrashed post to its previous status."},"ƒ: use_block_editor_for_post":{"prefix":["use_block_editor_for_post","ubefp"],"body":"use_block_editor_for_post( ${1:\\$post:int|WP_Post} )","description":"Returns whether the post can be edited in the block editor."},"ƒ: use_block_editor_for_post_type":{"prefix":["use_block_editor_for_post_type","ubefpt"],"body":"use_block_editor_for_post_type( ${1:\\$post_type:string} )","description":"Returns whether a post type is compatible with the block editor."},"ƒ: wp_create_initial_post_meta":{"prefix":["wp_create_initial_post_meta","wcipm"],"body":"wp_create_initial_post_meta(  )","description":"Registers any additional post meta fields."},"ƒ: get_query_var":{"prefix":["get_query_var","gqv"],"body":"get_query_var( ${1:\\$query_var:string}, ${2:\\$default_value:mixed} )","description":"Retrieves the value of a query variable in the WP_Query class."},"ƒ: get_queried_object":{"prefix":["get_queried_object","gqo"],"body":"get_queried_object(  )","description":"Retrieves the currently queried object."},"ƒ: get_queried_object_id":{"prefix":["get_queried_object_id","gqoi"],"body":"get_queried_object_id(  )","description":"Retrieves the ID of the currently queried object."},"ƒ: set_query_var":{"prefix":["set_query_var","sqv"],"body":"set_query_var( ${1:\\$query_var:string}, ${2:\\$value:mixed} )","description":"Sets the value of a query variable in the WP_Query class."},"ƒ: query_posts":{"prefix":["query_posts","qp"],"body":"query_posts( ${1:\\$query:array|string} )","description":"Sets up The Loop with query parameters."},"ƒ: wp_reset_query":{"prefix":["wp_reset_query","wrq"],"body":"wp_reset_query(  )","description":"Destroys the previous query and sets up a new query."},"ƒ: wp_reset_postdata":{"prefix":["wp_reset_postdata","wrp"],"body":"wp_reset_postdata(  )","description":"After looping through a separate query, this function restores the $post global to the current post in the main query."},"ƒ: is_archive":{"prefix":["is_archive","ia"],"body":"is_archive(  )","description":"Determines whether the query is for an existing archive page."},"ƒ: is_post_type_archive":{"prefix":["is_post_type_archive","ipta"],"body":"is_post_type_archive( ${1:\\$post_types:string|string[]} )","description":"Determines whether the query is for an existing post type archive page."},"ƒ: is_attachment":{"prefix":["is_attachment","ia"],"body":"is_attachment( ${1:\\$attachment:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing attachment page."},"ƒ: is_author":{"prefix":["is_author","ia"],"body":"is_author( ${1:\\$author:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing author archive page."},"ƒ: is_category":{"prefix":["is_category","ic"],"body":"is_category( ${1:\\$category:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing category archive page."},"ƒ: is_tag":{"prefix":["is_tag","it"],"body":"is_tag( ${1:\\$tag:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing tag archive page."},"ƒ: is_tax":{"prefix":["is_tax","it"],"body":"is_tax( ${1:\\$taxonomy:string|string[]}, ${2:\\$term:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing custom taxonomy archive page."},"ƒ: is_date":{"prefix":["is_date","id"],"body":"is_date(  )","description":"Determines whether the query is for an existing date archive."},"ƒ: is_day":{"prefix":["is_day","id"],"body":"is_day(  )","description":"Determines whether the query is for an existing day archive."},"ƒ: is_feed":{"prefix":["is_feed"],"body":"is_feed( ${1:\\$feeds:string|string[]} )","description":"Determines whether the query is for a feed."},"ƒ: is_comment_feed":{"prefix":["is_comment_feed","icf"],"body":"is_comment_feed(  )","description":"Is the query for a comments feed?"},"ƒ: is_front_page":{"prefix":["is_front_page","ifp"],"body":"is_front_page(  )","description":"Determines whether the query is for the front page of the site."},"ƒ: is_home":{"prefix":["is_home","ih"],"body":"is_home(  )","description":"Determines whether the query is for the blog homepage."},"ƒ: is_privacy_policy":{"prefix":["is_privacy_policy","ipp"],"body":"is_privacy_policy(  )","description":"Determines whether the query is for the Privacy Policy page."},"ƒ: is_month":{"prefix":["is_month","im"],"body":"is_month(  )","description":"Determines whether the query is for an existing month archive."},"ƒ: is_page":{"prefix":["is_page","ip"],"body":"is_page( ${1:\\$page:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing single page."},"ƒ: is_paged":{"prefix":["is_paged","ip"],"body":"is_paged(  )","description":"Determines whether the query is for a paged result and not for the first page."},"ƒ: is_preview":{"prefix":["is_preview","ip"],"body":"is_preview(  )","description":"Determines whether the query is for a post or page preview."},"ƒ: is_robots":{"prefix":["is_robots","ir"],"body":"is_robots(  )","description":"Is the query for the robots.txt file?"},"ƒ: is_favicon":{"prefix":["is_favicon"],"body":"is_favicon(  )","description":"Is the query for the favicon.ico file?"},"ƒ: is_search":{"prefix":["is_search","is"],"body":"is_search(  )","description":"Determines whether the query is for a search."},"ƒ: is_single":{"prefix":["is_single","is"],"body":"is_single( ${1:\\$post:int|string|int[]|string[]} )","description":"Determines whether the query is for an existing single post."},"ƒ: is_singular":{"prefix":["is_singular","is"],"body":"is_singular( ${1:\\$post_types:string|string[]} )","description":"Determines whether the query is for an existing single post of any post type (post, attachment, page, custom post types)."},"ƒ: is_time":{"prefix":["is_time","it"],"body":"is_time(  )","description":"Determines whether the query is for a specific time."},"ƒ: is_trackback":{"prefix":["is_trackback","it"],"body":"is_trackback(  )","description":"Determines whether the query is for a trackback endpoint call."},"ƒ: is_year":{"prefix":["is_year","iy"],"body":"is_year(  )","description":"Determines whether the query is for an existing year archive."},"ƒ: is_404":{"prefix":["is_404","i4"],"body":"is_404(  )","description":"Determines whether the query has resulted in a 404 (returns no results)."},"ƒ: is_embed":{"prefix":["is_embed","ie"],"body":"is_embed(  )","description":"Is the query for an embedded post?"},"ƒ: is_main_query":{"prefix":["is_main_query","imq"],"body":"is_main_query(  )","description":"Determines whether the query is the main query."},"ƒ: have_posts":{"prefix":["have_posts","hp"],"body":"have_posts(  )","description":"Determines whether current WordPress query has posts to loop over."},"ƒ: in_the_loop":{"prefix":["in_the_loop","itl"],"body":"in_the_loop(  )","description":"Determines whether the caller is in the Loop."},"ƒ: rewind_posts":{"prefix":["rewind_posts","rp"],"body":"rewind_posts(  )","description":"Rewind the loop posts."},"ƒ: the_post":{"prefix":["the_post","tp"],"body":"the_post(  )","description":"Iterate the post index in the loop."},"ƒ: have_comments":{"prefix":["have_comments","hc"],"body":"have_comments(  )","description":"Determines whether current WordPress query has comments to loop over."},"ƒ: the_comment":{"prefix":["the_comment","tc"],"body":"the_comment(  )","description":"Iterate comment index in the comment loop."},"ƒ: wp_old_slug_redirect":{"prefix":["wp_old_slug_redirect","wosr"],"body":"wp_old_slug_redirect(  )","description":"Redirect old slugs to the correct permalink."},"ƒ: setup_postdata":{"prefix":["setup_postdata","sp"],"body":"setup_postdata( ${1:\\$post:WP_Post|object|int} )","description":"Set up global post data."},"ƒ: generate_postdata":{"prefix":["generate_postdata","gp"],"body":"generate_postdata( ${1:\\$post:WP_Post|object|int} )","description":"Generates post data."},"ƒ: register_rest_route":{"prefix":["register_rest_route","rrr"],"body":"register_rest_route( ${1:\\$route_namespace:string}, ${2:\\$route:string}, ${3:\\$args:array}, ${4:\\$override:bool} )","description":"Registers a REST API route."},"ƒ: register_rest_field":{"prefix":["register_rest_field","rrf"],"body":"register_rest_field( ${1:\\$object_type:string|array}, ${2:\\$attribute:string}, ${3:\\$args:array} )","description":"Registers a new field on an existing WordPress object type."},"ƒ: rest_api_init":{"prefix":["rest_api_init","rai"],"body":"rest_api_init(  )","description":"Registers rewrite rules for the REST API."},"ƒ: rest_api_register_rewrites":{"prefix":["rest_api_register_rewrites","rarr"],"body":"rest_api_register_rewrites(  )","description":"Adds REST rewrite rules."},"ƒ: rest_api_default_filters":{"prefix":["rest_api_default_filters","radf"],"body":"rest_api_default_filters(  )","description":"Registers the default REST API filters."},"ƒ: create_initial_rest_routes":{"prefix":["create_initial_rest_routes","cirr"],"body":"create_initial_rest_routes(  )","description":"Registers default REST API routes."},"ƒ: rest_api_loaded":{"prefix":["rest_api_loaded","ral"],"body":"rest_api_loaded(  )","description":"Loads the REST API."},"ƒ: rest_get_url_prefix":{"prefix":["rest_get_url_prefix","rgup"],"body":"rest_get_url_prefix(  )","description":"Retrieves the URL prefix for any API resource."},"ƒ: get_rest_url":{"prefix":["get_rest_url","gru"],"body":"get_rest_url( ${1:\\$blog_id:int|null|null}, ${2:\\$path:string}, ${3:\\$scheme:string} )","description":"Retrieves the URL to a REST endpoint on a site."},"ƒ: rest_url":{"prefix":["rest_url","ru"],"body":"rest_url( ${1:\\$path:string}, ${2:\\$scheme:string} )","description":"Retrieves the URL to a REST endpoint."},"ƒ: rest_do_request":{"prefix":["rest_do_request","rdr"],"body":"rest_do_request( ${1:\\$request:WP_REST_Request|string} )","description":"Do a REST request."},"ƒ: rest_get_server":{"prefix":["rest_get_server","rgs"],"body":"rest_get_server(  )","description":"Retrieves the current REST server instance."},"ƒ: rest_ensure_request":{"prefix":["rest_ensure_request","rer"],"body":"rest_ensure_request( ${1:\\$request:array|string|WP_REST_Request} )","description":"Ensures request arguments are a request object (for consistency)."},"ƒ: rest_ensure_response":{"prefix":["rest_ensure_response","rer"],"body":"rest_ensure_response( ${1:\\$response:WP_REST_Response|WP_Error|WP_HTTP_Response|mixed} )","description":"Ensures a REST response is a response object (for consistency)."},"ƒ: rest_handle_deprecated_function":{"prefix":["rest_handle_deprecated_function","rhdf"],"body":"rest_handle_deprecated_function( ${1:\\$function_name:string}, ${2:\\$replacement:string}, ${3:\\$version:string} )","description":"Handles _deprecated_function() errors."},"ƒ: rest_handle_deprecated_argument":{"prefix":["rest_handle_deprecated_argument","rhda"],"body":"rest_handle_deprecated_argument( ${1:\\$function_name:string}, ${2:\\$message:string}, ${3:\\$version:string} )","description":"Handles _deprecated_argument() errors."},"ƒ: rest_handle_doing_it_wrong":{"prefix":["rest_handle_doing_it_wrong","rhdiw"],"body":"rest_handle_doing_it_wrong( ${1:\\$function_name:string}, ${2:\\$message:string}, ${3:\\$version:string|null} )","description":"Handles _doing_it_wrong errors."},"ƒ: rest_send_cors_headers":{"prefix":["rest_send_cors_headers","rsch"],"body":"rest_send_cors_headers( ${1:\\$value:mixed} )","description":"Sends Cross-Origin Resource Sharing headers with API requests."},"ƒ: rest_handle_options_request":{"prefix":["rest_handle_options_request","rhor"],"body":"rest_handle_options_request( ${1:\\$response:mixed}, ${2:\\$handler:WP_REST_Server}, ${3:\\$request:WP_REST_Request} )","description":"Handles OPTIONS requests for the server."},"ƒ: rest_send_allow_header":{"prefix":["rest_send_allow_header","rsah"],"body":"rest_send_allow_header( ${1:\\$response:WP_REST_Response}, ${2:\\$server:WP_REST_Server}, ${3:\\$request:WP_REST_Request} )","description":"Sends the \"Allow\" header to state all methods that can be sent to the current route."},"ƒ: rest_filter_response_fields":{"prefix":["rest_filter_response_fields","rfrf"],"body":"rest_filter_response_fields( ${1:\\$response:WP_REST_Response}, ${2:\\$server:WP_REST_Server}, ${3:\\$request:WP_REST_Request} )","description":"Filters the REST API response to include only an allow-listed set of response object fields."},"ƒ: rest_is_field_included":{"prefix":["rest_is_field_included","rifi"],"body":"rest_is_field_included( ${1:\\$field:string}, ${2:\\$fields:array} )","description":"Given an array of fields to include in a response, some of which may be `nested.fields`, determine whether the provided field should be included in the response body."},"ƒ: rest_output_rsd":{"prefix":["rest_output_rsd","ror"],"body":"rest_output_rsd(  )","description":"Adds the REST API URL to the WP RSD endpoint."},"ƒ: rest_output_link_wp_head":{"prefix":["rest_output_link_wp_head","rolwh"],"body":"rest_output_link_wp_head(  )","description":"Outputs the REST API link tag into page header."},"ƒ: rest_output_link_header":{"prefix":["rest_output_link_header","rolh"],"body":"rest_output_link_header(  )","description":"Sends a Link header for the REST API."},"ƒ: rest_cookie_check_errors":{"prefix":["rest_cookie_check_errors","rcce"],"body":"rest_cookie_check_errors( ${1:\\$result:WP_Error|mixed} )","description":"Checks for errors when using cookie-based authentication."},"ƒ: rest_cookie_collect_status":{"prefix":["rest_cookie_collect_status","rccs"],"body":"rest_cookie_collect_status(  )","description":"Collects cookie authentication status."},"ƒ: rest_application_password_collect_status":{"prefix":["rest_application_password_collect_status","rapcs"],"body":"rest_application_password_collect_status( ${1:\\$user_or_error:WP_Error}, ${2:\\$app_password:array} )","description":"Collects the status of authenticating with an application password."},"ƒ: rest_get_authenticated_app_password":{"prefix":["rest_get_authenticated_app_password","rgaap"],"body":"rest_get_authenticated_app_password(  )","description":"Gets the Application Password used for authenticating the request."},"ƒ: rest_application_password_check_errors":{"prefix":["rest_application_password_check_errors","rapce"],"body":"rest_application_password_check_errors( ${1:\\$result:WP_Error|null|true} )","description":"Checks for errors when using application password-based authentication."},"ƒ: rest_add_application_passwords_to_index":{"prefix":["rest_add_application_passwords_to_index","raapti"],"body":"rest_add_application_passwords_to_index( ${1:\\$response:WP_REST_Response} )","description":"Adds Application Passwords info to the REST API index."},"ƒ: rest_get_avatar_urls":{"prefix":["rest_get_avatar_urls","rgau"],"body":"rest_get_avatar_urls( ${1:\\$id_or_email:mixed} )","description":"Retrieves the avatar URLs in various sizes."},"ƒ: rest_get_avatar_sizes":{"prefix":["rest_get_avatar_sizes","rgas"],"body":"rest_get_avatar_sizes(  )","description":"Retrieves the pixel sizes for avatars."},"ƒ: rest_parse_date":{"prefix":["rest_parse_date","rpd"],"body":"rest_parse_date( ${1:\\$date:string}, ${2:\\$force_utc:bool} )","description":"Parses an RFC3339 time into a Unix timestamp."},"ƒ: rest_parse_hex_color":{"prefix":["rest_parse_hex_color","rphc"],"body":"rest_parse_hex_color( ${1:\\$color:string} )","description":"Parses a 3 or 6 digit hex color (with #)."},"ƒ: rest_get_date_with_gmt":{"prefix":["rest_get_date_with_gmt","rgdwg"],"body":"rest_get_date_with_gmt( ${1:\\$date:string}, ${2:\\$is_utc:bool} )","description":"Parses a date into both its local and UTC equivalent, in MySQL datetime format."},"ƒ: rest_authorization_required_code":{"prefix":["rest_authorization_required_code","rarc"],"body":"rest_authorization_required_code(  )","description":"Returns a contextual HTTP error code for authorization failure."},"ƒ: rest_validate_request_arg":{"prefix":["rest_validate_request_arg","rvra"],"body":"rest_validate_request_arg( ${1:\\$value:mixed}, ${2:\\$request:WP_REST_Request}, ${3:\\$param:string} )","description":"Validate a request argument based on details registered to the route."},"ƒ: rest_sanitize_request_arg":{"prefix":["rest_sanitize_request_arg","rsra"],"body":"rest_sanitize_request_arg( ${1:\\$value:mixed}, ${2:\\$request:WP_REST_Request}, ${3:\\$param:string} )","description":"Sanitize a request argument based on details registered to the route."},"ƒ: rest_parse_request_arg":{"prefix":["rest_parse_request_arg","rpra"],"body":"rest_parse_request_arg( ${1:\\$value:mixed}, ${2:\\$request:WP_REST_Request}, ${3:\\$param:string} )","description":"Parse a request argument based on details registered to the route."},"ƒ: rest_is_ip_address":{"prefix":["rest_is_ip_address","riia"],"body":"rest_is_ip_address( ${1:\\$ip:string} )","description":"Determines if an IP address is valid."},"ƒ: rest_sanitize_boolean":{"prefix":["rest_sanitize_boolean","rsb"],"body":"rest_sanitize_boolean( ${1:\\$value:bool|string|int} )","description":"Changes a boolean-like value into the proper boolean value."},"ƒ: rest_is_boolean":{"prefix":["rest_is_boolean","rib"],"body":"rest_is_boolean( ${1:\\$maybe_bool:bool|string} )","description":"Determines if a given value is boolean-like."},"ƒ: rest_is_integer":{"prefix":["rest_is_integer","rii"],"body":"rest_is_integer( ${1:\\$maybe_integer:mixed} )","description":"Determines if a given value is integer-like."},"ƒ: rest_is_array":{"prefix":["rest_is_array","ria"],"body":"rest_is_array( ${1:\\$maybe_array:mixed} )","description":"Determines if a given value is array-like."},"ƒ: rest_sanitize_array":{"prefix":["rest_sanitize_array","rsa"],"body":"rest_sanitize_array( ${1:\\$maybe_array:mixed} )","description":"Converts an array-like value to an array."},"ƒ: rest_is_object":{"prefix":["rest_is_object","rio"],"body":"rest_is_object( ${1:\\$maybe_object:mixed} )","description":"Determines if a given value is object-like."},"ƒ: rest_sanitize_object":{"prefix":["rest_sanitize_object","rso"],"body":"rest_sanitize_object( ${1:\\$maybe_object:mixed} )","description":"Converts an object-like value to an array."},"ƒ: rest_get_best_type_for_value":{"prefix":["rest_get_best_type_for_value","rgbtfv"],"body":"rest_get_best_type_for_value( ${1:\\$value:mixed}, ${2:\\$types:string[]} )","description":"Gets the best type for a value."},"ƒ: rest_handle_multi_type_schema":{"prefix":["rest_handle_multi_type_schema","rhmts"],"body":"rest_handle_multi_type_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Handles getting the best type for a multi-type schema."},"ƒ: rest_validate_array_contains_unique_items":{"prefix":["rest_validate_array_contains_unique_items","rvacui"],"body":"rest_validate_array_contains_unique_items( ${1:\\$input_array:array} )","description":"Checks if an array is made up of unique items."},"ƒ: rest_stabilize_value":{"prefix":["rest_stabilize_value","rsv"],"body":"rest_stabilize_value( ${1:\\$value:mixed} )","description":"Stabilizes a value following JSON Schema semantics."},"ƒ: rest_validate_json_schema_pattern":{"prefix":["rest_validate_json_schema_pattern","rvjsp"],"body":"rest_validate_json_schema_pattern( ${1:\\$pattern:string}, ${2:\\$value:string} )","description":"Validates if the JSON Schema pattern matches a value."},"ƒ: rest_find_matching_pattern_property_schema":{"prefix":["rest_find_matching_pattern_property_schema","rfmpps"],"body":"rest_find_matching_pattern_property_schema( ${1:\\$property:string}, ${2:\\$args:array} )","description":"Finds the schema for a property using the patternProperties keyword."},"ƒ: rest_format_combining_operation_error":{"prefix":["rest_format_combining_operation_error","rfcoe"],"body":"rest_format_combining_operation_error( ${1:\\$param:string}, ${2:\\$error:array} )","description":"Formats a combining operation error into a WP_Error object."},"ƒ: rest_get_combining_operation_error":{"prefix":["rest_get_combining_operation_error","rgcoe"],"body":"rest_get_combining_operation_error( ${1:\\$value:array}, ${2:\\$param:string}, ${3:\\$errors:array} )","description":"Gets the error of combining operation."},"ƒ: rest_find_any_matching_schema":{"prefix":["rest_find_any_matching_schema","rfams"],"body":"rest_find_any_matching_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Finds the matching schema among the \"anyOf\" schemas."},"ƒ: rest_find_one_matching_schema":{"prefix":["rest_find_one_matching_schema","rfoms"],"body":"rest_find_one_matching_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string}, ${4:\\$stop_after_first_match:bool} )","description":"Finds the matching schema among the \"oneOf\" schemas."},"ƒ: rest_are_values_equal":{"prefix":["rest_are_values_equal","rave"],"body":"rest_are_values_equal( ${1:\\$value1:mixed}, ${2:\\$value2:mixed} )","description":"Checks the equality of two values, following JSON Schema semantics."},"ƒ: rest_validate_enum":{"prefix":["rest_validate_enum","rve"],"body":"rest_validate_enum( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates that the given value is a member of the JSON Schema \"enum\"."},"ƒ: rest_get_allowed_schema_keywords":{"prefix":["rest_get_allowed_schema_keywords","rgask"],"body":"rest_get_allowed_schema_keywords(  )","description":"Get all valid JSON schema properties."},"ƒ: rest_validate_value_from_schema":{"prefix":["rest_validate_value_from_schema","rvvfs"],"body":"rest_validate_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validate a value based on a schema."},"ƒ: rest_validate_null_value_from_schema":{"prefix":["rest_validate_null_value_from_schema","rvnvfs"],"body":"rest_validate_null_value_from_schema( ${1:\\$value:mixed}, ${2:\\$param:string} )","description":"Validates a null value based on a schema."},"ƒ: rest_validate_boolean_value_from_schema":{"prefix":["rest_validate_boolean_value_from_schema","rvbvfs"],"body":"rest_validate_boolean_value_from_schema( ${1:\\$value:mixed}, ${2:\\$param:string} )","description":"Validates a boolean value based on a schema."},"ƒ: rest_validate_object_value_from_schema":{"prefix":["rest_validate_object_value_from_schema","rvovfs"],"body":"rest_validate_object_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates an object value based on a schema."},"ƒ: rest_validate_array_value_from_schema":{"prefix":["rest_validate_array_value_from_schema","rvavfs"],"body":"rest_validate_array_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates an array value based on a schema."},"ƒ: rest_validate_number_value_from_schema":{"prefix":["rest_validate_number_value_from_schema","rvnvfs"],"body":"rest_validate_number_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates a number value based on a schema."},"ƒ: rest_validate_string_value_from_schema":{"prefix":["rest_validate_string_value_from_schema","rvsvfs"],"body":"rest_validate_string_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates a string value based on a schema."},"ƒ: rest_validate_integer_value_from_schema":{"prefix":["rest_validate_integer_value_from_schema","rvivfs"],"body":"rest_validate_integer_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Validates an integer value based on a schema."},"ƒ: rest_sanitize_value_from_schema":{"prefix":["rest_sanitize_value_from_schema","rsvfs"],"body":"rest_sanitize_value_from_schema( ${1:\\$value:mixed}, ${2:\\$args:array}, ${3:\\$param:string} )","description":"Sanitize a value based on a schema."},"ƒ: rest_preload_api_request":{"prefix":["rest_preload_api_request","rpar"],"body":"rest_preload_api_request( ${1:\\$memo:array}, ${2:\\$path:string} )","description":"Append result of internal request to REST API for purpose of preloading data to be attached to a page."},"ƒ: rest_parse_embed_param":{"prefix":["rest_parse_embed_param","rpep"],"body":"rest_parse_embed_param( ${1:\\$embed:string|array} )","description":"Parses the \"_embed\" parameter into the list of resources to embed."},"ƒ: rest_filter_response_by_context":{"prefix":["rest_filter_response_by_context","rfrbc"],"body":"rest_filter_response_by_context( ${1:\\$response_data:array|object}, ${2:\\$schema:array}, ${3:\\$context:string} )","description":"Filters the response to remove any fields not available in the given context."},"ƒ: rest_default_additional_properties_to_false":{"prefix":["rest_default_additional_properties_to_false","rdaptf"],"body":"rest_default_additional_properties_to_false( ${1:\\$schema:array} )","description":"Sets the \"additionalProperties\" to false by default for all object definitions in the schema."},"ƒ: rest_get_route_for_post":{"prefix":["rest_get_route_for_post","rgrfp"],"body":"rest_get_route_for_post( ${1:\\$post:int|WP_Post} )","description":"Gets the REST API route for a post."},"ƒ: rest_get_route_for_post_type_items":{"prefix":["rest_get_route_for_post_type_items","rgrfpti"],"body":"rest_get_route_for_post_type_items( ${1:\\$post_type:string} )","description":"Gets the REST API route for a post type."},"ƒ: rest_get_route_for_term":{"prefix":["rest_get_route_for_term","rgrft"],"body":"rest_get_route_for_term( ${1:\\$term:int|WP_Term} )","description":"Gets the REST API route for a term."},"ƒ: rest_get_route_for_taxonomy_items":{"prefix":["rest_get_route_for_taxonomy_items","rgrfti"],"body":"rest_get_route_for_taxonomy_items( ${1:\\$taxonomy:string} )","description":"Gets the REST API route for a taxonomy."},"ƒ: rest_get_queried_resource_route":{"prefix":["rest_get_queried_resource_route","rgqrr"],"body":"rest_get_queried_resource_route(  )","description":"Gets the REST route for the currently queried object."},"ƒ: rest_get_endpoint_args_for_schema":{"prefix":["rest_get_endpoint_args_for_schema","rgeafs"],"body":"rest_get_endpoint_args_for_schema( ${1:\\$schema:array}, ${2:\\$method:string} )","description":"Retrieves an array of endpoint arguments from the item schema and endpoint method."},"ƒ: rest_convert_error_to_response":{"prefix":["rest_convert_error_to_response","rcetr"],"body":"rest_convert_error_to_response( ${1:\\$error:WP_Error} )","description":"Converts an error to a response object."},"ƒ: wp_is_rest_endpoint":{"prefix":["wp_is_rest_endpoint","wire"],"body":"wp_is_rest_endpoint(  )","description":"Checks whether a REST API endpoint request is currently being handled."},"ƒ: wp_save_post_revision_on_insert":{"prefix":["wp_save_post_revision_on_insert","wsproi"],"body":"wp_save_post_revision_on_insert( ${1:\\$post_id:int}, ${2:\\$post:WP_Post}, ${3:\\$update:bool} )","description":"Saves revisions for a post after all changes have been made."},"ƒ: wp_save_post_revision":{"prefix":["wp_save_post_revision","wspr"],"body":"wp_save_post_revision( ${1:\\$post_id:int} )","description":"Creates a revision for the current version of a post."},"ƒ: wp_get_post_autosave":{"prefix":["wp_get_post_autosave","wgpa"],"body":"wp_get_post_autosave( ${1:\\$post_id:int}, ${2:\\$user_id:int} )","description":"Retrieves the autosaved data of the specified post."},"ƒ: wp_is_post_revision":{"prefix":["wp_is_post_revision","wipr"],"body":"wp_is_post_revision( ${1:\\$post:int|WP_Post} )","description":"Determines if the specified post is a revision."},"ƒ: wp_is_post_autosave":{"prefix":["wp_is_post_autosave","wipa"],"body":"wp_is_post_autosave( ${1:\\$post:int|WP_Post} )","description":"Determines if the specified post is an autosave."},"ƒ: wp_save_revisioned_meta_fields":{"prefix":["wp_save_revisioned_meta_fields","wsrmf"],"body":"wp_save_revisioned_meta_fields( ${1:\\$revision_id:int}, ${2:\\$post_id:int} )","description":"Save the revisioned meta fields."},"ƒ: wp_get_post_revision":{"prefix":["wp_get_post_revision","wgpr"],"body":"wp_get_post_revision( ${1:\\$post:int|WP_Post}, ${2:\\$output:string}, ${3:\\$filter:string} )","description":"Gets a post revision."},"ƒ: wp_restore_post_revision":{"prefix":["wp_restore_post_revision","wrpr"],"body":"wp_restore_post_revision( ${1:\\$revision:int|WP_Post}, ${2:\\$fields:array|null} )","description":"Restores a post to the specified revision."},"ƒ: wp_restore_post_revision_meta":{"prefix":["wp_restore_post_revision_meta","wrprm"],"body":"wp_restore_post_revision_meta( ${1:\\$post_id:int}, ${2:\\$revision_id:int} )","description":"Restore the revisioned meta values for a post."},"ƒ: wp_post_revision_meta_keys":{"prefix":["wp_post_revision_meta_keys","wprmk"],"body":"wp_post_revision_meta_keys( ${1:\\$post_type:string} )","description":"Determine which post meta fields should be revisioned."},"ƒ: wp_check_revisioned_meta_fields_have_changed":{"prefix":["wp_check_revisioned_meta_fields_have_changed","wcrmfhc"],"body":"wp_check_revisioned_meta_fields_have_changed( ${1:\\$post_has_changed:bool}, ${2:\\$last_revision:WP_Post}, ${3:\\$post:WP_Post} )","description":"Check whether revisioned post meta fields have changed."},"ƒ: wp_delete_post_revision":{"prefix":["wp_delete_post_revision","wdpr"],"body":"wp_delete_post_revision( ${1:\\$revision:int|WP_Post} )","description":"Deletes a revision."},"ƒ: wp_get_post_revisions":{"prefix":["wp_get_post_revisions","wgpr"],"body":"wp_get_post_revisions( ${1:\\$post:int|WP_Post}, ${2:\\$args:array|null|null} )","description":"Returns all revisions of specified post."},"ƒ: wp_get_latest_revision_id_and_total_count":{"prefix":["wp_get_latest_revision_id_and_total_count","wglriatc"],"body":"wp_get_latest_revision_id_and_total_count( ${1:\\$post:int|WP_Post} )","description":"Returns the latest revision ID and count of revisions for a post."},"ƒ: wp_get_post_revisions_url":{"prefix":["wp_get_post_revisions_url","wgpru"],"body":"wp_get_post_revisions_url( ${1:\\$post:int|WP_Post} )","description":"Returns the url for viewing and potentially restoring revisions of a given post."},"ƒ: wp_revisions_enabled":{"prefix":["wp_revisions_enabled","wre"],"body":"wp_revisions_enabled( ${1:\\$post:WP_Post} )","description":"Determines whether revisions are enabled for a given post."},"ƒ: wp_revisions_to_keep":{"prefix":["wp_revisions_to_keep","wrtk"],"body":"wp_revisions_to_keep( ${1:\\$post:WP_Post} )","description":"Determines how many revisions to retain for a given post."},"ƒ: add_rewrite_rule":{"prefix":["add_rewrite_rule","arr"],"body":"add_rewrite_rule( ${1:\\$regex:string}, ${2:\\$query:string|array}, ${3:\\$after:string} )","description":"Adds a rewrite rule that transforms a URL structure to a set of query vars."},"ƒ: add_rewrite_tag":{"prefix":["add_rewrite_tag","art"],"body":"add_rewrite_tag( ${1:\\$tag:string}, ${2:\\$regex:string}, ${3:\\$query:string} )","description":"Adds a new rewrite tag (like %postname%)."},"ƒ: remove_rewrite_tag":{"prefix":["remove_rewrite_tag","rrt"],"body":"remove_rewrite_tag( ${1:\\$tag:string} )","description":"Removes an existing rewrite tag (like %postname%)."},"ƒ: add_permastruct":{"prefix":["add_permastruct","ap"],"body":"add_permastruct( ${1:\\$name:string}, ${2:\\$struct:string}, ${3:\\$args:array} )","description":"Adds a permalink structure."},"ƒ: remove_permastruct":{"prefix":["remove_permastruct","rp"],"body":"remove_permastruct( ${1:\\$name:string} )","description":"Removes a permalink structure."},"ƒ: add_feed":{"prefix":["add_feed","af"],"body":"add_feed( ${1:\\$feedname:string}, ${2:\\$callback:callable} )","description":"Adds a new feed type like /atom1/."},"ƒ: flush_rewrite_rules":{"prefix":["flush_rewrite_rules","frr"],"body":"flush_rewrite_rules( ${1:\\$hard:bool} )","description":"Removes rewrite rules and then recreate rewrite rules."},"ƒ: add_rewrite_endpoint":{"prefix":["add_rewrite_endpoint","are"],"body":"add_rewrite_endpoint( ${1:\\$name:string}, ${2:\\$places:int}, ${3:\\$query_var:string|bool} )","description":"Adds an endpoint, like /trackback/."},"ƒ: wp_resolve_numeric_slug_conflicts":{"prefix":["wp_resolve_numeric_slug_conflicts","wrnsc"],"body":"wp_resolve_numeric_slug_conflicts( ${1:\\$query_vars:array} )","description":"Resolves numeric slugs that collide with date permalinks."},"ƒ: url_to_postid":{"prefix":["url_to_postid","utp"],"body":"url_to_postid( ${1:\\$url:string} )","description":"Examines a URL and try to determine the post ID it represents."},"ƒ: wp_robots":{"prefix":["wp_robots","wr"],"body":"wp_robots(  )","description":"Displays the robots meta tag as necessary."},"ƒ: wp_robots_noindex":{"prefix":["wp_robots_noindex","wrn"],"body":"wp_robots_noindex( ${1:\\$robots:array} )","description":"Adds `noindex` to the robots meta tag if required by the site configuration."},"ƒ: wp_robots_noindex_embeds":{"prefix":["wp_robots_noindex_embeds","wrne"],"body":"wp_robots_noindex_embeds( ${1:\\$robots:array} )","description":"Adds `noindex` to the robots meta tag for embeds."},"ƒ: wp_robots_noindex_search":{"prefix":["wp_robots_noindex_search","wrns"],"body":"wp_robots_noindex_search( ${1:\\$robots:array} )","description":"Adds `noindex` to the robots meta tag if a search is being performed."},"ƒ: wp_robots_no_robots":{"prefix":["wp_robots_no_robots","wrnr"],"body":"wp_robots_no_robots( ${1:\\$robots:array} )","description":"Adds `noindex` to the robots meta tag."},"ƒ: wp_robots_sensitive_page":{"prefix":["wp_robots_sensitive_page","wrsp"],"body":"wp_robots_sensitive_page( ${1:\\$robots:array} )","description":"Adds `noindex` and `noarchive` to the robots meta tag."},"ƒ: wp_robots_max_image_preview_large":{"prefix":["wp_robots_max_image_preview_large","wrmipl"],"body":"wp_robots_max_image_preview_large( ${1:\\$robots:array} )","description":"Adds `max-image-preview:large` to the robots meta tag."},"ƒ: fetch_rss":{"prefix":["fetch_rss","fr"],"body":"fetch_rss( ${1:\\$url:string} )","description":"Build Magpie object based on RSS from URL."},"ƒ: init":{"prefix":["init"],"body":"init(  )","description":"Set up constants with default values, unless user overrides."},"ƒ: is_info":{"prefix":["is_info","ii"],"body":"is_info( ${1:\\$sc:mixed} )","description":""},"ƒ: is_success":{"prefix":["is_success","is"],"body":"is_success( ${1:\\$sc:mixed} )","description":""},"ƒ: is_redirect":{"prefix":["is_redirect","ir"],"body":"is_redirect( ${1:\\$sc:mixed} )","description":""},"ƒ: is_error":{"prefix":["is_error","ie"],"body":"is_error( ${1:\\$sc:mixed} )","description":""},"ƒ: is_client_error":{"prefix":["is_client_error","ice"],"body":"is_client_error( ${1:\\$sc:mixed} )","description":""},"ƒ: is_server_error":{"prefix":["is_server_error","ise"],"body":"is_server_error( ${1:\\$sc:mixed} )","description":""},"ƒ: parse_w3cdtf":{"prefix":["parse_w3cdtf","pw"],"body":"parse_w3cdtf( ${1:\\$date_str:mixed} )","description":""},"ƒ: wp_rss":{"prefix":["wp_rss","wr"],"body":"wp_rss( ${1:\\$url:string}, ${2:\\$num_items:int} )","description":"Display all RSS items in a HTML ordered list."},"ƒ: get_rss":{"prefix":["get_rss","gr"],"body":"get_rss( ${1:\\$url:string}, ${2:\\$num_items:int} )","description":"Display RSS items in HTML list items."},"ƒ: wp_register_tinymce_scripts":{"prefix":["wp_register_tinymce_scripts","wrts"],"body":"wp_register_tinymce_scripts( ${1:\\$scripts:WP_Scripts}, ${2:\\$force_uncompressed:bool} )","description":"Registers TinyMCE scripts."},"ƒ: wp_default_packages_vendor":{"prefix":["wp_default_packages_vendor","wdpv"],"body":"wp_default_packages_vendor( ${1:\\$scripts:WP_Scripts} )","description":"Registers all the WordPress vendor scripts that are in the standardized `js/dist/vendor/` location."},"ƒ: wp_get_script_polyfill":{"prefix":["wp_get_script_polyfill","wgsp"],"body":"wp_get_script_polyfill( ${1:\\$scripts:WP_Scripts}, ${2:\\$tests:string[]} )","description":"Returns contents of an inline script used in appending polyfill scripts for browsers which fail the provided tests. The provided array is a mapping from a condition to verify feature support to its polyfill script handle."},"ƒ: wp_register_development_scripts":{"prefix":["wp_register_development_scripts","wrds"],"body":"wp_register_development_scripts( ${1:\\$scripts:WP_Scripts} )","description":"Registers development scripts that integrate with `@wordpress/scripts`."},"ƒ: wp_default_packages_scripts":{"prefix":["wp_default_packages_scripts","wdps"],"body":"wp_default_packages_scripts( ${1:\\$scripts:WP_Scripts} )","description":"Registers all the WordPress packages scripts that are in the standardized `js/dist/` location."},"ƒ: wp_default_packages_inline_scripts":{"prefix":["wp_default_packages_inline_scripts","wdpis"],"body":"wp_default_packages_inline_scripts( ${1:\\$scripts:WP_Scripts} )","description":"Adds inline scripts required for the WordPress JavaScript packages."},"ƒ: wp_tinymce_inline_scripts":{"prefix":["wp_tinymce_inline_scripts","wtis"],"body":"wp_tinymce_inline_scripts(  )","description":"Adds inline scripts required for the TinyMCE in the block editor."},"ƒ: wp_default_packages":{"prefix":["wp_default_packages","wdp"],"body":"wp_default_packages( ${1:\\$scripts:WP_Scripts} )","description":"Registers all the WordPress packages scripts."},"ƒ: wp_scripts_get_suffix":{"prefix":["wp_scripts_get_suffix","wsgs"],"body":"wp_scripts_get_suffix( ${1:\\$type:string} )","description":"Returns the suffix that can be used for the scripts."},"ƒ: wp_default_scripts":{"prefix":["wp_default_scripts","wds"],"body":"wp_default_scripts( ${1:\\$scripts:WP_Scripts} )","description":"Registers all WordPress scripts."},"ƒ: wp_default_styles":{"prefix":["wp_default_styles","wds"],"body":"wp_default_styles( ${1:\\$styles:WP_Styles} )","description":"Assigns default styles to $styles object."},"ƒ: wp_prototype_before_jquery":{"prefix":["wp_prototype_before_jquery","wpbj"],"body":"wp_prototype_before_jquery( ${1:\\$js_array:string[]} )","description":"Reorders JavaScript scripts array to place prototype before jQuery."},"ƒ: wp_just_in_time_script_localization":{"prefix":["wp_just_in_time_script_localization","wjitsl"],"body":"wp_just_in_time_script_localization(  )","description":"Loads localized data on print rather than initialization."},"ƒ: wp_localize_jquery_ui_datepicker":{"prefix":["wp_localize_jquery_ui_datepicker","wljud"],"body":"wp_localize_jquery_ui_datepicker(  )","description":"Localizes the jQuery UI datepicker."},"ƒ: wp_localize_community_events":{"prefix":["wp_localize_community_events","wlce"],"body":"wp_localize_community_events(  )","description":"Localizes community events data that needs to be passed to dashboard.js."},"ƒ: wp_style_loader_src":{"prefix":["wp_style_loader_src","wsls"],"body":"wp_style_loader_src( ${1:\\$src:string}, ${2:\\$handle:string} )","description":"Administration Screen CSS for changing the styles."},"ƒ: print_head_scripts":{"prefix":["print_head_scripts","phs"],"body":"print_head_scripts(  )","description":"Prints the script queue in the HTML head on admin pages."},"ƒ: print_footer_scripts":{"prefix":["print_footer_scripts","pfs"],"body":"print_footer_scripts(  )","description":"Prints the scripts that were queued for the footer or too late for the HTML head."},"ƒ: wp_print_head_scripts":{"prefix":["wp_print_head_scripts","wphs"],"body":"wp_print_head_scripts(  )","description":"Prints the script queue in the HTML head on the front end."},"ƒ: wp_print_footer_scripts":{"prefix":["wp_print_footer_scripts","wpfs"],"body":"wp_print_footer_scripts(  )","description":"Hooks to print the scripts and styles in the footer."},"ƒ: wp_enqueue_scripts":{"prefix":["wp_enqueue_scripts","wes"],"body":"wp_enqueue_scripts(  )","description":"Wrapper for do_action( 'wp_enqueue_scripts' )."},"ƒ: print_admin_styles":{"prefix":["print_admin_styles","pas"],"body":"print_admin_styles(  )","description":"Prints the styles queue in the HTML head on admin pages."},"ƒ: print_late_styles":{"prefix":["print_late_styles","pls"],"body":"print_late_styles(  )","description":"Prints the styles that were queued too late for the HTML head."},"ƒ: script_concat_settings":{"prefix":["script_concat_settings","scs"],"body":"script_concat_settings(  )","description":"Determines the concatenation and compression settings for scripts and styles."},"ƒ: wp_common_block_scripts_and_styles":{"prefix":["wp_common_block_scripts_and_styles","wcbsas"],"body":"wp_common_block_scripts_and_styles(  )","description":"Handles the enqueueing of block scripts and styles that are common to both the editor and the front-end."},"ƒ: wp_filter_out_block_nodes":{"prefix":["wp_filter_out_block_nodes","wfobn"],"body":"wp_filter_out_block_nodes( ${1:\\$nodes:array} )","description":"Applies a filter to the list of style nodes that comes from WP_Theme_JSON::get_style_nodes()."},"ƒ: wp_enqueue_global_styles":{"prefix":["wp_enqueue_global_styles","wegs"],"body":"wp_enqueue_global_styles(  )","description":"Enqueues the global styles defined via theme.json."},"ƒ: wp_should_load_block_editor_scripts_and_styles":{"prefix":["wp_should_load_block_editor_scripts_and_styles","wslbesas"],"body":"wp_should_load_block_editor_scripts_and_styles(  )","description":"Checks if the editor scripts and styles for all registered block types should be enqueued on the current screen."},"ƒ: wp_should_load_separate_core_block_assets":{"prefix":["wp_should_load_separate_core_block_assets","wslscba"],"body":"wp_should_load_separate_core_block_assets(  )","description":"Checks whether separate styles should be loaded for core blocks."},"ƒ: wp_should_load_block_assets_on_demand":{"prefix":["wp_should_load_block_assets_on_demand","wslbaod"],"body":"wp_should_load_block_assets_on_demand(  )","description":"Checks whether block styles should be loaded only on-render."},"ƒ: wp_enqueue_registered_block_scripts_and_styles":{"prefix":["wp_enqueue_registered_block_scripts_and_styles","werbsas"],"body":"wp_enqueue_registered_block_scripts_and_styles(  )","description":"Enqueues registered block scripts and styles, depending on current rendered context (only enqueuing editor scripts while in context of the editor)."},"ƒ: enqueue_block_styles_assets":{"prefix":["enqueue_block_styles_assets","ebsa"],"body":"enqueue_block_styles_assets(  )","description":"Function responsible for enqueuing the styles required for block styles functionality on the editor and on the frontend."},"ƒ: enqueue_editor_block_styles_assets":{"prefix":["enqueue_editor_block_styles_assets","eebsa"],"body":"enqueue_editor_block_styles_assets(  )","description":"Function responsible for enqueuing the assets required for block styles functionality on the editor."},"ƒ: wp_enqueue_editor_block_directory_assets":{"prefix":["wp_enqueue_editor_block_directory_assets","weebda"],"body":"wp_enqueue_editor_block_directory_assets(  )","description":"Enqueues the assets required for the block directory within the block editor."},"ƒ: wp_enqueue_editor_format_library_assets":{"prefix":["wp_enqueue_editor_format_library_assets","weefla"],"body":"wp_enqueue_editor_format_library_assets(  )","description":"Enqueues the assets required for the format library within the block editor."},"ƒ: wp_sanitize_script_attributes":{"prefix":["wp_sanitize_script_attributes","wssa"],"body":"wp_sanitize_script_attributes( ${1:\\$attributes:array} )","description":"Sanitizes an attributes array into an attributes string to be placed inside a `<script>` tag."},"ƒ: wp_get_script_tag":{"prefix":["wp_get_script_tag","wgst"],"body":"wp_get_script_tag( ${1:\\$attributes:array} )","description":"Formats `<script>` loader tags."},"ƒ: wp_print_script_tag":{"prefix":["wp_print_script_tag","wpst"],"body":"wp_print_script_tag( ${1:\\$attributes:array} )","description":"Prints formatted `<script>` loader tag."},"ƒ: wp_get_inline_script_tag":{"prefix":["wp_get_inline_script_tag","wgist"],"body":"wp_get_inline_script_tag( ${1:\\$data:string}, ${2:\\$attributes:array} )","description":"Constructs an inline script tag."},"ƒ: wp_print_inline_script_tag":{"prefix":["wp_print_inline_script_tag","wpist"],"body":"wp_print_inline_script_tag( ${1:\\$data:string}, ${2:\\$attributes:array} )","description":"Prints an inline script tag."},"ƒ: wp_maybe_inline_styles":{"prefix":["wp_maybe_inline_styles","wmis"],"body":"wp_maybe_inline_styles(  )","description":"Allows small styles to be inlined."},"ƒ: wp_enqueue_global_styles_css_custom_properties":{"prefix":["wp_enqueue_global_styles_css_custom_properties","wegsccp"],"body":"wp_enqueue_global_styles_css_custom_properties(  )","description":"Function that enqueues the CSS Custom Properties coming from theme.json."},"ƒ: wp_enqueue_block_support_styles":{"prefix":["wp_enqueue_block_support_styles","webss"],"body":"wp_enqueue_block_support_styles( ${1:\\$style:string}, ${2:\\$priority:int} )","description":"Hooks inline styles in the proper place, depending on the active theme."},"ƒ: wp_enqueue_stored_styles":{"prefix":["wp_enqueue_stored_styles","wess"],"body":"wp_enqueue_stored_styles( ${1:\\$options:array} )","description":"Fetches, processes and compiles stored core styles, then combines and renders them to the page."},"ƒ: wp_enqueue_block_style":{"prefix":["wp_enqueue_block_style","webs"],"body":"wp_enqueue_block_style( ${1:\\$block_name:string}, ${2:\\$args:array} )","description":"Enqueues a stylesheet for a specific block."},"ƒ: wp_enqueue_classic_theme_styles":{"prefix":["wp_enqueue_classic_theme_styles","wects"],"body":"wp_enqueue_classic_theme_styles(  )","description":"Loads classic theme styles on classic themes in the frontend."},"ƒ: wp_script_modules":{"prefix":["wp_script_modules","wsm"],"body":"wp_script_modules(  )","description":"Retrieves the main WP_Script_Modules instance."},"ƒ: wp_register_script_module":{"prefix":["wp_register_script_module","wrsm"],"body":"wp_register_script_module( ${1:\\$id:string}, ${2:\\$src:string}, ${3:\\$deps:array}, ${4:\\$version:string|false|null} )","description":"Registers the script module if no script module with that script module identifier has already been registered."},"ƒ: wp_enqueue_script_module":{"prefix":["wp_enqueue_script_module","wesm"],"body":"wp_enqueue_script_module( ${1:\\$id:string}, ${2:\\$src:string}, ${3:\\$deps:array}, ${4:\\$version:string|false|null} )","description":"Marks the script module to be enqueued in the page."},"ƒ: wp_dequeue_script_module":{"prefix":["wp_dequeue_script_module","wdsm"],"body":"wp_dequeue_script_module( ${1:\\$id:string} )","description":"Unmarks the script module so it is no longer enqueued in the page."},"ƒ: wp_deregister_script_module":{"prefix":["wp_deregister_script_module","wdsm"],"body":"wp_deregister_script_module( ${1:\\$id:string} )","description":"Deregisters the script module."},"ƒ: wp_default_script_modules":{"prefix":["wp_default_script_modules","wdsm"],"body":"wp_default_script_modules(  )","description":"Registers all the default WordPress Script Modules."},"ƒ: add_shortcode":{"prefix":["add_shortcode","as"],"body":"add_shortcode( ${1:\\$tag:string}, ${2:\\$callback:callable} )","description":"Adds a new shortcode."},"ƒ: remove_shortcode":{"prefix":["remove_shortcode","rs"],"body":"remove_shortcode( ${1:\\$tag:string} )","description":"Removes hook for shortcode."},"ƒ: remove_all_shortcodes":{"prefix":["remove_all_shortcodes","ras"],"body":"remove_all_shortcodes(  )","description":"Clears all shortcodes."},"ƒ: shortcode_exists":{"prefix":["shortcode_exists","se"],"body":"shortcode_exists( ${1:\\$tag:string} )","description":"Determines whether a registered shortcode exists named $tag."},"ƒ: has_shortcode":{"prefix":["has_shortcode","hs"],"body":"has_shortcode( ${1:\\$content:string}, ${2:\\$tag:string} )","description":"Determines whether the passed content contains the specified shortcode."},"ƒ: get_shortcode_tags_in_content":{"prefix":["get_shortcode_tags_in_content","gstic"],"body":"get_shortcode_tags_in_content( ${1:\\$content:string} )","description":"Returns a list of registered shortcode names found in the given content."},"ƒ: apply_shortcodes":{"prefix":["apply_shortcodes","as"],"body":"apply_shortcodes( ${1:\\$content:string}, ${2:\\$ignore_html:bool} )","description":"Searches content for shortcodes and filter shortcodes through their hooks."},"ƒ: do_shortcode":{"prefix":["do_shortcode","ds"],"body":"do_shortcode( ${1:\\$content:string}, ${2:\\$ignore_html:bool} )","description":"Searches content for shortcodes and filter shortcodes through their hooks."},"ƒ: get_shortcode_regex":{"prefix":["get_shortcode_regex","gsr"],"body":"get_shortcode_regex( ${1:\\$tagnames:array|null} )","description":"Retrieves the shortcode regular expression for searching."},"ƒ: do_shortcodes_in_html_tags":{"prefix":["do_shortcodes_in_html_tags","dsiht"],"body":"do_shortcodes_in_html_tags( ${1:\\$content:string}, ${2:\\$ignore_html:bool}, ${3:\\$tagnames:array} )","description":"Searches only inside HTML elements for shortcodes and process them."},"ƒ: unescape_invalid_shortcodes":{"prefix":["unescape_invalid_shortcodes","uis"],"body":"unescape_invalid_shortcodes( ${1:\\$content:string} )","description":"Removes placeholders added by do_shortcodes_in_html_tags()."},"ƒ: get_shortcode_atts_regex":{"prefix":["get_shortcode_atts_regex","gsar"],"body":"get_shortcode_atts_regex(  )","description":"Retrieves the shortcode attributes regex."},"ƒ: shortcode_parse_atts":{"prefix":["shortcode_parse_atts","spa"],"body":"shortcode_parse_atts( ${1:\\$text:string} )","description":"Retrieves all attributes from the shortcodes tag."},"ƒ: shortcode_atts":{"prefix":["shortcode_atts","sa"],"body":"shortcode_atts( ${1:\\$pairs:array}, ${2:\\$atts:array}, ${3:\\$shortcode:string} )","description":"Combines user attributes with known attributes and fill in defaults when needed."},"ƒ: strip_shortcodes":{"prefix":["strip_shortcodes","ss"],"body":"strip_shortcodes( ${1:\\$content:string} )","description":"Removes all shortcode tags from the given content."},"ƒ: strip_shortcode_tag":{"prefix":["strip_shortcode_tag","sst"],"body":"strip_shortcode_tag( ${1:\\$m:array} )","description":"Strips a shortcode tag based on RegEx matches against post content."},"ƒ: wp_sitemaps_get_server":{"prefix":["wp_sitemaps_get_server","wsgs"],"body":"wp_sitemaps_get_server(  )","description":"Retrieves the current Sitemaps server instance."},"ƒ: wp_get_sitemap_providers":{"prefix":["wp_get_sitemap_providers","wgsp"],"body":"wp_get_sitemap_providers(  )","description":"Gets an array of sitemap providers."},"ƒ: wp_register_sitemap_provider":{"prefix":["wp_register_sitemap_provider","wrsp"],"body":"wp_register_sitemap_provider( ${1:\\$name:string}, ${2:\\$provider:WP_Sitemaps_Provider} )","description":"Registers a new sitemap provider."},"ƒ: wp_sitemaps_get_max_urls":{"prefix":["wp_sitemaps_get_max_urls","wsgmu"],"body":"wp_sitemaps_get_max_urls( ${1:\\$object_type:string} )","description":"Gets the maximum number of URLs for a sitemap."},"ƒ: get_sitemap_url":{"prefix":["get_sitemap_url","gsu"],"body":"get_sitemap_url( ${1:\\$name:string}, ${2:\\$subtype_name:string}, ${3:\\$page:int} )","description":"Retrieves the full URL for a sitemap."},"ƒ: wp_get_speculation_rules_configuration":{"prefix":["wp_get_speculation_rules_configuration","wgsrc"],"body":"wp_get_speculation_rules_configuration(  )","description":"Returns the speculation rules configuration."},"ƒ: wp_style_engine_get_styles":{"prefix":["wp_style_engine_get_styles","wsegs"],"body":"wp_style_engine_get_styles( ${1:\\$block_styles:array}, ${2:\\$options:array} )","description":"Global public interface method to generate styles from a single style object, e.g. the value of a block's attributes.style object or the top level styles in theme.json."},"ƒ: wp_style_engine_get_stylesheet_from_css_rules":{"prefix":["wp_style_engine_get_stylesheet_from_css_rules","wsegsfcr"],"body":"wp_style_engine_get_stylesheet_from_css_rules( ${1:\\$css_rules:array}, ${2:\\$options:array} )","description":"Returns compiled CSS from a collection of selectors and declarations."},"ƒ: wp_style_engine_get_stylesheet_from_context":{"prefix":["wp_style_engine_get_stylesheet_from_context","wsegsfc"],"body":"wp_style_engine_get_stylesheet_from_context( ${1:\\$context:string}, ${2:\\$options:array} )","description":"Returns compiled CSS from a store, if found."},"ƒ: create_initial_taxonomies":{"prefix":["create_initial_taxonomies","cit"],"body":"create_initial_taxonomies(  )","description":"Creates the initial taxonomies."},"ƒ: get_taxonomies":{"prefix":["get_taxonomies","gt"],"body":"get_taxonomies( ${1:\\$args:array}, ${2:\\$output:string}, ${3:\\$operator:string} )","description":"Retrieves a list of registered taxonomy names or objects."},"ƒ: get_object_taxonomies":{"prefix":["get_object_taxonomies","got"],"body":"get_object_taxonomies( ${1:\\$object_type:string|string[]|WP_Post}, ${2:\\$output:string} )","description":"Returns the names or objects of the taxonomies which are registered for the requested object or object type, such as a post object or post type name."},"ƒ: get_taxonomy":{"prefix":["get_taxonomy","gt"],"body":"get_taxonomy( ${1:\\$taxonomy:string} )","description":"Retrieves the taxonomy object of $taxonomy."},"ƒ: taxonomy_exists":{"prefix":["taxonomy_exists","te"],"body":"taxonomy_exists( ${1:\\$taxonomy:string} )","description":"Determines whether the taxonomy name exists."},"ƒ: is_taxonomy_hierarchical":{"prefix":["is_taxonomy_hierarchical","ith"],"body":"is_taxonomy_hierarchical( ${1:\\$taxonomy:string} )","description":"Determines whether the taxonomy object is hierarchical."},"ƒ: register_taxonomy":{"prefix":["register_taxonomy","rt"],"body":"register_taxonomy( ${1:\\$taxonomy:string}, ${2:\\$object_type:array|string}, ${3:\\$args:array|string} )","description":"Creates or modifies a taxonomy object."},"ƒ: unregister_taxonomy":{"prefix":["unregister_taxonomy","ut"],"body":"unregister_taxonomy( ${1:\\$taxonomy:string} )","description":"Unregisters a taxonomy."},"ƒ: get_taxonomy_labels":{"prefix":["get_taxonomy_labels","gtl"],"body":"get_taxonomy_labels( ${1:\\$tax:WP_Taxonomy} )","description":"Builds an object with all taxonomy labels out of a taxonomy object."},"ƒ: register_taxonomy_for_object_type":{"prefix":["register_taxonomy_for_object_type","rtfot"],"body":"register_taxonomy_for_object_type( ${1:\\$taxonomy:string}, ${2:\\$object_type:string} )","description":"Adds an already registered taxonomy to an object type."},"ƒ: unregister_taxonomy_for_object_type":{"prefix":["unregister_taxonomy_for_object_type","utfot"],"body":"unregister_taxonomy_for_object_type( ${1:\\$taxonomy:string}, ${2:\\$object_type:string} )","description":"Removes an already registered taxonomy from an object type."},"ƒ: get_objects_in_term":{"prefix":["get_objects_in_term","goit"],"body":"get_objects_in_term( ${1:\\$term_ids:int|int[]}, ${2:\\$taxonomies:string|string[]}, ${3:\\$args:array|string} )","description":"Retrieves object IDs of valid taxonomy and term."},"ƒ: get_tax_sql":{"prefix":["get_tax_sql","gts"],"body":"get_tax_sql( ${1:\\$tax_query:array}, ${2:\\$primary_table:string}, ${3:\\$primary_id_column:string} )","description":"Given a taxonomy query, generates SQL to be appended to a main query."},"ƒ: get_term":{"prefix":["get_term","gt"],"body":"get_term( ${1:\\$term:int|WP_Term|object}, ${2:\\$taxonomy:string}, ${3:\\$output:string}, ${4:\\$filter:string} )","description":"Gets all term data from database by term ID."},"ƒ: get_term_by":{"prefix":["get_term_by","gtb"],"body":"get_term_by( ${1:\\$field:string}, ${2:\\$value:string|int}, ${3:\\$taxonomy:string}, ${4:\\$output:string}, ${5:\\$filter:string} )","description":"Gets all term data from database by term field and data."},"ƒ: get_term_children":{"prefix":["get_term_children","gtc"],"body":"get_term_children( ${1:\\$term_id:int}, ${2:\\$taxonomy:string} )","description":"Merges all term children into a single array of their IDs."},"ƒ: get_term_field":{"prefix":["get_term_field","gtf"],"body":"get_term_field( ${1:\\$field:string}, ${2:\\$term:int|WP_Term}, ${3:\\$taxonomy:string}, ${4:\\$context:string} )","description":"Gets sanitized term field."},"ƒ: get_term_to_edit":{"prefix":["get_term_to_edit","gtte"],"body":"get_term_to_edit( ${1:\\$id:int|object}, ${2:\\$taxonomy:string} )","description":"Sanitizes term for editing."},"ƒ: add_term_meta":{"prefix":["add_term_meta","atm"],"body":"add_term_meta( ${1:\\$term_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$unique:bool} )","description":"Adds metadata to a term."},"ƒ: delete_term_meta":{"prefix":["delete_term_meta","dtm"],"body":"delete_term_meta( ${1:\\$term_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Removes metadata matching criteria from a term."},"ƒ: get_term_meta":{"prefix":["get_term_meta","gtm"],"body":"get_term_meta( ${1:\\$term_id:int}, ${2:\\$key:string}, ${3:\\$single:bool} )","description":"Retrieves metadata for a term."},"ƒ: update_term_meta":{"prefix":["update_term_meta","utm"],"body":"update_term_meta( ${1:\\$term_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$prev_value:mixed} )","description":"Updates term metadata."},"ƒ: update_termmeta_cache":{"prefix":["update_termmeta_cache","utc"],"body":"update_termmeta_cache( ${1:\\$term_ids:array} )","description":"Updates metadata cache for list of term IDs."},"ƒ: wp_lazyload_term_meta":{"prefix":["wp_lazyload_term_meta","wltm"],"body":"wp_lazyload_term_meta( ${1:\\$term_ids:array} )","description":"Queue term meta for lazy-loading."},"ƒ: has_term_meta":{"prefix":["has_term_meta","htm"],"body":"has_term_meta( ${1:\\$term_id:int} )","description":"Gets all meta data, including meta IDs, for the given term ID."},"ƒ: register_term_meta":{"prefix":["register_term_meta","rtm"],"body":"register_term_meta( ${1:\\$taxonomy:string}, ${2:\\$meta_key:string}, ${3:\\$args:array} )","description":"Registers a meta key for terms."},"ƒ: unregister_term_meta":{"prefix":["unregister_term_meta","utm"],"body":"unregister_term_meta( ${1:\\$taxonomy:string}, ${2:\\$meta_key:string} )","description":"Unregisters a meta key for terms."},"ƒ: term_exists":{"prefix":["term_exists","te"],"body":"term_exists( ${1:\\$term:int|string}, ${2:\\$taxonomy:string}, ${3:\\$parent_term:int|null} )","description":"Determines whether a taxonomy term exists."},"ƒ: term_is_ancestor_of":{"prefix":["term_is_ancestor_of","tiao"],"body":"term_is_ancestor_of( ${1:\\$term1:int|object}, ${2:\\$term2:int|object}, ${3:\\$taxonomy:string} )","description":"Checks if a term is an ancestor of another term."},"ƒ: sanitize_term":{"prefix":["sanitize_term","st"],"body":"sanitize_term( ${1:\\$term:array|object}, ${2:\\$taxonomy:string}, ${3:\\$context:string} )","description":"Sanitizes all term fields."},"ƒ: sanitize_term_field":{"prefix":["sanitize_term_field","stf"],"body":"sanitize_term_field( ${1:\\$field:string}, ${2:\\$value:string}, ${3:\\$term_id:int}, ${4:\\$taxonomy:string}, ${5:\\$context:string} )","description":"Sanitizes the field value in the term based on the context."},"ƒ: wp_delete_object_term_relationships":{"prefix":["wp_delete_object_term_relationships","wdotr"],"body":"wp_delete_object_term_relationships( ${1:\\$object_id:int}, ${2:\\$taxonomies:string|array} )","description":"Unlinks the object from the taxonomy or taxonomies."},"ƒ: wp_delete_term":{"prefix":["wp_delete_term","wdt"],"body":"wp_delete_term( ${1:\\$term:int}, ${2:\\$taxonomy:string}, ${3:\\$args:array|string} )","description":"Removes a term from the database."},"ƒ: wp_delete_category":{"prefix":["wp_delete_category","wdc"],"body":"wp_delete_category( ${1:\\$cat_id:int} )","description":"Deletes one existing category."},"ƒ: wp_get_object_terms":{"prefix":["wp_get_object_terms","wgot"],"body":"wp_get_object_terms( ${1:\\$object_ids:int|int[]}, ${2:\\$taxonomies:string|string[]}, ${3:\\$args:array|string} )","description":"Retrieves the terms associated with the given object(s), in the supplied taxonomies."},"ƒ: wp_insert_term":{"prefix":["wp_insert_term","wit"],"body":"wp_insert_term( ${1:\\$term:string}, ${2:\\$taxonomy:string}, ${3:\\$args:array|string} )","description":"Adds a new term to the database."},"ƒ: wp_set_object_terms":{"prefix":["wp_set_object_terms","wsot"],"body":"wp_set_object_terms( ${1:\\$object_id:int}, ${2:\\$terms:string|int|array}, ${3:\\$taxonomy:string}, ${4:\\$append:bool} )","description":"Creates term and taxonomy relationships."},"ƒ: wp_add_object_terms":{"prefix":["wp_add_object_terms","waot"],"body":"wp_add_object_terms( ${1:\\$object_id:int}, ${2:\\$terms:string|int|array}, ${3:\\$taxonomy:array|string} )","description":"Adds term(s) associated with a given object."},"ƒ: wp_remove_object_terms":{"prefix":["wp_remove_object_terms","wrot"],"body":"wp_remove_object_terms( ${1:\\$object_id:int}, ${2:\\$terms:string|int|array}, ${3:\\$taxonomy:string} )","description":"Removes term(s) associated with a given object."},"ƒ: wp_unique_term_slug":{"prefix":["wp_unique_term_slug","wuts"],"body":"wp_unique_term_slug( ${1:\\$slug:string}, ${2:\\$term:object} )","description":"Makes term slug unique, if it isn't already."},"ƒ: wp_update_term":{"prefix":["wp_update_term","wut"],"body":"wp_update_term( ${1:\\$term_id:int}, ${2:\\$taxonomy:string}, ${3:\\$args:array} )","description":"Updates term based on arguments provided."},"ƒ: wp_defer_term_counting":{"prefix":["wp_defer_term_counting","wdtc"],"body":"wp_defer_term_counting( ${1:\\$defer:bool|null} )","description":"Enables or disables term counting."},"ƒ: wp_update_term_count":{"prefix":["wp_update_term_count","wutc"],"body":"wp_update_term_count( ${1:\\$terms:int|array}, ${2:\\$taxonomy:string}, ${3:\\$do_deferred:bool} )","description":"Updates the amount of terms in taxonomy."},"ƒ: wp_update_term_count_now":{"prefix":["wp_update_term_count_now","wutcn"],"body":"wp_update_term_count_now( ${1:\\$terms:array}, ${2:\\$taxonomy:string} )","description":"Performs term count update immediately."},"ƒ: clean_object_term_cache":{"prefix":["clean_object_term_cache","cotc"],"body":"clean_object_term_cache( ${1:\\$object_ids:int|array}, ${2:\\$object_type:array|string} )","description":"Removes the taxonomy relationship to terms from the cache."},"ƒ: clean_term_cache":{"prefix":["clean_term_cache","ctc"],"body":"clean_term_cache( ${1:\\$ids:int|int[]}, ${2:\\$taxonomy:string}, ${3:\\$clean_taxonomy:bool} )","description":"Removes all of the term IDs from the cache."},"ƒ: clean_taxonomy_cache":{"prefix":["clean_taxonomy_cache","ctc"],"body":"clean_taxonomy_cache( ${1:\\$taxonomy:string} )","description":"Cleans the caches for a taxonomy."},"ƒ: get_object_term_cache":{"prefix":["get_object_term_cache","gotc"],"body":"get_object_term_cache( ${1:\\$id:int}, ${2:\\$taxonomy:string} )","description":"Retrieves the cached term objects for the given object ID."},"ƒ: update_object_term_cache":{"prefix":["update_object_term_cache","uotc"],"body":"update_object_term_cache( ${1:\\$object_ids:string|int[]}, ${2:\\$object_type:string|string[]} )","description":"Updates the cache for the given term object ID(s)."},"ƒ: update_term_cache":{"prefix":["update_term_cache","utc"],"body":"update_term_cache( ${1:\\$terms:WP_Term[]}, ${2:\\$taxonomy:string} )","description":"Updates terms in cache."},"ƒ: wp_get_split_terms":{"prefix":["wp_get_split_terms","wgst"],"body":"wp_get_split_terms( ${1:\\$old_term_id:int} )","description":"Gets data about terms that previously shared a single term_id, but have since been split."},"ƒ: wp_get_split_term":{"prefix":["wp_get_split_term","wgst"],"body":"wp_get_split_term( ${1:\\$old_term_id:int}, ${2:\\$taxonomy:string} )","description":"Gets the new term ID corresponding to a previously split term."},"ƒ: wp_term_is_shared":{"prefix":["wp_term_is_shared","wtis"],"body":"wp_term_is_shared( ${1:\\$term_id:int} )","description":"Determines whether a term is shared between multiple taxonomies."},"ƒ: get_term_link":{"prefix":["get_term_link","gtl"],"body":"get_term_link( ${1:\\$term:WP_Term|int|string}, ${2:\\$taxonomy:string} )","description":"Generates a permalink for a taxonomy term archive."},"ƒ: the_taxonomies":{"prefix":["the_taxonomies","tt"],"body":"the_taxonomies( ${1:\\$args:array} )","description":"Displays the taxonomies of a post with available options."},"ƒ: get_the_taxonomies":{"prefix":["get_the_taxonomies","gtt"],"body":"get_the_taxonomies( ${1:\\$post:int|WP_Post}, ${2:\\$args:array} )","description":"Retrieves all taxonomies associated with a post."},"ƒ: get_post_taxonomies":{"prefix":["get_post_taxonomies","gpt"],"body":"get_post_taxonomies( ${1:\\$post:int|WP_Post} )","description":"Retrieves all taxonomy names for the given post."},"ƒ: is_object_in_term":{"prefix":["is_object_in_term","ioit"],"body":"is_object_in_term( ${1:\\$object_id:int}, ${2:\\$taxonomy:string}, ${3:\\$terms:int|string|int[]|string[]|null} )","description":"Determines if the given object is associated with any of the given terms."},"ƒ: is_object_in_taxonomy":{"prefix":["is_object_in_taxonomy","ioit"],"body":"is_object_in_taxonomy( ${1:\\$object_type:string}, ${2:\\$taxonomy:string} )","description":"Determines if the given object type is associated with the given taxonomy."},"ƒ: get_ancestors":{"prefix":["get_ancestors","ga"],"body":"get_ancestors( ${1:\\$object_id:int}, ${2:\\$object_type:string}, ${3:\\$resource_type:string} )","description":"Gets an array of ancestor IDs for a given object."},"ƒ: wp_get_term_taxonomy_parent_id":{"prefix":["wp_get_term_taxonomy_parent_id","wgttpi"],"body":"wp_get_term_taxonomy_parent_id( ${1:\\$term_id:int}, ${2:\\$taxonomy:string} )","description":"Returns the term's parent's term ID."},"ƒ: wp_check_term_hierarchy_for_loops":{"prefix":["wp_check_term_hierarchy_for_loops","wcthfl"],"body":"wp_check_term_hierarchy_for_loops( ${1:\\$parent_term:int}, ${2:\\$term_id:int}, ${3:\\$taxonomy:string} )","description":"Checks the given subset of the term hierarchy for hierarchy loops."},"ƒ: is_taxonomy_viewable":{"prefix":["is_taxonomy_viewable","itv"],"body":"is_taxonomy_viewable( ${1:\\$taxonomy:string|WP_Taxonomy} )","description":"Determines whether a taxonomy is considered \"viewable\"."},"ƒ: is_term_publicly_viewable":{"prefix":["is_term_publicly_viewable","itpv"],"body":"is_term_publicly_viewable( ${1:\\$term:int|WP_Term} )","description":"Determines whether a term is publicly viewable."},"ƒ: wp_cache_set_terms_last_changed":{"prefix":["wp_cache_set_terms_last_changed","wcstlc"],"body":"wp_cache_set_terms_last_changed(  )","description":"Sets the last changed time for the 'terms' cache group."},"ƒ: wp_check_term_meta_support_prefilter":{"prefix":["wp_check_term_meta_support_prefilter","wctmsp"],"body":"wp_check_term_meta_support_prefilter( ${1:\\$check:mixed} )","description":"Aborts calls to term meta if it is not supported."},"ƒ: get_query_template":{"prefix":["get_query_template","gqt"],"body":"get_query_template( ${1:\\$type:string}, ${2:\\$templates:string[]} )","description":"Retrieves path to a template."},"ƒ: get_index_template":{"prefix":["get_index_template","git"],"body":"get_index_template(  )","description":"Retrieves path of index template in current or parent template."},"ƒ: get_404_template":{"prefix":["get_404_template","g4t"],"body":"get_404_template(  )","description":"Retrieves path of 404 template in current or parent template."},"ƒ: get_archive_template":{"prefix":["get_archive_template","gat"],"body":"get_archive_template(  )","description":"Retrieves path of archive template in current or parent template."},"ƒ: get_post_type_archive_template":{"prefix":["get_post_type_archive_template","gptat"],"body":"get_post_type_archive_template(  )","description":"Retrieves path of post type archive template in current or parent template."},"ƒ: get_author_template":{"prefix":["get_author_template","gat"],"body":"get_author_template(  )","description":"Retrieves path of author template in current or parent template."},"ƒ: get_category_template":{"prefix":["get_category_template","gct"],"body":"get_category_template(  )","description":"Retrieves path of category template in current or parent template."},"ƒ: get_tag_template":{"prefix":["get_tag_template","gtt"],"body":"get_tag_template(  )","description":"Retrieves path of tag template in current or parent template."},"ƒ: get_taxonomy_template":{"prefix":["get_taxonomy_template","gtt"],"body":"get_taxonomy_template(  )","description":"Retrieves path of custom taxonomy term template in current or parent template."},"ƒ: get_date_template":{"prefix":["get_date_template","gdt"],"body":"get_date_template(  )","description":"Retrieves path of date template in current or parent template."},"ƒ: get_home_template":{"prefix":["get_home_template","ght"],"body":"get_home_template(  )","description":"Retrieves path of home template in current or parent template."},"ƒ: get_front_page_template":{"prefix":["get_front_page_template","gfpt"],"body":"get_front_page_template(  )","description":"Retrieves path of front page template in current or parent template."},"ƒ: get_privacy_policy_template":{"prefix":["get_privacy_policy_template","gppt"],"body":"get_privacy_policy_template(  )","description":"Retrieves path of Privacy Policy page template in current or parent template."},"ƒ: get_page_template":{"prefix":["get_page_template","gpt"],"body":"get_page_template(  )","description":"Retrieves path of page template in current or parent template."},"ƒ: get_search_template":{"prefix":["get_search_template","gst"],"body":"get_search_template(  )","description":"Retrieves path of search template in current or parent template."},"ƒ: get_single_template":{"prefix":["get_single_template","gst"],"body":"get_single_template(  )","description":"Retrieves path of single template in current or parent template. Applies to single Posts, single Attachments, and single custom post types."},"ƒ: get_embed_template":{"prefix":["get_embed_template","get"],"body":"get_embed_template(  )","description":"Retrieves an embed template path in the current or parent template."},"ƒ: get_singular_template":{"prefix":["get_singular_template","gst"],"body":"get_singular_template(  )","description":"Retrieves the path of the singular template in current or parent template."},"ƒ: get_attachment_template":{"prefix":["get_attachment_template","gat"],"body":"get_attachment_template(  )","description":"Retrieves path of attachment template in current or parent template."},"ƒ: wp_set_template_globals":{"prefix":["wp_set_template_globals","wstg"],"body":"wp_set_template_globals(  )","description":"Set up the globals used for template loading."},"ƒ: locate_template":{"prefix":["locate_template","lt"],"body":"locate_template( ${1:\\$template_names:string|array}, ${2:\\$load:bool}, ${3:\\$load_once:bool}, ${4:\\$args:array} )","description":"Retrieves the name of the highest priority template file that exists."},"ƒ: load_template":{"prefix":["load_template","lt"],"body":"load_template( ${1:\\$_template_file:string}, ${2:\\$load_once:bool}, ${3:\\$args:array} )","description":"Requires the template file with WordPress environment."},"ƒ: wp_get_theme_preview_path":{"prefix":["wp_get_theme_preview_path","wgtpp"],"body":"wp_get_theme_preview_path( ${1:\\$current_stylesheet:string|null} )","description":"Filters the blog option to return the path for the previewed theme."},"ƒ: wp_attach_theme_preview_middleware":{"prefix":["wp_attach_theme_preview_middleware","watpm"],"body":"wp_attach_theme_preview_middleware(  )","description":"Adds a middleware to `apiFetch` to set the theme for the preview."},"ƒ: wp_initialize_theme_preview_hooks":{"prefix":["wp_initialize_theme_preview_hooks","witph"],"body":"wp_initialize_theme_preview_hooks(  )","description":"Add filters and actions to enable Block Theme Previews in the Site Editor."},"ƒ: wp_set_unique_slug_on_create_template_part":{"prefix":["wp_set_unique_slug_on_create_template_part","wsusoctp"],"body":"wp_set_unique_slug_on_create_template_part( ${1:\\$post_id:int} )","description":"Sets a custom slug when creating auto-draft template parts."},"ƒ: wp_get_themes":{"prefix":["wp_get_themes","wgt"],"body":"wp_get_themes( ${1:\\$args:array} )","description":"Returns an array of WP_Theme objects based on the arguments."},"ƒ: wp_get_theme":{"prefix":["wp_get_theme","wgt"],"body":"wp_get_theme( ${1:\\$stylesheet:string}, ${2:\\$theme_root:string} )","description":"Gets a WP_Theme object for a theme."},"ƒ: wp_clean_themes_cache":{"prefix":["wp_clean_themes_cache","wctc"],"body":"wp_clean_themes_cache( ${1:\\$clear_update_cache:bool} )","description":"Clears the cache held by get_theme_roots() and WP_Theme."},"ƒ: is_child_theme":{"prefix":["is_child_theme","ict"],"body":"is_child_theme(  )","description":"Whether a child theme is in use."},"ƒ: get_stylesheet":{"prefix":["get_stylesheet","gs"],"body":"get_stylesheet(  )","description":"Retrieves name of the current stylesheet."},"ƒ: get_stylesheet_directory":{"prefix":["get_stylesheet_directory","gsd"],"body":"get_stylesheet_directory(  )","description":"Retrieves stylesheet directory path for the active theme."},"ƒ: get_stylesheet_directory_uri":{"prefix":["get_stylesheet_directory_uri","gsdu"],"body":"get_stylesheet_directory_uri(  )","description":"Retrieves stylesheet directory URI for the active theme."},"ƒ: get_stylesheet_uri":{"prefix":["get_stylesheet_uri","gsu"],"body":"get_stylesheet_uri(  )","description":"Retrieves stylesheet URI for the active theme."},"ƒ: get_locale_stylesheet_uri":{"prefix":["get_locale_stylesheet_uri","glsu"],"body":"get_locale_stylesheet_uri(  )","description":"Retrieves the localized stylesheet URI."},"ƒ: get_template":{"prefix":["get_template","gt"],"body":"get_template(  )","description":"Retrieves name of the active theme."},"ƒ: get_template_directory":{"prefix":["get_template_directory","gtd"],"body":"get_template_directory(  )","description":"Retrieves template directory path for the active theme."},"ƒ: get_template_directory_uri":{"prefix":["get_template_directory_uri","gtdu"],"body":"get_template_directory_uri(  )","description":"Retrieves template directory URI for the active theme."},"ƒ: get_theme_roots":{"prefix":["get_theme_roots","gtr"],"body":"get_theme_roots(  )","description":"Retrieves theme roots."},"ƒ: register_theme_directory":{"prefix":["register_theme_directory","rtd"],"body":"register_theme_directory( ${1:\\$directory:string} )","description":"Registers a directory that contains themes."},"ƒ: search_theme_directories":{"prefix":["search_theme_directories","std"],"body":"search_theme_directories( ${1:\\$force:bool} )","description":"Searches all registered theme directories for complete and valid themes."},"ƒ: get_theme_root":{"prefix":["get_theme_root","gtr"],"body":"get_theme_root( ${1:\\$stylesheet_or_template:string} )","description":"Retrieves path to themes directory."},"ƒ: get_theme_root_uri":{"prefix":["get_theme_root_uri","gtru"],"body":"get_theme_root_uri( ${1:\\$stylesheet_or_template:string}, ${2:\\$theme_root:string} )","description":"Retrieves URI for themes directory."},"ƒ: get_raw_theme_root":{"prefix":["get_raw_theme_root","grtr"],"body":"get_raw_theme_root( ${1:\\$stylesheet_or_template:string}, ${2:\\$skip_cache:bool} )","description":"Gets the raw theme root relative to the content directory with no filters applied."},"ƒ: locale_stylesheet":{"prefix":["locale_stylesheet","ls"],"body":"locale_stylesheet(  )","description":"Displays localized stylesheet link element."},"ƒ: switch_theme":{"prefix":["switch_theme","st"],"body":"switch_theme( ${1:\\$stylesheet:string} )","description":"Switches the theme."},"ƒ: validate_current_theme":{"prefix":["validate_current_theme","vct"],"body":"validate_current_theme(  )","description":"Checks that the active theme has the required files."},"ƒ: validate_theme_requirements":{"prefix":["validate_theme_requirements","vtr"],"body":"validate_theme_requirements( ${1:\\$stylesheet:string} )","description":"Validates the theme requirements for WordPress version and PHP version."},"ƒ: get_theme_mods":{"prefix":["get_theme_mods","gtm"],"body":"get_theme_mods(  )","description":"Retrieves all theme modifications."},"ƒ: get_theme_mod":{"prefix":["get_theme_mod","gtm"],"body":"get_theme_mod( ${1:\\$name:string}, ${2:\\$default_value:mixed} )","description":"Retrieves theme modification value for the active theme."},"ƒ: set_theme_mod":{"prefix":["set_theme_mod","stm"],"body":"set_theme_mod( ${1:\\$name:string}, ${2:\\$value:mixed} )","description":"Updates theme modification value for the active theme."},"ƒ: remove_theme_mod":{"prefix":["remove_theme_mod","rtm"],"body":"remove_theme_mod( ${1:\\$name:string} )","description":"Removes theme modification name from active theme list."},"ƒ: remove_theme_mods":{"prefix":["remove_theme_mods","rtm"],"body":"remove_theme_mods(  )","description":"Removes theme modifications option for the active theme."},"ƒ: get_header_textcolor":{"prefix":["get_header_textcolor","ght"],"body":"get_header_textcolor(  )","description":"Retrieves the custom header text color in 3- or 6-digit hexadecimal form."},"ƒ: header_textcolor":{"prefix":["header_textcolor","ht"],"body":"header_textcolor(  )","description":"Displays the custom header text color in 3- or 6-digit hexadecimal form (minus the hash symbol)."},"ƒ: display_header_text":{"prefix":["display_header_text","dht"],"body":"display_header_text(  )","description":"Whether to display the header text."},"ƒ: has_header_image":{"prefix":["has_header_image","hhi"],"body":"has_header_image(  )","description":"Checks whether a header image is set or not."},"ƒ: get_header_image":{"prefix":["get_header_image","ghi"],"body":"get_header_image(  )","description":"Retrieves header image for custom header."},"ƒ: get_header_image_tag":{"prefix":["get_header_image_tag","ghit"],"body":"get_header_image_tag( ${1:\\$attr:array} )","description":"Creates image tag markup for a custom header image."},"ƒ: the_header_image_tag":{"prefix":["the_header_image_tag","thit"],"body":"the_header_image_tag( ${1:\\$attr:array} )","description":"Displays the image markup for a custom header image."},"ƒ: get_random_header_image":{"prefix":["get_random_header_image","grhi"],"body":"get_random_header_image(  )","description":"Gets random header image URL from registered images in theme."},"ƒ: is_random_header_image":{"prefix":["is_random_header_image","irhi"],"body":"is_random_header_image( ${1:\\$type:string} )","description":"Checks if random header image is in use."},"ƒ: header_image":{"prefix":["header_image","hi"],"body":"header_image(  )","description":"Displays header image URL."},"ƒ: get_uploaded_header_images":{"prefix":["get_uploaded_header_images","guhi"],"body":"get_uploaded_header_images(  )","description":"Gets the header images uploaded for the active theme."},"ƒ: get_custom_header":{"prefix":["get_custom_header","gch"],"body":"get_custom_header(  )","description":"Gets the header image data."},"ƒ: register_default_headers":{"prefix":["register_default_headers","rdh"],"body":"register_default_headers( ${1:\\$headers:array} )","description":"Registers a selection of default headers to be displayed by the custom header admin UI."},"ƒ: unregister_default_headers":{"prefix":["unregister_default_headers","udh"],"body":"unregister_default_headers( ${1:\\$header:string|array} )","description":"Unregisters default headers."},"ƒ: has_header_video":{"prefix":["has_header_video","hhv"],"body":"has_header_video(  )","description":"Checks whether a header video is set or not."},"ƒ: get_header_video_url":{"prefix":["get_header_video_url","ghvu"],"body":"get_header_video_url(  )","description":"Retrieves header video URL for custom header."},"ƒ: the_header_video_url":{"prefix":["the_header_video_url","thvu"],"body":"the_header_video_url(  )","description":"Displays header video URL."},"ƒ: get_header_video_settings":{"prefix":["get_header_video_settings","ghvs"],"body":"get_header_video_settings(  )","description":"Retrieves header video settings."},"ƒ: has_custom_header":{"prefix":["has_custom_header","hch"],"body":"has_custom_header(  )","description":"Checks whether a custom header is set or not."},"ƒ: is_header_video_active":{"prefix":["is_header_video_active","ihva"],"body":"is_header_video_active(  )","description":"Checks whether the custom header video is eligible to show on the current page."},"ƒ: get_custom_header_markup":{"prefix":["get_custom_header_markup","gchm"],"body":"get_custom_header_markup(  )","description":"Retrieves the markup for a custom header."},"ƒ: the_custom_header_markup":{"prefix":["the_custom_header_markup","tchm"],"body":"the_custom_header_markup(  )","description":"Prints the markup for a custom header."},"ƒ: get_background_image":{"prefix":["get_background_image","gbi"],"body":"get_background_image(  )","description":"Retrieves background image for custom background."},"ƒ: background_image":{"prefix":["background_image","bi"],"body":"background_image(  )","description":"Displays background image path."},"ƒ: get_background_color":{"prefix":["get_background_color","gbc"],"body":"get_background_color(  )","description":"Retrieves value for custom background color."},"ƒ: background_color":{"prefix":["background_color","bc"],"body":"background_color(  )","description":"Displays background color value."},"ƒ: wp_custom_css_cb":{"prefix":["wp_custom_css_cb","wccc"],"body":"wp_custom_css_cb(  )","description":"Renders the Custom CSS style element."},"ƒ: wp_get_custom_css_post":{"prefix":["wp_get_custom_css_post","wgccp"],"body":"wp_get_custom_css_post( ${1:\\$stylesheet:string} )","description":"Fetches the `custom_css` post for a given theme."},"ƒ: wp_get_custom_css":{"prefix":["wp_get_custom_css","wgcc"],"body":"wp_get_custom_css( ${1:\\$stylesheet:string} )","description":"Fetches the saved Custom CSS content for rendering."},"ƒ: wp_update_custom_css_post":{"prefix":["wp_update_custom_css_post","wuccp"],"body":"wp_update_custom_css_post( ${1:\\$css:string}, ${2:\\$args:array} )","description":"Updates the `custom_css` post for a given theme."},"ƒ: add_editor_style":{"prefix":["add_editor_style","aes"],"body":"add_editor_style( ${1:\\$stylesheet:array|string} )","description":"Adds callback for custom TinyMCE editor stylesheets."},"ƒ: remove_editor_styles":{"prefix":["remove_editor_styles","res"],"body":"remove_editor_styles(  )","description":"Removes all visual editor stylesheets."},"ƒ: get_editor_stylesheets":{"prefix":["get_editor_stylesheets","ges"],"body":"get_editor_stylesheets(  )","description":"Retrieves any registered editor stylesheet URLs."},"ƒ: get_theme_starter_content":{"prefix":["get_theme_starter_content","gtsc"],"body":"get_theme_starter_content(  )","description":"Expands a theme's starter content configuration using core-provided data."},"ƒ: add_theme_support":{"prefix":["add_theme_support","ats"],"body":"add_theme_support( ${1:\\$feature:string}, ${2:\\$args:mixed} )","description":"Registers theme support for a given feature."},"ƒ: get_theme_support":{"prefix":["get_theme_support","gts"],"body":"get_theme_support( ${1:\\$feature:string}, ${2:\\$args:mixed} )","description":"Gets the theme support arguments passed when registering that support."},"ƒ: remove_theme_support":{"prefix":["remove_theme_support","rts"],"body":"remove_theme_support( ${1:\\$feature:string} )","description":"Allows a theme to de-register its support of a certain feature"},"ƒ: current_theme_supports":{"prefix":["current_theme_supports","cts"],"body":"current_theme_supports( ${1:\\$feature:string}, ${2:\\$args:mixed} )","description":"Checks a theme's support for a given feature."},"ƒ: require_if_theme_supports":{"prefix":["require_if_theme_supports","rits"],"body":"require_if_theme_supports( ${1:\\$feature:string}, ${2:\\$file:string} )","description":"Checks a theme's support for a given feature before loading the functions which implement it."},"ƒ: register_theme_feature":{"prefix":["register_theme_feature","rtf"],"body":"register_theme_feature( ${1:\\$feature:string}, ${2:\\$args:array} )","description":"Registers a theme feature for use in add_theme_support()."},"ƒ: get_registered_theme_features":{"prefix":["get_registered_theme_features","grtf"],"body":"get_registered_theme_features(  )","description":"Gets the list of registered theme features."},"ƒ: get_registered_theme_feature":{"prefix":["get_registered_theme_feature","grtf"],"body":"get_registered_theme_feature( ${1:\\$feature:string} )","description":"Gets the registration config for a theme feature."},"ƒ: check_theme_switched":{"prefix":["check_theme_switched","cts"],"body":"check_theme_switched(  )","description":"Checks if a theme has been changed and runs 'after_switch_theme' hook on the next WP load."},"ƒ: wp_customize_url":{"prefix":["wp_customize_url","wcu"],"body":"wp_customize_url( ${1:\\$stylesheet:string} )","description":"Returns a URL to load the Customizer."},"ƒ: wp_customize_support_script":{"prefix":["wp_customize_support_script","wcss"],"body":"wp_customize_support_script(  )","description":"Prints a script to check whether or not the Customizer is supported, and apply either the no-customize-support or customize-support class to the body."},"ƒ: is_customize_preview":{"prefix":["is_customize_preview","icp"],"body":"is_customize_preview(  )","description":"Whether the site is being previewed in the Customizer."},"ƒ: create_initial_theme_features":{"prefix":["create_initial_theme_features","citf"],"body":"create_initial_theme_features(  )","description":"Creates the initial theme features when the 'setup_theme' action is fired."},"ƒ: wp_is_block_theme":{"prefix":["wp_is_block_theme","wibt"],"body":"wp_is_block_theme(  )","description":"Returns whether the active theme is a block-based theme or not."},"ƒ: wp_theme_get_element_class_name":{"prefix":["wp_theme_get_element_class_name","wtgecn"],"body":"wp_theme_get_element_class_name( ${1:\\$element:string} )","description":"Given an element name, returns a class name."},"ƒ: wp_version_check":{"prefix":["wp_version_check","wvc"],"body":"wp_version_check( ${1:\\$extra_stats:array}, ${2:\\$force_check:bool} )","description":"Checks WordPress version against the newest version."},"ƒ: wp_update_plugins":{"prefix":["wp_update_plugins","wup"],"body":"wp_update_plugins( ${1:\\$extra_stats:array} )","description":"Checks for available updates to plugins based on the latest versions hosted on WordPress.org."},"ƒ: wp_update_themes":{"prefix":["wp_update_themes","wut"],"body":"wp_update_themes( ${1:\\$extra_stats:array} )","description":"Checks for available updates to themes based on the latest versions hosted on WordPress.org."},"ƒ: wp_maybe_auto_update":{"prefix":["wp_maybe_auto_update","wmau"],"body":"wp_maybe_auto_update(  )","description":"Performs WordPress automatic background updates."},"ƒ: wp_get_translation_updates":{"prefix":["wp_get_translation_updates","wgtu"],"body":"wp_get_translation_updates(  )","description":"Retrieves a list of all language updates available."},"ƒ: wp_get_update_data":{"prefix":["wp_get_update_data","wgud"],"body":"wp_get_update_data(  )","description":"Collects counts and UI strings for available updates."},"ƒ: wp_schedule_update_checks":{"prefix":["wp_schedule_update_checks","wsuc"],"body":"wp_schedule_update_checks(  )","description":"Schedules core, theme, and plugin update checks."},"ƒ: wp_clean_update_cache":{"prefix":["wp_clean_update_cache","wcuc"],"body":"wp_clean_update_cache(  )","description":"Clears existing update caches for plugins, themes, and core."},"ƒ: wp_delete_all_temp_backups":{"prefix":["wp_delete_all_temp_backups","wdatb"],"body":"wp_delete_all_temp_backups(  )","description":"Schedules the removal of all contents in the temporary backup directory."},"ƒ: wp_signon":{"prefix":["wp_signon","ws"],"body":"wp_signon( ${1:\\$credentials:array}, ${2:\\$secure_cookie:string|bool} )","description":"Authenticates and logs a user in with 'remember' capability."},"ƒ: wp_authenticate_username_password":{"prefix":["wp_authenticate_username_password","waup"],"body":"wp_authenticate_username_password( ${1:\\$user:WP_User|WP_Error|null}, ${2:\\$username:string}, ${3:\\$password:string} )","description":"Authenticates a user, confirming the username and password are valid."},"ƒ: wp_authenticate_email_password":{"prefix":["wp_authenticate_email_password","waep"],"body":"wp_authenticate_email_password( ${1:\\$user:WP_User|WP_Error|null}, ${2:\\$email:string}, ${3:\\$password:string} )","description":"Authenticates a user using the email and password."},"ƒ: wp_authenticate_cookie":{"prefix":["wp_authenticate_cookie","wac"],"body":"wp_authenticate_cookie( ${1:\\$user:WP_User|WP_Error|null}, ${2:\\$username:string}, ${3:\\$password:string} )","description":"Authenticates the user using the WordPress auth cookie."},"ƒ: wp_authenticate_application_password":{"prefix":["wp_authenticate_application_password","waap"],"body":"wp_authenticate_application_password( ${1:\\$input_user:WP_User|WP_Error|null}, ${2:\\$username:string}, ${3:\\$password:string} )","description":"Authenticates the user using an application password."},"ƒ: wp_validate_application_password":{"prefix":["wp_validate_application_password","wvap"],"body":"wp_validate_application_password( ${1:\\$input_user:int|false} )","description":"Validates the application password credentials passed via Basic Authentication."},"ƒ: wp_authenticate_spam_check":{"prefix":["wp_authenticate_spam_check","wasc"],"body":"wp_authenticate_spam_check( ${1:\\$user:WP_User|WP_Error|null} )","description":"For Multisite blogs, checks if the authenticated user has been marked as a spammer, or if the user's primary blog has been marked as spam."},"ƒ: wp_validate_logged_in_cookie":{"prefix":["wp_validate_logged_in_cookie","wvlic"],"body":"wp_validate_logged_in_cookie( ${1:\\$user_id:int|false} )","description":"Validates the logged-in cookie."},"ƒ: count_user_posts":{"prefix":["count_user_posts","cup"],"body":"count_user_posts( ${1:\\$userid:int}, ${2:\\$post_type:array|string}, ${3:\\$public_only:bool} )","description":"Gets the number of posts a user has written."},"ƒ: count_many_users_posts":{"prefix":["count_many_users_posts","cmup"],"body":"count_many_users_posts( ${1:\\$users:int[]}, ${2:\\$post_type:string|string[]}, ${3:\\$public_only:bool} )","description":"Gets the number of posts written by a list of users."},"ƒ: get_current_user_id":{"prefix":["get_current_user_id","gcui"],"body":"get_current_user_id(  )","description":"Gets the current user's ID."},"ƒ: get_user_option":{"prefix":["get_user_option","guo"],"body":"get_user_option( ${1:\\$option:string}, ${2:\\$user:int}, ${3:\\$deprecated:string} )","description":"Retrieves user option that can be either per Site or per Network."},"ƒ: update_user_option":{"prefix":["update_user_option","uuo"],"body":"update_user_option( ${1:\\$user_id:int}, ${2:\\$option_name:string}, ${3:\\$newvalue:mixed}, ${4:\\$is_global:bool} )","description":"Updates user option with global blog capability."},"ƒ: delete_user_option":{"prefix":["delete_user_option","duo"],"body":"delete_user_option( ${1:\\$user_id:int}, ${2:\\$option_name:string}, ${3:\\$is_global:bool} )","description":"Deletes user option with global blog capability."},"ƒ: get_user":{"prefix":["get_user","gu"],"body":"get_user( ${1:\\$user_id:int} )","description":"Retrieves user info by user ID."},"ƒ: get_users":{"prefix":["get_users","gu"],"body":"get_users( ${1:\\$args:array} )","description":"Retrieves list of users matching criteria."},"ƒ: wp_list_users":{"prefix":["wp_list_users","wlu"],"body":"wp_list_users( ${1:\\$args:string|array} )","description":"Lists all the users of the site, with several options available."},"ƒ: get_blogs_of_user":{"prefix":["get_blogs_of_user","gbou"],"body":"get_blogs_of_user( ${1:\\$user_id:int}, ${2:\\$all:bool} )","description":"Gets the sites a user belongs to."},"ƒ: is_user_member_of_blog":{"prefix":["is_user_member_of_blog","iumob"],"body":"is_user_member_of_blog( ${1:\\$user_id:int}, ${2:\\$blog_id:int} )","description":"Finds out whether a user is a member of a given blog."},"ƒ: add_user_meta":{"prefix":["add_user_meta","aum"],"body":"add_user_meta( ${1:\\$user_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$unique:bool} )","description":"Adds meta data to a user."},"ƒ: delete_user_meta":{"prefix":["delete_user_meta","dum"],"body":"delete_user_meta( ${1:\\$user_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed} )","description":"Removes metadata matching criteria from a user."},"ƒ: get_user_meta":{"prefix":["get_user_meta","gum"],"body":"get_user_meta( ${1:\\$user_id:int}, ${2:\\$key:string}, ${3:\\$single:bool} )","description":"Retrieves user meta field for a user."},"ƒ: update_user_meta":{"prefix":["update_user_meta","uum"],"body":"update_user_meta( ${1:\\$user_id:int}, ${2:\\$meta_key:string}, ${3:\\$meta_value:mixed}, ${4:\\$prev_value:mixed} )","description":"Updates user meta field based on user ID."},"ƒ: count_users":{"prefix":["count_users","cu"],"body":"count_users( ${1:\\$strategy:string}, ${2:\\$site_id:int|null|null} )","description":"Counts number of users who have each of the user roles."},"ƒ: get_user_count":{"prefix":["get_user_count","guc"],"body":"get_user_count( ${1:\\$network_id:int|null|null} )","description":"Returns the number of active users in your installation."},"ƒ: wp_maybe_update_user_counts":{"prefix":["wp_maybe_update_user_counts","wmuuc"],"body":"wp_maybe_update_user_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the total count of users on the site if live user counting is enabled."},"ƒ: wp_update_user_counts":{"prefix":["wp_update_user_counts","wuuc"],"body":"wp_update_user_counts( ${1:\\$network_id:int|null|null} )","description":"Updates the total count of users on the site."},"ƒ: wp_schedule_update_user_counts":{"prefix":["wp_schedule_update_user_counts","wsuuc"],"body":"wp_schedule_update_user_counts(  )","description":"Schedules a recurring recalculation of the total count of users."},"ƒ: wp_is_large_user_count":{"prefix":["wp_is_large_user_count","wiluc"],"body":"wp_is_large_user_count( ${1:\\$network_id:int|null|null} )","description":"Determines whether the site has a large number of users."},"ƒ: setup_userdata":{"prefix":["setup_userdata","su"],"body":"setup_userdata( ${1:\\$for_user_id:int} )","description":"Sets up global user vars."},"ƒ: wp_dropdown_users":{"prefix":["wp_dropdown_users","wdu"],"body":"wp_dropdown_users( ${1:\\$args:array|string} )","description":"Creates dropdown HTML content of users."},"ƒ: sanitize_user_field":{"prefix":["sanitize_user_field","suf"],"body":"sanitize_user_field( ${1:\\$field:string}, ${2:\\$value:mixed}, ${3:\\$user_id:int}, ${4:\\$context:string} )","description":"Sanitizes user field based on context."},"ƒ: update_user_caches":{"prefix":["update_user_caches","uuc"],"body":"update_user_caches( ${1:\\$user:object|WP_User} )","description":"Updates all user caches."},"ƒ: clean_user_cache":{"prefix":["clean_user_cache","cuc"],"body":"clean_user_cache( ${1:\\$user:WP_User|int} )","description":"Cleans all user caches."},"ƒ: username_exists":{"prefix":["username_exists","ue"],"body":"username_exists( ${1:\\$username:string} )","description":"Determines whether the given username exists."},"ƒ: email_exists":{"prefix":["email_exists","ee"],"body":"email_exists( ${1:\\$email:string} )","description":"Determines whether the given email exists."},"ƒ: validate_username":{"prefix":["validate_username","vu"],"body":"validate_username( ${1:\\$username:string} )","description":"Checks whether a username is valid."},"ƒ: wp_insert_user":{"prefix":["wp_insert_user","wiu"],"body":"wp_insert_user( ${1:\\$userdata:array|object|WP_User} )","description":"Inserts a user into the database."},"ƒ: wp_update_user":{"prefix":["wp_update_user","wuu"],"body":"wp_update_user( ${1:\\$userdata:array|object|WP_User} )","description":"Updates a user in the database."},"ƒ: wp_create_user":{"prefix":["wp_create_user","wcu"],"body":"wp_create_user( ${1:\\$username:string}, ${2:\\$password:string}, ${3:\\$email:string} )","description":"Provides a simpler way of inserting a user into the database."},"ƒ: wp_get_user_contact_methods":{"prefix":["wp_get_user_contact_methods","wgucm"],"body":"wp_get_user_contact_methods( ${1:\\$user:WP_User|null|null} )","description":"Sets up the user contact methods."},"ƒ: wp_get_password_hint":{"prefix":["wp_get_password_hint","wgph"],"body":"wp_get_password_hint(  )","description":"Gets the text suggesting how to create strong passwords."},"ƒ: get_password_reset_key":{"prefix":["get_password_reset_key","gprk"],"body":"get_password_reset_key( ${1:\\$user:WP_User} )","description":"Creates, stores, then returns a password reset key for user."},"ƒ: check_password_reset_key":{"prefix":["check_password_reset_key","cprk"],"body":"check_password_reset_key( ${1:\\$key:string}, ${2:\\$login:string} )","description":"Retrieves a user row based on password reset key and login."},"ƒ: retrieve_password":{"prefix":["retrieve_password","rp"],"body":"retrieve_password( ${1:\\$user_login:string} )","description":"Handles sending a password retrieval email to a user."},"ƒ: reset_password":{"prefix":["reset_password","rp"],"body":"reset_password( ${1:\\$user:WP_User}, ${2:\\$new_pass:string} )","description":"Handles resetting the user's password."},"ƒ: register_new_user":{"prefix":["register_new_user","rnu"],"body":"register_new_user( ${1:\\$user_login:string}, ${2:\\$user_email:string} )","description":"Handles registering a new user."},"ƒ: wp_send_new_user_notifications":{"prefix":["wp_send_new_user_notifications","wsnun"],"body":"wp_send_new_user_notifications( ${1:\\$user_id:int}, ${2:\\$notify:string} )","description":"Initiates email notifications related to the creation of new users."},"ƒ: wp_get_session_token":{"prefix":["wp_get_session_token","wgst"],"body":"wp_get_session_token(  )","description":"Retrieves the current session token from the logged_in cookie."},"ƒ: wp_get_all_sessions":{"prefix":["wp_get_all_sessions","wgas"],"body":"wp_get_all_sessions(  )","description":"Retrieves a list of sessions for the current user."},"ƒ: wp_destroy_current_session":{"prefix":["wp_destroy_current_session","wdcs"],"body":"wp_destroy_current_session(  )","description":"Removes the current session token from the database."},"ƒ: wp_destroy_other_sessions":{"prefix":["wp_destroy_other_sessions","wdos"],"body":"wp_destroy_other_sessions(  )","description":"Removes all but the current session token for the current user for the database."},"ƒ: wp_destroy_all_sessions":{"prefix":["wp_destroy_all_sessions","wdas"],"body":"wp_destroy_all_sessions(  )","description":"Removes all session tokens for the current user from the database."},"ƒ: wp_get_users_with_no_role":{"prefix":["wp_get_users_with_no_role","wguwnr"],"body":"wp_get_users_with_no_role( ${1:\\$site_id:int|null|null} )","description":"Gets the user IDs of all users with no role on this site."},"ƒ: send_confirmation_on_profile_email":{"prefix":["send_confirmation_on_profile_email","scope"],"body":"send_confirmation_on_profile_email(  )","description":"Sends a confirmation request email when a change of user email address is attempted."},"ƒ: new_user_email_admin_notice":{"prefix":["new_user_email_admin_notice","nuean"],"body":"new_user_email_admin_notice(  )","description":"Adds an admin notice alerting the user to check for confirmation request email after email address change."},"ƒ: wp_register_user_personal_data_exporter":{"prefix":["wp_register_user_personal_data_exporter","wrupde"],"body":"wp_register_user_personal_data_exporter( ${1:\\$exporters:array[]} )","description":"Registers the personal data exporter for users."},"ƒ: wp_user_personal_data_exporter":{"prefix":["wp_user_personal_data_exporter","wupde"],"body":"wp_user_personal_data_exporter( ${1:\\$email_address:string} )","description":"Finds and exports personal data associated with an email address from the user and user_meta table."},"ƒ: wp_create_user_request":{"prefix":["wp_create_user_request","wcur"],"body":"wp_create_user_request( ${1:\\$email_address:string}, ${2:\\$action_name:string}, ${3:\\$request_data:array}, ${4:\\$status:string} )","description":"Creates and logs a user request to perform a specific action."},"ƒ: wp_user_request_action_description":{"prefix":["wp_user_request_action_description","wurad"],"body":"wp_user_request_action_description( ${1:\\$action_name:string} )","description":"Gets action description from the name and return a string."},"ƒ: wp_send_user_request":{"prefix":["wp_send_user_request","wsur"],"body":"wp_send_user_request( ${1:\\$request_id:string} )","description":"Send a confirmation request email to confirm an action."},"ƒ: wp_generate_user_request_key":{"prefix":["wp_generate_user_request_key","wgurk"],"body":"wp_generate_user_request_key( ${1:\\$request_id:int} )","description":"Returns a confirmation key for a user action and stores the hashed version for future comparison."},"ƒ: wp_validate_user_request_key":{"prefix":["wp_validate_user_request_key","wvurk"],"body":"wp_validate_user_request_key( ${1:\\$request_id:string}, ${2:\\$key:string} )","description":"Validates a user request by comparing the key with the request's key."},"ƒ: wp_get_user_request":{"prefix":["wp_get_user_request","wgur"],"body":"wp_get_user_request( ${1:\\$request_id:int} )","description":"Returns the user request object for the specified request ID."},"ƒ: wp_is_application_passwords_supported":{"prefix":["wp_is_application_passwords_supported","wiaps"],"body":"wp_is_application_passwords_supported(  )","description":"Checks if Application Passwords is supported."},"ƒ: wp_is_application_passwords_available":{"prefix":["wp_is_application_passwords_available","wiapa"],"body":"wp_is_application_passwords_available(  )","description":"Checks if Application Passwords is globally available."},"ƒ: wp_is_application_passwords_available_for_user":{"prefix":["wp_is_application_passwords_available_for_user","wiapafu"],"body":"wp_is_application_passwords_available_for_user( ${1:\\$user:int|WP_User} )","description":"Checks if Application Passwords is available for a specific user."},"ƒ: wp_cache_set_users_last_changed":{"prefix":["wp_cache_set_users_last_changed","wcsulc"],"body":"wp_cache_set_users_last_changed(  )","description":"Sets the last changed time for the 'users' cache group."},"ƒ: wp_is_password_reset_allowed_for_user":{"prefix":["wp_is_password_reset_allowed_for_user","wiprafu"],"body":"wp_is_password_reset_allowed_for_user( ${1:\\$user:int|WP_User} )","description":"Checks if password reset is allowed for a specific user."},"ƒ: wp_is_mobile":{"prefix":["wp_is_mobile","wim"],"body":"wp_is_mobile(  )","description":"Test if the current browser runs on a mobile device (smart phone, tablet, etc.)."},"ƒ: register_widget":{"prefix":["register_widget","rw"],"body":"register_widget( ${1:\\$widget:string|WP_Widget} )","description":"Registers a widget."},"ƒ: unregister_widget":{"prefix":["unregister_widget","uw"],"body":"unregister_widget( ${1:\\$widget:string|WP_Widget} )","description":"Unregisters a widget."},"ƒ: register_sidebars":{"prefix":["register_sidebars","rs"],"body":"register_sidebars( ${1:\\$number:int}, ${2:\\$args:array|string} )","description":"Creates multiple sidebars."},"ƒ: register_sidebar":{"prefix":["register_sidebar","rs"],"body":"register_sidebar( ${1:\\$args:array|string} )","description":"Builds the definition for a single sidebar and returns the ID."},"ƒ: unregister_sidebar":{"prefix":["unregister_sidebar","us"],"body":"unregister_sidebar( ${1:\\$sidebar_id:string|int} )","description":"Removes a sidebar from the list."},"ƒ: is_registered_sidebar":{"prefix":["is_registered_sidebar","irs"],"body":"is_registered_sidebar( ${1:\\$sidebar_id:string|int} )","description":"Checks if a sidebar is registered."},"ƒ: wp_register_sidebar_widget":{"prefix":["wp_register_sidebar_widget","wrsw"],"body":"wp_register_sidebar_widget( ${1:\\$id:int|string}, ${2:\\$name:string}, ${3:\\$output_callback:callable}, ${4:\\$options:array}, ${5:\\$params:mixed} )","description":"Registers an instance of a widget."},"ƒ: wp_widget_description":{"prefix":["wp_widget_description","wwd"],"body":"wp_widget_description( ${1:\\$id:int|string} )","description":"Retrieves description for widget."},"ƒ: wp_sidebar_description":{"prefix":["wp_sidebar_description","wsd"],"body":"wp_sidebar_description( ${1:\\$id:string} )","description":"Retrieves description for a sidebar."},"ƒ: wp_unregister_sidebar_widget":{"prefix":["wp_unregister_sidebar_widget","wusw"],"body":"wp_unregister_sidebar_widget( ${1:\\$id:int|string} )","description":"Remove widget from sidebar."},"ƒ: wp_register_widget_control":{"prefix":["wp_register_widget_control","wrwc"],"body":"wp_register_widget_control( ${1:\\$id:int|string}, ${2:\\$name:string}, ${3:\\$control_callback:callable}, ${4:\\$options:array}, ${5:\\$params:mixed} )","description":"Registers widget control callback for customizing options."},"ƒ: wp_unregister_widget_control":{"prefix":["wp_unregister_widget_control","wuwc"],"body":"wp_unregister_widget_control( ${1:\\$id:int|string} )","description":"Removes control callback for widget."},"ƒ: dynamic_sidebar":{"prefix":["dynamic_sidebar","ds"],"body":"dynamic_sidebar( ${1:\\$index:int|string} )","description":"Displays dynamic sidebar."},"ƒ: is_active_widget":{"prefix":["is_active_widget","iaw"],"body":"is_active_widget( ${1:\\$callback:callable|false}, ${2:\\$widget_id:string|false}, ${3:\\$id_base:string|false}, ${4:\\$skip_inactive:bool} )","description":"Determines whether a given widget is displayed on the front end."},"ƒ: is_dynamic_sidebar":{"prefix":["is_dynamic_sidebar","ids"],"body":"is_dynamic_sidebar(  )","description":"Determines whether the dynamic sidebar is enabled and used by the theme."},"ƒ: is_active_sidebar":{"prefix":["is_active_sidebar","ias"],"body":"is_active_sidebar( ${1:\\$index:string|int} )","description":"Determines whether a sidebar contains widgets."},"ƒ: wp_get_sidebar":{"prefix":["wp_get_sidebar","wgs"],"body":"wp_get_sidebar( ${1:\\$id:string} )","description":"Retrieves the registered sidebar with the given ID."},"ƒ: wp_convert_widget_settings":{"prefix":["wp_convert_widget_settings","wcws"],"body":"wp_convert_widget_settings( ${1:\\$base_name:string}, ${2:\\$option_name:string}, ${3:\\$settings:array} )","description":"Converts the widget settings from single to multi-widget format."},"ƒ: the_widget":{"prefix":["the_widget","tw"],"body":"the_widget( ${1:\\$widget:string}, ${2:\\$instance:array}, ${3:\\$args:array} )","description":"Outputs an arbitrary widget as a template tag."},"ƒ: retrieve_widgets":{"prefix":["retrieve_widgets","rw"],"body":"retrieve_widgets( ${1:\\$theme_changed:string|bool} )","description":"Validates and remaps any \"orphaned\" widgets to wp_inactive_widgets sidebar, and saves the widget settings. This has to run at least on each theme change."},"ƒ: wp_map_sidebars_widgets":{"prefix":["wp_map_sidebars_widgets","wmsw"],"body":"wp_map_sidebars_widgets( ${1:\\$existing_sidebars_widgets:array} )","description":"Compares a list of sidebars with their widgets against an allowed list."},"ƒ: wp_widget_rss_output":{"prefix":["wp_widget_rss_output","wwro"],"body":"wp_widget_rss_output( ${1:\\$rss:string|array|object}, ${2:\\$args:array} )","description":"Displays the RSS entries in a list."},"ƒ: wp_widget_rss_form":{"prefix":["wp_widget_rss_form","wwrf"],"body":"wp_widget_rss_form( ${1:\\$args:array|string}, ${2:\\$inputs:array|null} )","description":"Displays RSS widget options form."},"ƒ: wp_widget_rss_process":{"prefix":["wp_widget_rss_process","wwrp"],"body":"wp_widget_rss_process( ${1:\\$widget_rss:array}, ${2:\\$check_feed:bool} )","description":"Processes RSS feed widget data and optionally retrieve feed items."},"ƒ: wp_widgets_init":{"prefix":["wp_widgets_init","wwi"],"body":"wp_widgets_init(  )","description":"Registers all of the default WordPress widgets on startup."},"ƒ: wp_use_widgets_block_editor":{"prefix":["wp_use_widgets_block_editor","wuwbe"],"body":"wp_use_widgets_block_editor(  )","description":"Determines whether or not to use the block editor to manage widgets."},"ƒ: wp_parse_widget_id":{"prefix":["wp_parse_widget_id","wpwi"],"body":"wp_parse_widget_id( ${1:\\$id:string} )","description":"Converts a widget ID into its id_base and number components."},"ƒ: wp_find_widgets_sidebar":{"prefix":["wp_find_widgets_sidebar","wfws"],"body":"wp_find_widgets_sidebar( ${1:\\$widget_id:string} )","description":"Finds the sidebar that a given widget belongs to."},"ƒ: wp_assign_widget_to_sidebar":{"prefix":["wp_assign_widget_to_sidebar","wawts"],"body":"wp_assign_widget_to_sidebar( ${1:\\$widget_id:string}, ${2:\\$sidebar_id:string} )","description":"Assigns a widget to the given sidebar."},"ƒ: wp_render_widget":{"prefix":["wp_render_widget","wrw"],"body":"wp_render_widget( ${1:\\$widget_id:string}, ${2:\\$sidebar_id:string} )","description":"Calls the render callback of a widget and returns the output."},"ƒ: wp_render_widget_control":{"prefix":["wp_render_widget_control","wrwc"],"body":"wp_render_widget_control( ${1:\\$id:string} )","description":"Calls the control callback of a widget and returns the output."}}